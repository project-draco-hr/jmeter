{
  Iterator iter=subTree.list().iterator();
  while (iter.hasNext()) {
    TestElement item=(TestElement)iter.next();
    if (item instanceof TestPlan) {
      current=(JMeterTreeNode)((JMeterTreeNode)getRoot()).getChildAt(0);
      ((TestElement)current.getUserObject()).addTestElement(item);
      ((TestPlan)current.getUserObject()).setName(item.getPropertyAsString(TestElement.NAME));
      ((TestPlan)current.getUserObject()).setFunctionalMode(item.getPropertyAsBoolean(TestPlan.FUNCTIONAL_MODE));
      ((TestPlan)current.getUserObject()).setSerialized(item.getPropertyAsBoolean(TestPlan.SERIALIZE_THREADGROUPS));
      addSubTree(subTree.getTree(item),current);
    }
 else     if (item instanceof WorkBench) {
      current=(JMeterTreeNode)((JMeterTreeNode)getRoot()).getChildAt(1);
      ((TestElement)current.getUserObject()).addTestElement(item);
      ((WorkBench)current.getUserObject()).setName(item.getPropertyAsString(TestElement.NAME));
      addSubTree(subTree.getTree(item),current);
    }
 else {
      addSubTree(subTree.getTree(item),addComponent(item,current));
    }
  }
  return getCurrentSubTree(current);
}
