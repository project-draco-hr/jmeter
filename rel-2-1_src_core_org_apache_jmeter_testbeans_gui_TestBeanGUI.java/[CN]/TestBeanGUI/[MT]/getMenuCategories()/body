{
  List menuCategories=new LinkedList();
  BeanDescriptor bd=beanInfo.getBeanDescriptor();
  if (bd.isExpert() && !JMeterUtils.isExpertMode()) {
    return null;
  }
  int matches=0;
  if (Assertion.class.isAssignableFrom(testBeanClass)) {
    menuCategories.add(MenuFactory.ASSERTIONS);
    bd.setValue(TestElement.GUI_CLASS,AbstractAssertionGui.class.getName());
    matches++;
  }
  if (ConfigElement.class.isAssignableFrom(testBeanClass)) {
    menuCategories.add(MenuFactory.CONFIG_ELEMENTS);
    bd.setValue(TestElement.GUI_CLASS,AbstractConfigGui.class.getName());
    matches++;
  }
  if (Controller.class.isAssignableFrom(testBeanClass)) {
    menuCategories.add(MenuFactory.CONTROLLERS);
    bd.setValue(TestElement.GUI_CLASS,AbstractControllerGui.class.getName());
    matches++;
  }
  if (Visualizer.class.isAssignableFrom(testBeanClass)) {
    menuCategories.add(MenuFactory.LISTENERS);
    bd.setValue(TestElement.GUI_CLASS,AbstractVisualizer.class.getName());
    matches++;
  }
  if (PostProcessor.class.isAssignableFrom(testBeanClass)) {
    menuCategories.add(MenuFactory.POST_PROCESSORS);
    bd.setValue(TestElement.GUI_CLASS,AbstractPostProcessorGui.class.getName());
    matches++;
  }
  if (PreProcessor.class.isAssignableFrom(testBeanClass)) {
    matches++;
    menuCategories.add(MenuFactory.PRE_PROCESSORS);
    bd.setValue(TestElement.GUI_CLASS,AbstractPreProcessorGui.class.getName());
  }
  if (Sampler.class.isAssignableFrom(testBeanClass)) {
    matches++;
    menuCategories.add(MenuFactory.SAMPLERS);
    bd.setValue(TestElement.GUI_CLASS,AbstractSamplerGui.class.getName());
  }
  if (Timer.class.isAssignableFrom(testBeanClass)) {
    matches++;
    menuCategories.add(MenuFactory.TIMERS);
    bd.setValue(TestElement.GUI_CLASS,AbstractTimerGui.class.getName());
  }
  if (matches == 0) {
    log.error("Could not assign GUI class to " + testBeanClass.getName());
  }
 else   if (matches > 1) {
    log.error("More than 1 GUI class found for " + testBeanClass.getName());
  }
  return menuCategories;
}
