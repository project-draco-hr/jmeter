{
  int state=ENDTAG_BEFORE_PARSING_STATE;
  StringBuffer tagContents=new StringBuffer();
  int tagBegin=0;
  int tagEnd=0;
  int inputLen=input.length();
  char ch;
  int i;
  for (i=position; (i < inputLen && state != ENDTAG_FINISHED_PARSING_STATE); i++) {
    ch=input.charAt(i);
    if (ch == '>' && state == ENDTAG_BEGIN_PARSING_STATE) {
      state=ENDTAG_FINISHED_PARSING_STATE;
      tagEnd=i;
    }
    if (state == ENDTAG_BEGIN_PARSING_STATE) {
      tagContents.append(ch);
    }
    if (state == ENDTAG_WAIT_FOR_SLASH_STATE) {
      if (ch == '/') {
        state=ENDTAG_BEGIN_PARSING_STATE;
      }
 else       return null;
    }
    if (ch == '<') {
      if (state == ENDTAG_BEFORE_PARSING_STATE) {
        tagBegin=i;
        state=ENDTAG_WAIT_FOR_SLASH_STATE;
      }
 else       if (state == ENDTAG_BEGIN_PARSING_STATE) {
        state=ENDTAG_FINISHED_PARSING_STATE;
        tagEnd=i;
      }
    }
 else     if (state == ENDTAG_BEFORE_PARSING_STATE)     return (null);
  }
  if (state == ENDTAG_BEGIN_PARSING_STATE) {
    tagEnd=i;
    state=ENDTAG_FINISHED_PARSING_STATE;
  }
  if (state == ENDTAG_FINISHED_PARSING_STATE)   return new EndTag(new TagData(tagBegin,tagEnd,tagContents.toString(),input));
 else   return null;
}
