{
  createParser("<a href=\"http://transfer.go.com/cgi/atransfer.pl?goto=http://www.signs.movies.com&name=114332&srvc=nws&context=283&guid=4AD5723D-C802-4310-A388-0B24E1A79689\" target=\"_new\"><img src=\"http://ad.abcnews.com/ad/sponsors/buena_vista_pictures/bvpi-ban0003.gif\" width=468 height=60 border=\"0\" alt=\"See Signs in Theaters 8-2 - Starring Mel Gibson\" align=><font face=\"verdana,arial,helvetica\" SIZE=\"1\"><b></b></font></a>","http://transfer.go.com");
  LinkScanner linkScanner=new LinkScanner("-l");
  parser.addScanner(linkScanner);
  parser.addScanner(linkScanner.createImageScanner("-i"));
  parseAndAssertNodeCount(1);
  assertTrue("Node 0 should be a link tag",node[0] instanceof LinkTag);
  LinkTag linkTag=(LinkTag)node[0];
  assertEquals("Link URL","http://transfer.go.com/cgi/atransfer.pl?goto=http://www.signs.movies.com&name=114332&srvc=nws&context=283&guid=4AD5723D-C802-4310-A388-0B24E1A79689",linkTag.getLink());
  assertEquals("Link Text","",linkTag.getLinkText());
  Node[] containedNodes=new Node[10];
  int i=0;
  for (SimpleNodeIterator e=linkTag.children(); e.hasMoreNodes(); ) {
    containedNodes[i++]=e.nextNode();
  }
  assertEquals("There should be 5 contained nodes in the link tag",5,i);
  assertTrue("First contained node should be an image tag",containedNodes[0] instanceof ImageTag);
  ImageTag imageTag=(ImageTag)containedNodes[0];
  assertEquals("Image Location","http://ad.abcnews.com/ad/sponsors/buena_vista_pictures/bvpi-ban0003.gif",imageTag.getImageURL());
  assertEquals("Image Height","60",imageTag.getAttribute("HEIGHT"));
  assertEquals("Image Width","468",imageTag.getAttribute("WIDTH"));
  assertEquals("Image Border","0",imageTag.getAttribute("BORDER"));
  assertEquals("Image Alt","See Signs in Theaters 8-2 - Starring Mel Gibson",imageTag.getAttribute("ALT"));
  assertTrue("Second contained node should be Tag",containedNodes[1] instanceof Tag);
  Tag tag1=(Tag)containedNodes[1];
  assertEquals("Tag Contents","font face=\"verdana,arial,helvetica\" SIZE=\"1\"",tag1.getText());
  assertTrue("Third contained node should be Tag",containedNodes[2] instanceof Tag);
  Tag tag2=(Tag)containedNodes[2];
  assertEquals("Tag Contents","b",tag2.getText());
  assertTrue("Fourth contained node should be HTMLEndTag",containedNodes[3] instanceof EndTag);
  EndTag endTag1=(EndTag)containedNodes[3];
  assertEquals("Fourth Tag contents","b",endTag1.getText());
  assertTrue("Fifth contained node should be HTMLEndTag",containedNodes[4] instanceof EndTag);
  EndTag endTag2=(EndTag)containedNodes[4];
  assertEquals("Fifth Tag contents","font",endTag2.getText());
}
