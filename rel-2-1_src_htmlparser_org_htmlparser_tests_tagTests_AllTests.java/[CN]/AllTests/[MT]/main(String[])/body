{
  String runner;
  int i;
  String arguments[];
  Class cls;
  runner=null;
  for (i=0; (i < args.length) && (null == runner); i++) {
    if (args[i].equalsIgnoreCase("-text"))     runner="junit.textui.TestRunner";
 else     if (args[i].equalsIgnoreCase("-awt"))     runner="junit.awtui.TestRunner";
 else     if (args[i].equalsIgnoreCase("-swing"))     runner="junit.swingui.TestRunner";
  }
  if (null != runner) {
    arguments=new String[args.length - 1];
    System.arraycopy(args,0,arguments,0,i - 1);
    System.arraycopy(args,i,arguments,i - 1,args.length - i);
    args=arguments;
  }
 else   runner="junit.swingui.TestRunner";
  arguments=new String[args.length + 1];
  System.arraycopy(args,0,arguments,0,args.length);
  arguments[args.length]="org.htmlparser.tests.tagTests.AllTests";
  try {
    cls=Class.forName(runner);
    java.lang.reflect.Method method=cls.getDeclaredMethod("main",new Class[]{String[].class});
    method.invoke(null,new Object[]{arguments});
  }
 catch (  Throwable t) {
    System.err.println("cannot run unit test (" + t.getMessage() + ")");
  }
}
