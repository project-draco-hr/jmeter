{
  log.debug("Trying to functorize invokee: " + invokee.getClass().getName() + " method: "+ methodName+ " types: "+ Arrays.asList(p_types));
  if (methodToInvoke == null) {
    try {
      methodToInvoke=invokee.getClass().getMethod(methodName,p_types);
    }
 catch (    Exception e) {
      for (int i=0; i < p_types.length; i++) {
        Class primitive=getPrimitive(p_types[i]);
        if (primitive != null) {
          methodToInvoke=createMethod(getNewArray(i,primitive,p_types));
          if (methodToInvoke != null)           return methodToInvoke;
        }
        Class[] interfaces=p_types[i].getInterfaces();
        for (int j=0; j < interfaces.length; j++) {
          methodToInvoke=createMethod(getNewArray(i,interfaces[j],p_types));
          if (methodToInvoke != null) {
            return methodToInvoke;
          }
        }
        Class parent=p_types[i].getSuperclass();
        methodToInvoke=createMethod(getNewArray(i,parent,p_types));
        if (methodToInvoke != null) {
          return methodToInvoke;
        }
      }
    }
  }
  return methodToInvoke;
}
