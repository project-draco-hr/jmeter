{
  testLog.debug("Testing Interleave Controller 1");
  GenericController controller=new GenericController();
  InterleaveControl sub_1=new InterleaveControl();
  sub_1.setStyle(InterleaveControl.IGNORE_SUB_CONTROLLERS);
  sub_1.addTestElement(new TestSampler("one"));
  sub_1.addTestElement(new TestSampler("two"));
  controller.addTestElement(sub_1);
  controller.addTestElement(new TestSampler("three"));
  LoopController sub_2=new LoopController();
  sub_2.setLoops(3);
  GenericController sub_3=new GenericController();
  sub_2.addTestElement(new TestSampler("four"));
  sub_3.addTestElement(new TestSampler("five"));
  sub_3.addTestElement(new TestSampler("six"));
  sub_2.addTestElement(sub_3);
  sub_2.addTestElement(new TestSampler("seven"));
  controller.addTestElement(sub_2);
  String[] interleaveOrder=new String[]{"one","two"};
  String[] order=new String[]{"dummy","three","four","five","six","seven","four","five","six","seven","four","five","six","seven"};
  int counter=14;
  controller.setRunningVersion(true);
  sub_1.setRunningVersion(true);
  sub_2.setRunningVersion(true);
  sub_3.setRunningVersion(true);
  controller.initialize();
  for (int i=0; i < 4; i++) {
    assertEquals(14,counter);
    counter=0;
    TestElement sampler=null;
    while ((sampler=controller.next()) != null) {
      if (counter == 0) {
        assertEquals(interleaveOrder[i % 2],sampler.getPropertyAsString(TestElement.NAME));
      }
 else {
        assertEquals(order[counter],sampler.getPropertyAsString(TestElement.NAME));
      }
      counter++;
    }
  }
}
