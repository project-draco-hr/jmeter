{
  super.configure(el);
  ResponseAssertion model=(ResponseAssertion)el;
  showScopeSettings(model,true);
  if (model.isContainsType()) {
    containsBox.setSelected(true);
  }
 else   if (model.isEqualsType()) {
    equalsBox.setSelected(true);
  }
 else   if (model.isSubstringType()) {
    substringBox.setSelected(true);
  }
 else {
    matchesBox.setSelected(true);
  }
  notBox.setSelected(model.isNotType());
  if (model.isTestFieldResponseData()) {
    responseStringButton.setSelected(true);
  }
 else   if (model.isTestFieldResponseDataAsDocument()) {
    responseAsDocumentButton.setSelected(true);
  }
 else   if (model.isTestFieldResponseCode()) {
    responseCodeButton.setSelected(true);
  }
 else   if (model.isTestFieldResponseMessage()) {
    responseMessageButton.setSelected(true);
  }
 else   if (model.isTestFieldResponseHeaders()) {
    responseHeadersButton.setSelected(true);
  }
 else {
    urlButton.setSelected(true);
  }
  assumeSuccess.setSelected(model.getAssumeSuccess());
  tableModel.clearData();
  for (  JMeterProperty jMeterProperty : model.getTestStrings()) {
    tableModel.addRow(new Object[]{jMeterProperty.getStringValue()});
  }
  if (model.getTestStrings().size() == 0) {
    deletePattern.setEnabled(false);
  }
 else {
    deletePattern.setEnabled(true);
  }
  tableModel.fireTableDataChanged();
}
