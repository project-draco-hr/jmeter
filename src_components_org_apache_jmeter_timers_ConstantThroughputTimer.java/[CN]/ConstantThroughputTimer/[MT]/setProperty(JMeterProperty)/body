{
  final String pn=property.getName();
  if (pn.equals("calcMode")) {
    if (property instanceof StringProperty) {
      final Object objectValue=property.getObjectValue();
      try {
        final BeanInfo beanInfo=Introspector.getBeanInfo(this.getClass());
        final ResourceBundle rb=(ResourceBundle)beanInfo.getBeanDescriptor().getValue(GenericTestBeanCustomizer.RESOURCE_BUNDLE);
        for (        Enum<Mode> e : Mode.values()) {
          final String propName=e.toString();
          if (objectValue.equals(rb.getObject(propName))) {
            final int tmpMode=e.ordinal();
            if (log.isDebugEnabled()) {
              log.debug("Converted " + pn + "="+ objectValue+ " to mode="+ tmpMode+ " using Locale: "+ rb.getLocale());
            }
            super.setProperty(pn,tmpMode);
            return;
          }
        }
        log.warn("Could not convert " + pn + "="+ objectValue+ " using Locale: "+ rb.getLocale());
      }
 catch (      IntrospectionException e) {
        log.error("Could not find BeanInfo",e);
      }
    }
  }
  super.setProperty(property);
}
