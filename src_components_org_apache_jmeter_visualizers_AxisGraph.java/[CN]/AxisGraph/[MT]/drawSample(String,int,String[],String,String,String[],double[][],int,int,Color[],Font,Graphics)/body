{
  double max=maxYAxisScale > 0 ? maxYAxisScale : findMax(_data);
  try {
    if (_maxLength < 3) {
      _maxLength=3;
    }
    if (_title.length() == 0) {
      _title=JMeterUtils.getResString("aggregate_graph_title");
    }
    for (int i=0; i < _xAxisLabels.length; i++) {
      String label=_xAxisLabels[i];
      _xAxisLabels[i]=squeeze(label,_maxLength);
    }
    this.setPreferredSize(new Dimension(_width,_height));
    DataSeries dataSeries=new DataSeries(_xAxisLabels,null,_yAxisTitle,_title);
    ClusteredBarChartProperties clusteredBarChartProperties=new ClusteredBarChartProperties();
    clusteredBarChartProperties.setShowOutlinesFlag(outlinesBarFlag);
    ValueLabelRenderer valueLabelRenderer=new ValueLabelRenderer(false,false,showGrouping,0);
    valueLabelRenderer.setValueLabelPosition(ValueLabelPosition.AT_TOP);
    valueLabelRenderer.setValueChartFont(new ChartFont(valueFont,foreColor));
    valueLabelRenderer.useVerticalLabels(valueOrientation);
    clusteredBarChartProperties.addPostRenderEventListener(valueLabelRenderer);
    Paint[] paints=new Paint[_color.length];
    for (int i=0; i < _color.length; i++) {
      paints[i]=_color[i];
    }
    AxisChartDataSet axisChartDataSet=new AxisChartDataSet(_data,_legendLabels,paints,ChartType.BAR_CLUSTERED,clusteredBarChartProperties);
    dataSeries.addIAxisPlotDataSet(axisChartDataSet);
    ChartProperties chartProperties=new ChartProperties();
    LabelAxisProperties xaxis=new LabelAxisProperties();
    DataAxisProperties yaxis=new DataAxisProperties();
    yaxis.setUseCommas(showGrouping);
    if (legendFont != null) {
      yaxis.setAxisTitleChartFont(new ChartFont(legendFont,new Color(20)));
      yaxis.setScaleChartFont(new ChartFont(legendFont,new Color(20)));
      xaxis.setAxisTitleChartFont(new ChartFont(legendFont,new Color(20)));
      xaxis.setScaleChartFont(new ChartFont(legendFont,new Color(20)));
    }
    if (titleFont != null) {
      chartProperties.setTitleFont(new ChartFont(titleFont,new Color(0)));
    }
    try {
      BigDecimal round=new BigDecimal(max / 1000d);
      round=round.setScale(0,BigDecimal.ROUND_UP);
      double topValue=round.doubleValue() * 1000;
      yaxis.setUserDefinedScale(0,500);
      yaxis.setNumItems((int)(topValue / 500) + 1);
      yaxis.setShowGridLines(1);
    }
 catch (    PropertyException e) {
      log.warn("",e);
    }
    AxisProperties axisProperties=new AxisProperties(xaxis,yaxis);
    axisProperties.setXAxisLabelsAreVertical(true);
    LegendProperties legendProperties=new LegendProperties();
    legendProperties.setBorderStroke(null);
    legendProperties.setPlacement(legendPlacement);
    if (legendFont != null) {
      legendProperties.setFont(legendFont);
    }
    AxisChart axisChart=new AxisChart(dataSeries,chartProperties,axisProperties,legendProperties,_width,_height);
    axisChart.setGraphics2D((Graphics2D)g);
    axisChart.render();
  }
 catch (  ChartDataException e) {
    log.warn("",e);
  }
catch (  PropertyException e) {
    log.warn("",e);
  }
}
