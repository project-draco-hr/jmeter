{
  int counter=0;
  float average;
  long deviation, median;
synchronized (statCalc) {
    statCalc.addValue(sample);
    counter=statCalc.getCount();
    average=(float)statCalc.getMean();
    deviation=(long)statCalc.getStandardDeviation();
    median=statCalc.getMedian().longValue();
    long start=timeStamp - sample;
    if (startTime > start) {
      startTime=start;
    }
    if (endTime < timeStamp) {
      endTime=timeStamp;
    }
  }
  float throughput=0;
  if (endTime - startTime > 0) {
    throughput=(float)(((float)(samples.size() + 1)) / ((float)(timeStamp - startTime)) * 60000);
  }
  if (throughput > throughputMax) {
    bigChange=true;
    throughputMax=(int)(throughput * 1.5F);
  }
  if (average > graphMax) {
    bigChange=true;
    graphMax=(long)average * 3;
  }
  if (deviation > graphMax) {
    bigChange=true;
    graphMax=deviation * 3;
  }
  Sample s=new Sample(sample,(long)average,deviation,throughput,median,!success);
  previous=sample;
  current=s;
  samples.add(s);
  return s;
}
