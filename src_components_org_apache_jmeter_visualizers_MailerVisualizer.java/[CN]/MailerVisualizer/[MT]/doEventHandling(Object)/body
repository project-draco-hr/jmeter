{
  if (source == addressField) {
    model.setToAddress(this.addressField.getText());
  }
 else   if (source == fromField) {
    model.setFromAddress(this.fromField.getText());
  }
 else   if (source == smtpHostField) {
    model.setSmtpHost(this.smtpHostField.getText());
  }
 else   if (source == failureSubjectField) {
    model.setFailureSubject(this.failureSubjectField.getText());
  }
 else   if (source == successSubjectField) {
    model.setSuccessSubject(this.successSubjectField.getText());
  }
 else   if (source == failureLimitField) {
    try {
      model.setFailureLimit(Long.parseLong(this.failureLimitField.getText()));
    }
 catch (    NumberFormatException e) {
      log.warn("failureLimitField=" + failureLimitField.getText(),e);
      JOptionPane.showMessageDialog(null,JMeterUtils.getResString("you_must_enter_a_valid_number"),"Error",JOptionPane.ERROR_MESSAGE);
    }
  }
 else   if (source == successLimitField) {
    try {
      model.setSuccessLimit(Long.parseLong(this.successLimitField.getText()));
    }
 catch (    NumberFormatException e) {
      log.warn("successLimitField=" + successLimitField.getText(),e);
      JOptionPane.showMessageDialog(null,JMeterUtils.getResString("you_must_enter_a_valid_number"),"Error",JOptionPane.ERROR_MESSAGE);
    }
  }
}
