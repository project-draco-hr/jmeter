{
  double max=maxYAxisScale > 0 ? maxYAxisScale : findMax(_data);
  try {
    if (_title.length() == 0) {
      _title=JMeterUtils.getResString("graph_resp_time_title");
    }
    this.setPreferredSize(new Dimension(_width,_height));
    DataSeries dataSeries=new DataSeries(_xAxisLabels,null,_yAxisTitle,_title);
    Stroke[] strokes=new Stroke[_legendLabels.length];
    for (int i=0; i < _legendLabels.length; i++) {
      strokes[i]=new BasicStroke(strokeWidth,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND,5f);
    }
    Shape[] shapes=new Shape[_legendLabels.length];
    for (int i=0; i < _legendLabels.length; i++) {
      shapes[i]=pointShape;
    }
    LineChartProperties lineChartProperties=new LineChartProperties(strokes,shapes);
    Paint[] paints=new Paint[_color.length];
    for (int i=0; i < _color.length; i++) {
      paints[i]=_color[i];
    }
    AxisChartDataSet axisChartDataSet=new AxisChartDataSet(_data,_legendLabels,paints,ChartType.LINE,lineChartProperties);
    dataSeries.addIAxisPlotDataSet(axisChartDataSet);
    ChartProperties chartProperties=new ChartProperties();
    LabelAxisProperties xaxis=new LabelAxisProperties();
    DataAxisProperties yaxis=new DataAxisProperties();
    yaxis.setUseCommas(showGrouping);
    if (legendFont != null) {
      yaxis.setAxisTitleChartFont(new ChartFont(legendFont,new Color(20)));
      yaxis.setScaleChartFont(new ChartFont(legendFont,new Color(20)));
      xaxis.setAxisTitleChartFont(new ChartFont(legendFont,new Color(20)));
      xaxis.setScaleChartFont(new ChartFont(legendFont,new Color(20)));
    }
    if (titleFont != null) {
      chartProperties.setTitleFont(new ChartFont(titleFont,new Color(0)));
    }
    try {
      BigDecimal round=new BigDecimal(max / 1000d);
      round=round.setScale(0,BigDecimal.ROUND_UP);
      double topValue=round.doubleValue() * 1000;
      yaxis.setUserDefinedScale(0,500);
      yaxis.setNumItems((int)(topValue / 500) + 1);
      yaxis.setShowGridLines(1);
    }
 catch (    PropertyException e) {
      log.warn("",e);
    }
    AxisProperties axisProperties=new AxisProperties(xaxis,yaxis);
    axisProperties.setXAxisLabelsAreVertical(true);
    LegendProperties legendProperties=new LegendProperties();
    legendProperties.setBorderStroke(null);
    legendProperties.setPlacement(legendPlacement);
    legendProperties.setIconBorderPaint(Color.WHITE);
    legendProperties.setIconBorderStroke(new BasicStroke(0f,BasicStroke.CAP_SQUARE,BasicStroke.CAP_SQUARE));
    legendProperties.setNumColumns(LegendProperties.COLUMNS_FIT_TO_IMAGE);
    if (legendPlacement == LegendAreaProperties.RIGHT || legendPlacement == LegendAreaProperties.LEFT) {
      legendProperties.setNumColumns(1);
    }
    if (legendFont != null) {
      legendProperties.setFont(legendFont);
    }
    AxisChart axisChart=new AxisChart(dataSeries,chartProperties,axisProperties,legendProperties,_width,_height);
    axisChart.setGraphics2D((Graphics2D)g);
    axisChart.render();
  }
 catch (  ChartDataException e) {
    log.warn("",e);
  }
catch (  PropertyException e) {
    log.warn("",e);
  }
}
