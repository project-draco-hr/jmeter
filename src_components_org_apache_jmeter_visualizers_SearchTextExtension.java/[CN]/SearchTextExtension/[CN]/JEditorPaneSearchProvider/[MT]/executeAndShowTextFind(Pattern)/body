{
  boolean found=false;
  if (results != null && results.getText().length() > 0 && pattern != null) {
    if (log.isDebugEnabled()) {
      log.debug("lastPosition=" + lastPosition);
    }
    Matcher matcher=null;
    try {
      Document contentDoc=results.getDocument();
      String body=contentDoc.getText(lastPosition,(contentDoc.getLength() - lastPosition));
      matcher=pattern.matcher(body);
      if ((matcher != null) && (matcher.find())) {
        selection.removeAllHighlights();
        selection.addHighlight(lastPosition + matcher.start(),lastPosition + matcher.end(),painter);
        results.setCaretPosition(lastPosition + matcher.end());
        lastPosition=lastPosition + matcher.end();
        found=true;
      }
 else {
        lastPosition=LAST_POSITION_DEFAULT;
        results.setCaretPosition(0);
      }
    }
 catch (    BadLocationException ble) {
      log.error("Location exception in text find",ble);
    }
  }
  return found;
}
