{
  final Object eventSource=event.getSource();
  if (eventSource == displayButton) {
    makeGraph();
    tabbedGraph.setSelectedIndex(1);
  }
 else   if (eventSource == saveGraph) {
    saveGraphToFile=true;
    try {
      ActionRouter.getInstance().getAction(ActionNames.SAVE_GRAPHICS,SaveGraphics.class.getName()).doAction(new ActionEvent(this,1,ActionNames.SAVE_GRAPHICS));
    }
 catch (    Exception e) {
      log.error(e.getMessage());
    }
  }
 else   if (eventSource == saveTable) {
    JFileChooser chooser=FileDialoger.promptToSaveFile("statistics.csv");
    if (chooser == null) {
      return;
    }
    FileWriter writer=null;
    try {
      writer=new FileWriter(chooser.getSelectedFile());
      CSVSaveService.saveCSVStats(getAllTableData(),writer,saveHeaders.isSelected() ? COLUMNS : null);
    }
 catch (    FileNotFoundException e) {
      log.warn(e.getMessage());
    }
catch (    IOException e) {
      log.warn(e.getMessage());
    }
 finally {
      JOrphanUtils.closeQuietly(writer);
    }
  }
 else   if (eventSource == chooseBarColor) {
    colorBarGraph=JColorChooser.showDialog(null,JMeterUtils.getResString("aggregate_graph_choose_color"),colorBarGraph);
    currentColor.setBackground(colorBarGraph);
  }
 else   if (eventSource == chooseForeColor) {
    colorForeGraph=JColorChooser.showDialog(null,JMeterUtils.getResString("aggregate_graph_choose_color"),colorBarGraph);
    currentColor.setForeground(colorForeGraph);
  }
 else   if (eventSource == syncWithName) {
    graphTitle.setText(namePanel.getName());
  }
 else   if (eventSource == dynamicGraphSize) {
    if (dynamicGraphSize.isSelected()) {
      graphWidth.setEnabled(false);
      graphHeight.setEnabled(false);
    }
 else {
      graphWidth.setEnabled(true);
      graphHeight.setEnabled(true);
    }
  }
 else   if (eventSource == columnSelection) {
    if (columnSelection.isSelected()) {
      columnMatchLabel.setEnabled(true);
      reloadButton.setEnabled(true);
      caseChkBox.setEnabled(true);
      regexpChkBox.setEnabled(true);
    }
 else {
      columnMatchLabel.setEnabled(false);
      reloadButton.setEnabled(false);
      caseChkBox.setEnabled(false);
      regexpChkBox.setEnabled(false);
    }
  }
 else   if (eventSource == reloadButton) {
    if (getFile() != null && getFile().length() > 0) {
      clearData();
      FilePanel filePanel=(FilePanel)getFilePanel();
      filePanel.actionPerformed(event);
    }
  }
}
