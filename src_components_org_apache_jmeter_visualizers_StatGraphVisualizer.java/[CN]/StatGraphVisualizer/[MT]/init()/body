{
  this.setLayout(new BorderLayout());
  JPanel mainPanel=new JPanel();
  Border margin=new EmptyBorder(10,10,5,10);
  Border margin2=new EmptyBorder(10,10,5,10);
  mainPanel.setBorder(margin);
  mainPanel.setLayout(new BoxLayout(mainPanel,BoxLayout.Y_AXIS));
  mainPanel.add(makeTitlePanel());
  myJTable=new JTable(model);
  myJTable.setPreferredScrollableViewportSize(new Dimension(500,70));
  myScrollPane=new JScrollPane(myJTable);
  graph=new VerticalPanel();
  graph.setBorder(margin2);
  JLabel graphLabel=new JLabel(JMeterUtils.getResString("aggregate_graph"));
  graphPanel=new AxisGraph();
  graphPanel.setPreferredSize(new Dimension(defaultWidth,defaultHeight));
  HorizontalPanel buttonpanel=new HorizontalPanel();
  buttonpanel.add(columns);
  buttonpanel.add(displayButton);
  buttonpanel.add(saveGraph);
  graph.add(graphLabel);
  graph.add(graphTitle);
  graph.add(graphWidth);
  graph.add(graphHeight);
  graph.add(buttonpanel);
  graph.add(graphPanel);
  displayButton.addActionListener(this);
  saveGraph.addActionListener(this);
  graphScroll=new JScrollPane(graph);
  graphScroll.setAutoscrolls(true);
  spane=new JSplitPane(JSplitPane.VERTICAL_SPLIT);
  spane.setLeftComponent(myScrollPane);
  spane.setRightComponent(graphScroll);
  spane.setResizeWeight(.2);
  spane.setContinuousLayout(true);
  this.add(mainPanel,BorderLayout.NORTH);
  this.add(spane,BorderLayout.CENTER);
}
