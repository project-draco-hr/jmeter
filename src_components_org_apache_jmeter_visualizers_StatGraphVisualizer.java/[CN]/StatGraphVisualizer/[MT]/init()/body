{
  this.setLayout(new BorderLayout());
  JPanel mainPanel=new JPanel();
  Border margin=new EmptyBorder(10,10,5,10);
  Border margin2=new EmptyBorder(10,10,5,10);
  mainPanel.setBorder(margin);
  mainPanel.setLayout(new BoxLayout(mainPanel,BoxLayout.Y_AXIS));
  mainPanel.add(makeTitlePanel());
  myJTable=new JTable(model);
  if (JMeterUtils.getHiDPIMode()) {
    myJTable.setRowHeight((int)Math.round(myJTable.getRowHeight() * JMeterUtils.getHiDPIScaleFactor()));
  }
  myJTable.getTableHeader().setDefaultRenderer(new HeaderAsPropertyRenderer(COLUMNS_MSG_PARAMETERS));
  myJTable.setPreferredScrollableViewportSize(new Dimension(500,70));
  RendererUtils.applyRenderers(myJTable,RENDERERS);
  myScrollPane=new JScrollPane(myJTable);
  settingsPane=new VerticalPanel();
  settingsPane.setBorder(margin2);
  graphPanel=new AxisGraph();
  graphPanel.setPreferredSize(new Dimension(defaultWidth,defaultHeight));
  settingsPane.add(createGraphActionsPane());
  settingsPane.add(createGraphColumnPane());
  settingsPane.add(createGraphTitlePane());
  settingsPane.add(createGraphDimensionPane());
  JPanel axisPane=new JPanel(new BorderLayout());
  axisPane.add(createGraphXAxisPane(),BorderLayout.WEST);
  axisPane.add(createGraphYAxisPane(),BorderLayout.CENTER);
  settingsPane.add(axisPane);
  settingsPane.add(createLegendPane());
  tabbedGraph.addTab(JMeterUtils.getResString("aggregate_graph_tab_settings"),settingsPane);
  tabbedGraph.addTab(JMeterUtils.getResString("aggregate_graph_tab_graph"),graphPanel);
  ChangeListener changeListener=new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent changeEvent){
      JTabbedPane srcTab=(JTabbedPane)changeEvent.getSource();
      int index=srcTab.getSelectedIndex();
      if (srcTab.getTitleAt(index).equals(JMeterUtils.getResString("aggregate_graph_tab_graph"))) {
        actionMakeGraph();
      }
    }
  }
;
  tabbedGraph.addChangeListener(changeListener);
  spane=new JSplitPane(JSplitPane.VERTICAL_SPLIT);
  spane.setLeftComponent(myScrollPane);
  spane.setRightComponent(tabbedGraph);
  spane.setResizeWeight(.2);
  spane.setBorder(null);
  spane.setContinuousLayout(true);
  this.add(mainPanel,BorderLayout.NORTH);
  this.add(spane,BorderLayout.CENTER);
}
