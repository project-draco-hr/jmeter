{
  boolean isDebugEnabled=LOGGER.isDebugEnabled();
  List<SampleResult> sampleResults=new ArrayList<SampleResult>(listenerClientData.queue.size());
  try {
    try {
      boolean endOfLoop=false;
      while (!endOfLoop) {
        if (isDebugEnabled) {
          LOGGER.debug("Thread:" + Thread.currentThread().getName() + " taking SampleResult from queue:"+ listenerClientData.queue.size());
        }
        SampleResult sampleResult=listenerClientData.queue.take();
        if (isDebugEnabled) {
          LOGGER.debug("Thread:" + Thread.currentThread().getName() + " took SampleResult:"+ sampleResult+ ", isFinal:"+ (sampleResult == FINAL_SAMPLE_RESULT));
        }
        while (!(endOfLoop=(sampleResult == FINAL_SAMPLE_RESULT)) && sampleResult != null) {
          sampleResults.add(sampleResult);
          if (isDebugEnabled) {
            LOGGER.debug("Thread:" + Thread.currentThread().getName() + " polling from queue:"+ listenerClientData.queue.size());
          }
          sampleResult=listenerClientData.queue.poll();
          if (isDebugEnabled) {
            LOGGER.debug("Thread:" + Thread.currentThread().getName() + " took from queue:"+ sampleResult+ ", isFinal:"+ (sampleResult == FINAL_SAMPLE_RESULT));
          }
        }
        if (isDebugEnabled) {
          LOGGER.debug("Thread:" + Thread.currentThread().getName() + " exiting with FINAL EVENT:"+ (sampleResult == FINAL_SAMPLE_RESULT)+ ", null:"+ (sampleResult == null));
        }
        sendToListener(backendListenerClient,context,sampleResults);
        if (!endOfLoop) {
          LockSupport.parkNanos(100);
        }
      }
    }
 catch (    InterruptedException e) {
    }
    sendToListener(backendListenerClient,context,sampleResults);
    LOGGER.info("Worker ended");
  }
  finally {
    listenerClientData.latch.countDown();
  }
}
