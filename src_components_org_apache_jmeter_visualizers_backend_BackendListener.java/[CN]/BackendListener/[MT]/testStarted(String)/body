{
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug(whoAmI() + "\ttestStarted(" + host+ ")");
  }
  int queueSize;
  final String size=getQueueSize();
  try {
    queueSize=Integer.parseInt(size);
  }
 catch (  NumberFormatException nfe) {
    LOGGER.warn("Invalid queue size '" + size + "' defaulting to "+ DEFAULT_QUEUE_SIZE);
    queueSize=Integer.parseInt(DEFAULT_QUEUE_SIZE);
  }
  queue=new ArrayBlockingQueue<SampleResult>(queueSize);
  initClass();
  queueWaits=new AtomicLong(0L);
  queueWaitTime=new AtomicLong(0L);
  LOGGER.info(getName() + ":Starting worker with class:" + clientClass+ " and queue capacity:"+ getQueueSize());
  backendListenerClient=createBackendListenerClientImpl(clientClass);
  BackendListenerContext context=new BackendListenerContext((Arguments)getArguments().clone());
  try {
    backendListenerClient.setupTest(context);
  }
 catch (  Exception e) {
    throw new java.lang.IllegalStateException("Failed calling setupTest",e);
  }
  Worker worker=new Worker(backendListenerClient,(Arguments)getArguments().clone(),queue);
  worker.setDaemon(true);
  worker.start();
  LOGGER.info(getName() + ": Started  worker with class:" + clientClass);
}
