{
  if (event.getSource() == classnameCombo) {
    String className=((String)classnameCombo.getSelectedItem()).trim();
    try {
      BackendListenerClient client=(BackendListenerClient)Class.forName(className,true,Thread.currentThread().getContextClassLoader()).newInstance();
      Arguments currArgs=new Arguments();
      argsPanel.modifyTestElement(currArgs);
      Map<String,String> currArgsMap=currArgs.getArgumentsAsMap();
      Arguments newArgs=new Arguments();
      Arguments testParams=null;
      try {
        testParams=client.getDefaultParameters();
      }
 catch (      AbstractMethodError e) {
        LOGGER.warn("BackendListenerClient doesn't implement " + "getDefaultParameters.  Default parameters won't " + "be shown.  Please update your client class: "+ className);
      }
      if (testParams != null) {
        for (        JMeterProperty jMeterProperty : testParams.getArguments()) {
          Argument arg=(Argument)jMeterProperty.getObjectValue();
          String name=arg.getName();
          String value=arg.getValue();
          if (currArgsMap.containsKey(name)) {
            String newVal=currArgsMap.get(name);
            if (newVal != null && newVal.length() > 0) {
              value=newVal;
            }
          }
          newArgs.addArgument(name,value);
        }
      }
      argsPanel.configure(newArgs);
    }
 catch (    Exception e) {
      LOGGER.error("Error getting argument list for " + className,e);
    }
  }
}
