{
  List<String> possibleClasses=new ArrayList<String>();
  try {
    possibleClasses=ClassFinder.findClassesThatExtend(JMeterUtils.getSearchPaths(),new Class[]{BackendListenerClient.class});
    possibleClasses.remove(BackendListener.class.getName() + "$ErrorBackendListenerClient");
  }
 catch (  Exception e) {
    LOGGER.debug("Exception getting interfaces.",e);
  }
  JLabel label=new JLabel(JMeterUtils.getResString("backend_listener_classname"));
  classnameCombo=new JComboBox(possibleClasses.toArray());
  classnameCombo.addActionListener(this);
  classnameCombo.setEditable(false);
  label.setLabelFor(classnameCombo);
  HorizontalPanel classNamePanel=new HorizontalPanel();
  classNamePanel.add(label);
  classNamePanel.add(classnameCombo);
  queueSize=new JTextField(BackendListener.DEFAULT_QUEUE_SIZE,5);
  queueSize.setName("Queue Size");
  JLabel queueSizeLabel=new JLabel(JMeterUtils.getResString("backend_listener_queue_size"));
  queueSizeLabel.setLabelFor(queueSize);
  HorizontalPanel queueSizePanel=new HorizontalPanel();
  queueSizePanel.add(queueSizeLabel,BorderLayout.WEST);
  queueSizePanel.add(queueSize);
  JPanel panel=new JPanel(new BorderLayout(0,5));
  panel.add(classNamePanel,BorderLayout.NORTH);
  panel.add(queueSizePanel,BorderLayout.CENTER);
  return panel;
}
