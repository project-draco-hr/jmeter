{
  boolean cancelState=timerHandle.cancel(false);
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug("Canceled state:" + cancelState);
  }
  scheduler.shutdown();
  try {
    scheduler.awaitTermination(30,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    LOGGER.error("Error waiting for end of scheduler");
  }
  sendMetrics();
  samplersToFilter.clear();
  graphiteMetricsManager.destroy();
  super.teardownTest(context);
}
