{
  if (metrics.size() > 0) {
    SocketOutputStream out=null;
    try {
      String payload=convertMetricsToPickleFormat(metrics);
      int length=payload.length();
      byte[] header=ByteBuffer.allocate(4).putInt(length).array();
      out=socketOutputStreamPool.borrowObject(socketConnectionInfos);
      out.write(header);
      Writer pickleWriter=new OutputStreamWriter(out,CHARSET_NAME);
      pickleWriter.write(payload);
      pickleWriter.flush();
      socketOutputStreamPool.returnObject(socketConnectionInfos,out);
    }
 catch (    Exception e) {
      if (out != null) {
        try {
          socketOutputStreamPool.invalidateObject(socketConnectionInfos,out);
        }
 catch (        Exception e1) {
          LOG.warn("Exception invalidating socketOutputStream connected to graphite server '" + socketConnectionInfos.getHost() + "':"+ socketConnectionInfos.getPort(),e1);
        }
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Error writing to Graphite",e);
      }
 else {
        LOG.warn("Error writing to Graphite:" + e.getMessage());
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Wrote " + metrics.size() + " metrics");
    }
    metrics.clear();
  }
}
