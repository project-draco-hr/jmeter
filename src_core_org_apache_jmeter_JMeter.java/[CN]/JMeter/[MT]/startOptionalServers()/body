{
  int bshport=JMeterUtils.getPropDefault("beanshell.server.port",0);
  String bshfile=JMeterUtils.getPropDefault("beanshell.server.file","");
  if (bshport > 0) {
    log.info("Starting Beanshell server (" + bshport + ","+ bshfile+ ")");
    Runnable t=new BeanShellServer(bshport,bshfile);
    t.run();
  }
  String bshinit=JMeterUtils.getProperty("beanshell.init.file");
  if (bshinit != null) {
    log.info("Run Beanshell on file: " + bshinit);
    try {
      BeanShellInterpreter bsi=new BeanShellInterpreter();
      bsi.source(bshinit);
    }
 catch (    ClassNotFoundException e) {
      log.warn("Could not start Beanshell: " + e.getLocalizedMessage());
    }
catch (    JMeterException e) {
      log.warn("Could not process Beanshell file: " + e.getLocalizedMessage());
    }
  }
  int mirrorPort=JMeterUtils.getPropDefault("mirror.server.port",0);
  if (mirrorPort > 0) {
    log.info("Starting Mirror server (" + mirrorPort + ")");
    try {
      Object instance=ClassTools.construct("org.apache.jmeter.protocol.http.control.HttpMirrorControl",mirrorPort);
      ClassTools.invoke(instance,"startHttpMirror");
    }
 catch (    JMeterException e) {
      log.warn("Could not start Mirror server",e);
    }
  }
}
