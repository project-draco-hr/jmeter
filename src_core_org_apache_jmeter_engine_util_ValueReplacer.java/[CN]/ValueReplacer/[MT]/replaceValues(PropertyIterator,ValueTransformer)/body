{
  List<JMeterProperty> props=new LinkedList<>();
  while (iter.hasNext()) {
    JMeterProperty val=iter.next();
    if (log.isDebugEnabled()) {
      log.debug("About to replace in property of type: " + val.getClass() + ": "+ val);
    }
    if (val instanceof StringProperty) {
      if (!val.getName().equals(TestElement.GUI_CLASS) && !val.getName().equals(TestElement.TEST_CLASS)) {
        val=transform.transformValue(val);
        if (log.isDebugEnabled()) {
          log.debug("Replacement result: " + val);
        }
      }
    }
 else     if (val instanceof NumberProperty) {
      val=transform.transformValue(val);
      if (log.isDebugEnabled()) {
        log.debug("Replacement result: " + val);
      }
    }
 else     if (val instanceof MultiProperty) {
      MultiProperty multiVal=(MultiProperty)val;
      Collection<JMeterProperty> newValues=replaceValues(multiVal.iterator(),transform);
      multiVal.clear();
      for (      JMeterProperty jmp : newValues) {
        multiVal.addProperty(jmp);
      }
      if (log.isDebugEnabled()) {
        log.debug("Replacement result: " + multiVal);
      }
    }
 else {
      if (log.isDebugEnabled()) {
        log.debug("Won't replace " + val);
      }
    }
    props.add(val);
  }
  return props;
}
