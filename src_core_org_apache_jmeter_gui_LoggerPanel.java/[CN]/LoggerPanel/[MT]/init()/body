{
  this.setLayout(new BorderLayout());
  final JScrollPane areaScrollPane;
  final JTextArea jTextArea;
  if (JMeterUtils.getPropDefault("loggerpanel.usejsyntaxtext",true)) {
    JSyntaxTextArea jSyntaxTextArea=JSyntaxTextArea.getInstance(15,80,true);
    jSyntaxTextArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_NONE);
    jSyntaxTextArea.setCodeFoldingEnabled(false);
    jSyntaxTextArea.setAntiAliasingEnabled(false);
    jSyntaxTextArea.setEditable(false);
    jSyntaxTextArea.setLineWrap(false);
    jSyntaxTextArea.setLanguage("text");
    jSyntaxTextArea.setMargin(new Insets(2,2,2,2));
    areaScrollPane=JTextScrollPane.getInstance(jSyntaxTextArea);
    jTextArea=jSyntaxTextArea;
  }
 else {
    jTextArea=new JTextArea(15,80);
    areaScrollPane=new JScrollPane(jTextArea);
  }
  areaScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
  areaScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  this.add(areaScrollPane,BorderLayout.CENTER);
  return jTextArea;
}
