{
  if (saveConfig != null) {
    super.dialogInit();
    this.getContentPane().setLayout(new BorderLayout());
    Method[] methods=SampleSaveConfiguration.class.getMethods();
    int x=(countMethods(methods) / 3) + 1;
    log.info("grid panel is " + 3 + " by "+ x);
    JPanel checkPanel=new JPanel(new GridLayout(x,3));
    for (int i=0; i < methods.length; i++) {
      String name=methods[i].getName();
      if (name.startsWith("save") && methods[i].getParameterTypes().length == 0) {
        try {
          name=name.substring(4);
          JCheckBox check=new JCheckBox(JMeterUtils.getResString("save " + name),((Boolean)methods[i].invoke(saveConfig,new Object[0])).booleanValue());
          checkPanel.add(check,BorderLayout.NORTH);
          check.addActionListener(this);
          check.setActionCommand("set" + name);
          if (!functors.containsKey(check.getActionCommand())) {
            functors.put(check.getActionCommand(),new Functor(check.getActionCommand()));
          }
        }
 catch (        Exception e) {
          log.warn("Problem creating save config dialog",e);
        }
      }
    }
    getContentPane().add(checkPanel,BorderLayout.NORTH);
    JButton exit=new JButton(JMeterUtils.getResString("done"));
    this.getContentPane().add(exit,BorderLayout.SOUTH);
    exit.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        dispose();
      }
    }
);
  }
}
