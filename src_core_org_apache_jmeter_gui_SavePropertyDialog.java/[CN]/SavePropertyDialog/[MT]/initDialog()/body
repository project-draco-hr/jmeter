{
  this.getContentPane().setLayout(new BorderLayout());
  Method[] methods=SampleSaveConfiguration.class.getMethods();
  int x=(countMethods(methods) / 3) + 1;
  log.debug("grid panel is " + 3 + " by "+ x);
  JPanel checkPanel=new JPanel(new GridLayout(x,3));
  for (  Method method : methods) {
    String name=method.getName();
    if (name.startsWith(NAME_SAVE_PFX) && method.getParameterTypes().length == 0) {
      try {
        name=name.substring(NAME_SAVE_PFX_LEN);
        JCheckBox check=new JCheckBox(JMeterUtils.getResString(RESOURCE_PREFIX + name),((Boolean)method.invoke(saveConfig,new Object[0])).booleanValue());
        checkPanel.add(check,BorderLayout.NORTH);
        check.addActionListener(this);
        String actionCommand=NAME_SET_PREFIX + name;
        check.setActionCommand(actionCommand);
        if (!functors.containsKey(actionCommand)) {
          functors.put(actionCommand,new Functor(actionCommand));
        }
      }
 catch (      IllegalAccessException|InvocationTargetException e) {
        log.warn("Problem creating save config dialog",e);
      }
    }
  }
  getContentPane().add(checkPanel,BorderLayout.NORTH);
  JButton exit=new JButton(JMeterUtils.getResString("done"));
  this.getContentPane().add(exit,BorderLayout.SOUTH);
  exit.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      dispose();
    }
  }
);
}
