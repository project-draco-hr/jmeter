{
  if (tree == null) {
    throw new IllegalUserActionException("Empty TestPlan - see log file");
  }
  final boolean isTestPlan=tree.getArray()[0] instanceof TestPlan;
  final GuiPackage guiInstance=GuiPackage.getInstance();
  if (isTestPlan && !merging) {
    guiInstance.clearTestPlan((TestElement)tree.getArray()[0]);
  }
  if (merging) {
    final TestElement te=(TestElement)tree.getArray()[0];
    if (!(te instanceof WorkBench || te instanceof TestPlan)) {
      final boolean ok=MenuFactory.canAddTo(guiInstance.getCurrentNode(),te);
      if (!ok) {
        String name=te.getName();
        String className=te.getClass().getName();
        className=className.substring(className.lastIndexOf('.') + 1);
        throw new IllegalUserActionException("Can't merge " + name + " ("+ className+ ") here");
      }
    }
  }
  final HashTree newTree=guiInstance.addSubTree(tree);
  guiInstance.updateCurrentGui();
  guiInstance.getMainFrame().getTree().setSelectionPath(new TreePath(((JMeterTreeNode)newTree.getArray()[0]).getPath()));
  final HashTree subTree=guiInstance.getCurrentSubTree();
  ActionEvent actionEvent=new ActionEvent(subTree.get(subTree.getArray()[subTree.size() - 1]),id,merging ? ActionNames.SUB_TREE_MERGED : ActionNames.SUB_TREE_LOADED);
  ActionRouter.getInstance().actionPerformed(actionEvent);
  final JTree jTree=guiInstance.getMainFrame().getTree();
  if (expandTree && !merging) {
    for (int i=0; i < jTree.getRowCount(); i++) {
      jTree.expandRow(i);
    }
  }
 else {
    jTree.expandRow(0);
  }
  jTree.setSelectionPath(jTree.getPathForRow(1));
  FocusRequester.requestFocus(jTree);
  return isTestPlan;
}
