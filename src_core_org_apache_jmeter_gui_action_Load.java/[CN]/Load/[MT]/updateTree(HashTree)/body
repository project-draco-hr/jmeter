{
  List items=new LinkedList(tree.list());
  Iterator iter=items.iterator();
  while (iter.hasNext()) {
    Object item=iter.next();
    if (item instanceof HTTPSampler) {
      List subItems=new LinkedList(tree.list(item));
      boolean replaced=false;
      Iterator iter2=subItems.iterator();
      while (iter2.hasNext()) {
        TestElement config=(TestElement)iter2.next();
        if (config.getPropertyAsString(TestElement.TEST_CLASS).equals("org.apache.jmeter.protocol.http.config.UrlConfig")) {
          replaced=true;
          HTTPSampler newControl=new HTTPSampler();
          newControl.setName((String)((TestElement)item).getProperty(TestElement.NAME));
          newControl.addTestElement(config);
          newControl.setProperty(TestElement.GUI_CLASS,"org.apache.jmeter.protocol.http.control.gui.HttpTestSampleGui");
          tree.getTree(item).replace(config,newControl);
        }
      }
      if (replaced) {
        ((TestElement)item).setProperty(TestElement.GUI_CLASS,"org.apache.jmeter.protocol.http.config.gui.UrlConfigGui");
        ((TestElement)item).setProperty(TestElement.NAME,"HTTP Request Defaults");
        GenericController newControl=new GenericController();
        newControl.setProperty(TestElement.GUI_CLASS,"org.apache.jmeter.control.gui.LogicControllerGui");
        newControl.setName("Simple Controller");
        tree.replace(item,newControl);
        tree.add(newControl,item);
      }
    }
 else {
      updateTree(tree.getTree(item));
    }
  }
}
