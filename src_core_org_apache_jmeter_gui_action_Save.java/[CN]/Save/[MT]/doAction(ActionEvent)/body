{
  HashTree subTree=null;
  if (!commands.contains(e.getActionCommand())) {
    throw new IllegalUserActionException("Invalid user command:" + e.getActionCommand());
  }
  if (e.getActionCommand().equals(ActionNames.SAVE_AS)) {
    subTree=GuiPackage.getInstance().getCurrentSubTree();
  }
 else {
    subTree=GuiPackage.getInstance().getTreeModel().getTestPlan();
  }
  String updateFile=GuiPackage.getInstance().getTestPlanFile();
  if (!ActionNames.SAVE.equals(e.getActionCommand()) || updateFile == null) {
    JFileChooser chooser=FileDialoger.promptToSaveFile(GuiPackage.getInstance().getTreeListener().getCurrentNode().getName() + ".jmx");
    if (chooser == null) {
      return;
    }
    updateFile=chooser.getSelectedFile().getAbsolutePath();
    if (!e.getActionCommand().equals(ActionNames.SAVE_AS)) {
      GuiPackage.getInstance().setTestPlanFile(updateFile);
    }
  }
  ActionRouter.getInstance().doActionNow(new ActionEvent(subTree,e.getID(),ActionNames.SUB_TREE_SAVED));
  try {
    convertSubTree(subTree);
  }
 catch (  Exception err) {
  }
  FileOutputStream ostream=null;
  try {
    ostream=new FileOutputStream(updateFile);
    if (SaveService.isSaveTestPlanFormat20()) {
      OldSaveService.saveSubTree(subTree,ostream);
    }
 else {
      SaveService.saveTree(subTree,ostream);
    }
  }
 catch (  Throwable ex) {
    GuiPackage.getInstance().setTestPlanFile(null);
    log.error("",ex);
    throw new IllegalUserActionException("Couldn't save test plan to file: " + updateFile);
  }
 finally {
    JOrphanUtils.closeQuietly(ostream);
  }
  GuiPackage.getInstance().updateCurrentGui();
}
