{
  HashTree subTree=null;
  boolean fullSave=false;
  if (!commands.contains(e.getActionCommand())) {
    throw new IllegalUserActionException("Invalid user command:" + e.getActionCommand());
  }
  if (e.getActionCommand().equals(ActionNames.SAVE_AS)) {
    JMeterTreeNode[] nodes=GuiPackage.getInstance().getTreeListener().getSelectedNodes();
    if (nodes.length > 1) {
      JMeterUtils.reportErrorToUser(JMeterUtils.getResString("save_as_error"),JMeterUtils.getResString("save_as"));
      return;
    }
    subTree=GuiPackage.getInstance().getCurrentSubTree();
  }
 else   if (e.getActionCommand().equals(ActionNames.SAVE_AS_TEST_FRAGMENT)) {
    JMeterTreeNode[] nodes=GuiPackage.getInstance().getTreeListener().getSelectedNodes();
    if (checkAcceptableForTestFragment(nodes)) {
      subTree=GuiPackage.getInstance().getCurrentSubTree();
      TestElement element=GuiPackage.getInstance().createTestElement(TestFragmentControllerGui.class.getName());
      HashTree hashTree=new ListedHashTree();
      HashTree tfTree=hashTree.add(new JMeterTreeNode(element,null));
      for (int i=0; i < nodes.length; i++) {
        TreeCloner cloner=new TreeCloner(false);
        GuiPackage.getInstance().getTreeModel().getCurrentSubTree(nodes[i]).traverse(cloner);
        tfTree.add(cloner.getClonedTree());
      }
      subTree=hashTree;
    }
 else {
      JMeterUtils.reportErrorToUser(JMeterUtils.getResString("save_as_test_fragment_error"),JMeterUtils.getResString("save_as_test_fragment"));
      return;
    }
  }
 else {
    fullSave=true;
    HashTree testPlan=GuiPackage.getInstance().getTreeModel().getTestPlan();
    JMeterTreeNode workbenchNode=(JMeterTreeNode)((JMeterTreeNode)GuiPackage.getInstance().getTreeModel().getRoot()).getChildAt(1);
    if (((WorkBench)workbenchNode.getUserObject()).getSaveWorkBench()) {
      HashTree workbench=GuiPackage.getInstance().getTreeModel().getWorkBench();
      testPlan.add(workbench);
    }
    subTree=testPlan;
  }
  String updateFile=GuiPackage.getInstance().getTestPlanFile();
  if (!ActionNames.SAVE.equals(e.getActionCommand()) || updateFile == null) {
    JFileChooser chooser=FileDialoger.promptToSaveFile(updateFile == null ? GuiPackage.getInstance().getTreeListener().getCurrentNode().getName() + JMX_FILE_EXTENSION : updateFile);
    if (chooser == null) {
      return;
    }
    updateFile=chooser.getSelectedFile().getAbsolutePath();
    if (FilenameUtils.getExtension(updateFile).equals("")) {
      updateFile=updateFile + JMX_FILE_EXTENSION;
    }
    File f=new File(updateFile);
    if (f.exists()) {
      int response=JOptionPane.showConfirmDialog(GuiPackage.getInstance().getMainFrame(),JMeterUtils.getResString("save_overwrite_existing_file"),JMeterUtils.getResString("save?"),JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
      if (response == JOptionPane.CLOSED_OPTION || response == JOptionPane.NO_OPTION) {
        return;
      }
    }
    if (!e.getActionCommand().equals(ActionNames.SAVE_AS)) {
      GuiPackage.getInstance().setTestPlanFile(updateFile);
    }
  }
  List<File> expiredBackupFiles=EMPTY_FILE_LIST;
  File fileToBackup=new File(updateFile);
  try {
    expiredBackupFiles=createBackupFile(fileToBackup);
  }
 catch (  Exception ex) {
    log.error("Failed to create a backup for " + fileToBackup.getName(),ex);
  }
  try {
    convertSubTree(subTree);
  }
 catch (  Exception err) {
    log.warn("Error converting subtree " + err);
  }
  FileOutputStream ostream=null;
  try {
    ostream=new FileOutputStream(updateFile);
    SaveService.saveTree(subTree,ostream);
    if (fullSave) {
      subTree=GuiPackage.getInstance().getTreeModel().getTestPlan();
      ActionRouter.getInstance().doActionNow(new ActionEvent(subTree,e.getID(),ActionNames.SUB_TREE_SAVED));
    }
    for (    File expiredBackupFile : expiredBackupFiles) {
      try {
        FileUtils.deleteQuietly(expiredBackupFile);
      }
 catch (      Exception ex) {
        log.warn("Failed to delete backup file " + expiredBackupFile.getName());
      }
    }
  }
 catch (  Throwable ex) {
    log.error("Error saving tree:",ex);
    if (ex instanceof Error) {
      throw (Error)ex;
    }
    if (ex instanceof RuntimeException) {
      throw (RuntimeException)ex;
    }
    throw new IllegalUserActionException("Couldn't save test plan to file: " + updateFile,ex);
  }
 finally {
    JOrphanUtils.closeQuietly(ostream);
  }
  GuiPackage.getInstance().updateCurrentGui();
}
