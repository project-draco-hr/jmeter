{
  String wordToSearch=JOptionPane.showInputDialog(GuiPackage.getInstance().getMainFrame(),JMeterUtils.getResString("search_word"),JMeterUtils.getResString("search_tree_title"),JOptionPane.QUESTION_MESSAGE);
  GuiPackage guiPackage=GuiPackage.getInstance();
  JMeterTreeModel jMeterTreeModel=guiPackage.getTreeModel();
  Iterator<?> iter=jMeterTreeModel.getNodesOfType(Searchable.class).iterator();
  Set<JMeterTreeNode> nodes=new HashSet<JMeterTreeNode>();
  while (iter.hasNext()) {
    try {
      JMeterTreeNode jMeterTreeNode=(JMeterTreeNode)iter.next();
      if (jMeterTreeNode.getUserObject() instanceof Searchable) {
        Searchable searchable=(Searchable)jMeterTreeNode.getUserObject();
        List<JMeterTreeNode> matchingNodes=jMeterTreeNode.getPathToThreadGroup();
        for (Iterator<JMeterTreeNode> iterator=matchingNodes.iterator(); iterator.hasNext(); ) {
          JMeterTreeNode jMeterTreeNode2=iterator.next();
          jMeterTreeNode2.setMarkedBySearch(false);
        }
        if (!StringUtils.isEmpty(wordToSearch)) {
          boolean result=searchable.searchContent(wordToSearch);
          if (result) {
            nodes.addAll(matchingNodes);
          }
        }
      }
    }
 catch (    Exception ex) {
      logger.error("Error occured searching for word:" + wordToSearch,ex);
    }
  }
  for (Iterator<JMeterTreeNode> iterator=nodes.iterator(); iterator.hasNext(); ) {
    JMeterTreeNode jMeterTreeNode=iterator.next();
    jMeterTreeNode.setMarkedBySearch(true);
  }
  GuiPackage.getInstance().getMainFrame().repaint();
}
