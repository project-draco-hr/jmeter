{
  final Map<String,Template> temps=new LinkedHashMap<String,Template>();
  final String[] templateFiles=TEMPLATE_FILES.split(",");
  for (  String templateFile : templateFiles) {
    if (!StringUtils.isEmpty(templateFile)) {
      final File f=new File(JMeterUtils.getJMeterHome(),templateFile);
      try {
        if (f.exists() && f.canRead()) {
          log.info("Reading templates from:" + f.getAbsolutePath());
          final File parent=f.getParentFile();
          final LinkedHashMap<String,Template> templates=((Templates)xstream.fromXML(f)).templates;
          for (          Template t : templates.values()) {
            if (!t.getFileName().startsWith("/")) {
              t.setParent(parent);
            }
          }
          temps.putAll(templates);
        }
 else {
          log.warn("Ignoring template file:'" + f.getAbsolutePath() + "' as it does not exist or is not readable");
        }
      }
 catch (      Exception ex) {
        log.warn("Ignoring template file:'" + f.getAbsolutePath() + "', an error occured parsing the file",ex);
      }
    }
  }
  return temps;
}
