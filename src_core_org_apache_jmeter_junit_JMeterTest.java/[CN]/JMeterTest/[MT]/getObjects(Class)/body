{
  Iterator classes=ClassFinder.findClassesThatExtend(JMeterUtils.getSearchPaths(),new Class[]{extendsClass}).iterator();
  List objects=new LinkedList();
  while (classes.hasNext()) {
    String n=(String)classes.next();
    if (n.endsWith("RemoteJMeterEngineImpl")) {
      continue;
    }
    Class c=Class.forName(n);
    try {
      try {
        objects.add(c.newInstance());
      }
 catch (      InstantiationException e) {
        try {
          objects.add(c.getConstructor(new Class[]{Object.class}).newInstance(new Object[]{this}));
        }
 catch (        NoSuchMethodException f) {
        }
      }
    }
 catch (    IllegalAccessException e) {
    }
catch (    Exception e) {
      if (e instanceof RemoteException) {
        log.warn(e.toString());
      }
 else {
        throw new Exception(e);
      }
    }
  }
  return objects;
}
