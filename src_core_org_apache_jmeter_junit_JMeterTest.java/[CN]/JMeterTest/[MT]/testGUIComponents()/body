{
  Iterator iter=getObjects(JMeterGUIComponent.class).iterator();
  while (iter.hasNext()) {
    JMeterGUIComponent item=(JMeterGUIComponent)iter.next();
    if (item instanceof JMeterTreeNode) {
      continue;
    }
    assertEquals("Failed on " + item.getClass().getName(),item.getStaticLabel(),item.getName());
    TestElement el=item.createTestElement();
    assertEquals("GUI-CLASS: Failed on " + item.getClass().getName(),item.getClass().getName(),el.getProperty(TestElement.GUI_CLASS));
    assertEquals("NAME: Failed on " + item.getClass().getName(),item.getName(),el.getProperty(TestElement.NAME));
    assertEquals("TEST-CLASS: Failed on " + item.getClass().getName(),el.getClass().getName(),el.getProperty(TestElement.TEST_CLASS));
    TestElement el2=item.createTestElement();
    el.setProperty(TestElement.NAME,"hey, new name!:");
    el.setProperty("NOT","Shouldn't be here");
    if (!(item instanceof UnsharedComponent)) {
      assertNull("GUI-CLASS: Failed on " + item.getClass().getName(),el2.getProperty("NOT"));
    }
    el=SaveService.createTestElement(SaveService.getConfigForTestElement(null,el));
    item.configure(el);
    assertEquals("CONFIGURE-TEST: Failed on " + item.getClass().getName(),el.getProperty(TestElement.NAME),item.getName());
    item.modifyTestElement(el2);
    assertEquals("Modify Test: Failed on " + item.getClass().getName(),"hey, new name!:",el2.getPropertyAsString(TestElement.NAME));
  }
}
