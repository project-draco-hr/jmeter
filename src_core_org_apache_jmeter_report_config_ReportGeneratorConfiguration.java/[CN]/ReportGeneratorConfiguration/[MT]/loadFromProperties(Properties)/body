{
  LOG.debug(START_LOADING_MSG);
  ReportGeneratorConfiguration configuration=new ReportGeneratorConfiguration();
  final Props props=new Props();
  props.load(properties);
  final File tempDirectory=getRequiredProperty(props,REPORT_GENERATOR_KEY_TEMP_DIR,REPORT_GENERATOR_KEY_TEMP_DIR_DEFAULT,File.class);
  configuration.setTempDirectory(tempDirectory);
  final long apdexSatisfiedThreshold=getRequiredProperty(props,REPORT_GENERATOR_KEY_APDEX_SATISFIED_THRESHOLD,REPORT_GENERATOR_KEY_APDEX_SATISFIED_THRESHOLD_DEFAULT,long.class).longValue();
  configuration.setApdexSatisfiedThreshold(apdexSatisfiedThreshold);
  final long apdexToleratedThreshold=getRequiredProperty(props,REPORT_GENERATOR_KEY_APDEX_TOLERATED_THRESHOLD,REPORT_GENERATOR_KEY_APDEX_TOLERATED_THRESHOLD_DEFAULT,long.class).longValue();
  configuration.setApdexToleratedThreshold(apdexToleratedThreshold);
  final String sampleFilter=getOptionalProperty(props,REPORT_GENERATOR_KEY_SAMPLE_FILTER,String.class);
  configuration.setSampleFilter(sampleFilter);
  final Map<String,GraphConfiguration> graphConfigurations=configuration.getGraphConfigurations();
  loadSubConfiguration(graphConfigurations,props,REPORT_GENERATOR_GRAPH_KEY_PREFIX,false,new GraphConfigurationFactory(props));
  if (graphConfigurations.isEmpty()) {
    LOG.info("No graph configuration found.");
  }
  final Map<String,ExporterConfiguration> exportConfigurations=configuration.getExportConfigurations();
  loadSubConfiguration(exportConfigurations,props,REPORT_GENERATOR_EXPORTER_KEY_PREFIX,false,new ExporterConfigurationFactory(props));
  if (exportConfigurations.isEmpty()) {
    LOG.warn("No export configuration found. None report will be generated.");
  }
  LOG.debug(END_LOADING_MSG);
  return configuration;
}
