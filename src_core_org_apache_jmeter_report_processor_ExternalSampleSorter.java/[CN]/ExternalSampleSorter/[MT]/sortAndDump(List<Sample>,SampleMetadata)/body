{
  long start=0;
  long stop=0;
  if (log.isDebugEnabled()) {
    log.debug("sortAndDump(): Sorting " + samples.size() + " samples...");
    start=System.currentTimeMillis();
  }
  final List<Sample> sortedSamples=sortSamplesParallel(samples);
  if (sortedSamples.size() != samples.size()) {
    throw new SampleException("sort failed ! " + sortedSamples.size() + " != "+ samples.size());
  }
  if (log.isDebugEnabled()) {
    stop=System.currentTimeMillis();
    log.debug("sortAndDump(): in " + (stop - start) / 1000f + " s. Sorted  " + samples.size() + " samples.");
  }
  File out=getChunkFile();
  if (log.isDebugEnabled()) {
    log.debug("sortAndDump(): Dumping chunk " + out);
    start=System.currentTimeMillis();
  }
  CsvSampleWriter csvWriter=new CsvSampleWriter(out,sampleMetadata);
  try {
    for (    Sample sample : sortedSamples) {
      csvWriter.write(sample);
      chunkedSampleCount++;
    }
  }
  finally {
    csvWriter.close();
  }
  if (log.isDebugEnabled()) {
    stop=System.currentTimeMillis();
    log.debug("sortAndDump(): in " + (stop - start) / 1000f + " s : Dumped chunk " + out.getAbsolutePath());
  }
  return out;
}
