{
  SortedSet<Map.Entry<String,Long>> reverseSortedSet=new TreeSet<Map.Entry<String,Long>>(new Comparator<Map.Entry<String,Long>>(){
    @Override public int compare(    Map.Entry<String,Long> e1,    Map.Entry<String,Long> e2){
      return -e1.getValue().compareTo(e2.getValue());
    }
  }
);
  reverseSortedSet.addAll(countPerError.entrySet());
  Object[][] result=new Object[Top5ErrorsBySamplerConsumer.MAX_NUMBER_OF_ERRORS_IN_TOP][2];
  int size=0;
  for (  Map.Entry<String,Long> entry : reverseSortedSet) {
    if (size == Top5ErrorsBySamplerConsumer.MAX_NUMBER_OF_ERRORS_IN_TOP) {
      break;
    }
    result[size]=new Object[]{entry.getKey(),entry.getValue()};
    size++;
  }
  return result;
}
