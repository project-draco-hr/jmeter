{
  final Visualizer visualizer=getVisualizer();
  if (visualizer == null) {
    return;
  }
  boolean parsedOK=false, errorDetected=false;
  String filename=getFilename();
  File file=new File(filename);
  boolean showAll=!isErrorLogging();
  if (file.exists()) {
    clearVisualizer();
    BufferedReader dataReader=null;
    BufferedInputStream bufferedInputStream=null;
    try {
      dataReader=new BufferedReader(new FileReader(file));
      String line=dataReader.readLine();
      if (line == null) {
        log.warn(filename + " is empty");
      }
 else {
        if (!line.startsWith("<?xml ")) {
          long lineNumber=1;
          SampleSaveConfiguration saveConfig=CSVSaveService.getSampleSaveConfiguration(line,filename);
          if (saveConfig == null) {
            saveConfig=(SampleSaveConfiguration)getSaveConfig().clone();
          }
 else {
            line=dataReader.readLine();
            lineNumber++;
          }
          while (line != null) {
            SampleEvent event=CSVSaveService.makeResultFromDelimitedString(line,saveConfig,lineNumber);
            if (event != null) {
              final SampleResult result=event.getResult();
              if (showAll || !result.isSuccessful()) {
                visualizer.add(result);
              }
            }
            line=dataReader.readLine();
            lineNumber++;
          }
          parsedOK=true;
        }
 else {
          try {
            bufferedInputStream=new BufferedInputStream(new FileInputStream(file));
            readSamples(SaveService.loadTestResults(bufferedInputStream),visualizer,showAll);
            parsedOK=true;
          }
 catch (          Exception e) {
            log.info("Failed to load " + filename + " using XStream, trying old XML format. Error was: "+ e);
            try {
              OldSaveService.processSamples(filename,visualizer,showAll);
              parsedOK=true;
            }
 catch (            Exception e1) {
              log.warn("Error parsing Avalon XML. " + e1.getLocalizedMessage());
            }
          }
        }
      }
    }
 catch (    IOException e) {
      log.warn("Problem reading JTL file: " + file);
    }
catch (    JMeterError e) {
      log.warn("Problem reading JTL file: " + file);
    }
 finally {
      JOrphanUtils.closeQuietly(dataReader);
      JOrphanUtils.closeQuietly(bufferedInputStream);
      if (!parsedOK || errorDetected) {
        GuiPackage.showErrorMessage("Error loading results file - see log file","Result file loader");
      }
    }
  }
}
