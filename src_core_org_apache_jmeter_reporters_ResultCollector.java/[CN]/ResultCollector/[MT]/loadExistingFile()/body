{
  boolean parsedOK=false, errorDetected=false;
  String filename=getFilename();
  File file=new File(filename);
  if (file.exists()) {
    clearVisualizer();
    BufferedReader dataReader=null;
    BufferedInputStream bufferedInputStream=null;
    try {
      dataReader=new BufferedReader(new FileReader(file));
      String line=dataReader.readLine();
      if (line == null) {
        log.warn(filename + " is empty");
      }
 else {
        if (!line.startsWith("<?xml ")) {
          long lineNumber=1;
          SampleSaveConfiguration saveConfig=CSVSaveService.getSampleSaveConfiguration(line,filename);
          if (saveConfig == null) {
            saveConfig=(SampleSaveConfiguration)getSaveConfig().clone();
          }
 else {
            line=dataReader.readLine();
            lineNumber++;
          }
          while (line != null) {
            SampleEvent event=CSVSaveService.makeResultFromDelimitedString(line,saveConfig,lineNumber);
            if (event != null)             sendToVisualizer(event);
            line=dataReader.readLine();
            lineNumber++;
          }
          parsedOK=true;
        }
 else {
          try {
            bufferedInputStream=new BufferedInputStream(new FileInputStream(file));
            readSamples(SaveService.loadTestResults(bufferedInputStream));
            parsedOK=true;
          }
 catch (          Exception e) {
            log.info("Failed to load " + filename + " using XStream, trying old XML format. Error was: "+ e);
            try {
              Configuration savedSamples=getConfiguration(filename);
              Configuration[] samples=savedSamples.getChildren();
              for (int i=0; i < samples.length; i++) {
                SampleResult result=OldSaveService.getSampleResult(samples[i]);
                sendToVisualizer(result);
              }
              parsedOK=true;
            }
 catch (            Exception e1) {
              log.warn("Error parsing Avalon XML. " + e1.getLocalizedMessage());
            }
          }
        }
      }
    }
 catch (    IOException e) {
      log.warn("Problem reading JTL file: " + file);
    }
catch (    JMeterError e) {
      log.warn("Problem reading JTL file: " + file);
    }
 finally {
      JOrphanUtils.closeQuietly(dataReader);
      JOrphanUtils.closeQuietly(bufferedInputStream);
      if (!parsedOK || errorDetected) {
        GuiPackage.showErrorMessage("Error loading results file - see log file","Result file loader");
      }
    }
  }
}
