{
  DecimalFormat dfDouble=new DecimalFormat("#0.0");
  StringBuilder tmp=new StringBuilder(20);
  StringBuilder sb=new StringBuilder(100);
  sb.append(name);
  sb.append(" ");
  sb.append(type);
  sb.append(" ");
  sb.append(longToSb(tmp,summariserRunningSample.getNumSamples(),6));
  sb.append(" in ");
  long elapsed=summariserRunningSample.getElapsed();
  long elapsedSec=(elapsed + 500) / 1000;
  sb.append(String.format("%d:%02d:%02d",elapsedSec / 3600,(elapsedSec % 3600) / 60,(elapsedSec % 60)));
  sb.append(" = ");
  if (elapsed > 0) {
    sb.append(doubleToSb(dfDouble,tmp,summariserRunningSample.getRate(),6,1));
  }
 else {
    sb.append("******");
  }
  sb.append("/s Avg: ");
  sb.append(longToSb(tmp,summariserRunningSample.getAverage(),5));
  sb.append(" Min: ");
  sb.append(longToSb(tmp,summariserRunningSample.getMin(),5));
  sb.append(" Max: ");
  sb.append(longToSb(tmp,summariserRunningSample.getMax(),5));
  sb.append(" Err: ");
  sb.append(longToSb(tmp,summariserRunningSample.getErrorCount(),5));
  sb.append(" (");
  sb.append(summariserRunningSample.getErrorPercentageString());
  sb.append(")");
  if ("+".equals(type)) {
    ThreadCounts tc=JMeterContextService.getThreadCounts();
    sb.append(" Active: ");
    sb.append(tc.activeThreads);
    sb.append(" Started: ");
    sb.append(tc.startedThreads);
    sb.append(" Finished: ");
    sb.append(tc.finishedThreads);
  }
  return sb.toString();
}
