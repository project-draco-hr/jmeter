{
  int ch;
  int state=INITIAL;
  List<String> list=new ArrayList<String>();
  ByteArrayOutputStream baos=new ByteArrayOutputStream(200);
  boolean push=false;
  while (-1 != (ch=infile.read())) {
    push=false;
switch (state) {
case INITIAL:
      if (ch == QUOTING_CHAR) {
        state=QUOTED;
      }
 else       if (isDelimOrEOL(delim,ch)) {
        push=true;
      }
 else {
        baos.write(ch);
        state=PLAIN;
      }
    break;
case PLAIN:
  if (ch == QUOTING_CHAR) {
    baos.write(ch);
    throw new IOException("Cannot have quote-char in plain field:[" + baos.toString() + "]");
  }
 else   if (isDelimOrEOL(delim,ch)) {
    push=true;
    state=INITIAL;
  }
 else {
    baos.write(ch);
  }
break;
case QUOTED:
if (ch == QUOTING_CHAR) {
state=EMBEDDEDQUOTE;
}
 else {
baos.write(ch);
}
break;
case EMBEDDEDQUOTE:
if (ch == QUOTING_CHAR) {
baos.write(QUOTING_CHAR);
state=QUOTED;
}
 else if (isDelimOrEOL(delim,ch)) {
push=true;
state=INITIAL;
}
 else {
baos.write(QUOTING_CHAR);
throw new IOException("Cannot have single quote-char in quoted field:[" + baos.toString() + "]");
}
break;
}
if (push) {
if (ch == '\r') {
infile.mark(1);
if (infile.read() != '\n') {
infile.reset();
}
}
String s=baos.toString();
list.add(s);
baos.reset();
}
if ((ch == '\n' || ch == '\r') && state != QUOTED) {
break;
}
}
if (ch == -1) {
if (state == QUOTED) {
throw new IOException(state + " Missing trailing quote-char in quoted field:[\"" + baos.toString()+ "]");
}
if (baos.size() > 0 || push || state == EMBEDDEDQUOTE) {
list.add(baos.toString());
}
}
return list.toArray(new String[list.size()]);
}
