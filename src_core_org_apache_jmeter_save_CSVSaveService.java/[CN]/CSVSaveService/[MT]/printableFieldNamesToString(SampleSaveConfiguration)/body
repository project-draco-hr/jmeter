{
  StringBuilder text=new StringBuilder();
  String delim=saveConfig.getDelimiter();
  if (saveConfig.saveTimestamp()) {
    text.append(TIME_STAMP);
    text.append(delim);
  }
  if (saveConfig.saveTime()) {
    text.append(CSV_ELAPSED);
    text.append(delim);
  }
  if (saveConfig.saveLabel()) {
    text.append(LABEL);
    text.append(delim);
  }
  if (saveConfig.saveCode()) {
    text.append(RESPONSE_CODE);
    text.append(delim);
  }
  if (saveConfig.saveMessage()) {
    text.append(RESPONSE_MESSAGE);
    text.append(delim);
  }
  if (saveConfig.saveThreadName()) {
    text.append(THREAD_NAME);
    text.append(delim);
  }
  if (saveConfig.saveDataType()) {
    text.append(DATA_TYPE);
    text.append(delim);
  }
  if (saveConfig.saveSuccess()) {
    text.append(SUCCESSFUL);
    text.append(delim);
  }
  if (saveConfig.saveAssertionResultsFailureMessage()) {
    text.append(FAILURE_MESSAGE);
    text.append(delim);
  }
  if (saveConfig.saveBytes()) {
    text.append(CSV_BYTES);
    text.append(delim);
  }
  if (saveConfig.saveSentBytes()) {
    text.append(CSV_SENT_BYTES);
    text.append(delim);
  }
  if (saveConfig.saveThreadCounts()) {
    text.append(CSV_THREAD_COUNT1);
    text.append(delim);
    text.append(CSV_THREAD_COUNT2);
    text.append(delim);
  }
  if (saveConfig.saveUrl()) {
    text.append(CSV_URL);
    text.append(delim);
  }
  if (saveConfig.saveFileName()) {
    text.append(CSV_FILENAME);
    text.append(delim);
  }
  if (saveConfig.saveLatency()) {
    text.append(CSV_LATENCY);
    text.append(delim);
  }
  if (saveConfig.saveEncoding()) {
    text.append(CSV_ENCODING);
    text.append(delim);
  }
  if (saveConfig.saveSampleCount()) {
    text.append(CSV_SAMPLE_COUNT);
    text.append(delim);
    text.append(CSV_ERROR_COUNT);
    text.append(delim);
  }
  if (saveConfig.saveHostname()) {
    text.append(CSV_HOSTNAME);
    text.append(delim);
  }
  if (saveConfig.saveIdleTime()) {
    text.append(CSV_IDLETIME);
    text.append(delim);
  }
  if (saveConfig.saveConnectTime()) {
    text.append(CSV_CONNECT_TIME);
    text.append(delim);
  }
  for (int i=0; i < SampleEvent.getVarCount(); i++) {
    text.append(VARIABLE_NAME_QUOTE_CHAR);
    text.append(SampleEvent.getVarName(i));
    text.append(VARIABLE_NAME_QUOTE_CHAR);
    text.append(delim);
  }
  String resultString=null;
  int size=text.length();
  int delSize=delim.length();
  if (size >= delSize) {
    resultString=text.substring(0,size - delSize);
  }
 else {
    resultString=text.toString();
  }
  return resultString;
}
