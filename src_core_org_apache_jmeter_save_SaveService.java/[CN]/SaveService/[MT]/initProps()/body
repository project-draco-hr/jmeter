{
  try {
    Properties nameMap=loadProperties();
    for (    Map.Entry<Object,Object> me : nameMap.entrySet()) {
      String key=(String)me.getKey();
      String val=(String)me.getValue();
      if (!key.startsWith("_")) {
        makeAlias(key,val);
      }
 else {
        if (key.equalsIgnoreCase("_version")) {
          propertiesVersion=val;
          log.info("Using SaveService properties version " + propertiesVersion);
        }
 else         if (key.equalsIgnoreCase("_file_version")) {
          fileVersion=extractVersion(val);
          log.info("Using SaveService properties file version " + fileVersion);
        }
 else         if (key.equalsIgnoreCase("_file_encoding")) {
          fileEncoding=val;
          log.info("Using SaveService properties file encoding " + fileEncoding);
        }
 else {
          key=key.substring(1);
          try {
            final String trimmedValue=val.trim();
            if (trimmedValue.equals("collection") || trimmedValue.equals("mapping")) {
              registerConverter(key,JMXSAVER,true);
              registerConverter(key,JTLSAVER,true);
            }
 else {
              registerConverter(key,JMXSAVER,false);
              registerConverter(key,JTLSAVER,false);
            }
          }
 catch (          IllegalAccessException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          InstantiationException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          ClassNotFoundException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          IllegalArgumentException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          SecurityException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          InvocationTargetException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
catch (          NoSuchMethodException e1) {
            log.warn("Can't register a converter: " + key,e1);
          }
        }
      }
    }
  }
 catch (  IOException e) {
    log.fatalError("Bad saveservice properties file",e);
    throw new JMeterError("JMeter requires the saveservice properties file to continue");
  }
}
