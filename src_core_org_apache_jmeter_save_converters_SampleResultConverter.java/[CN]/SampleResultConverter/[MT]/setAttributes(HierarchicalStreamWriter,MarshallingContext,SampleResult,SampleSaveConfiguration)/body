{
  if (save.saveTime()) {
    writer.addAttribute(ATT_TIME,Long.toString(res.getTime()));
  }
  if (save.saveIdleTime()) {
    writer.addAttribute(ATT_IDLETIME,Long.toString(res.getIdleTime()));
  }
  if (save.saveLatency()) {
    writer.addAttribute(ATT_LATENCY,Long.toString(res.getLatency()));
  }
  if (save.saveConnectTime()) {
    writer.addAttribute(ATT_CONNECT_TIME,Long.toString(res.getConnectTime()));
  }
  if (save.saveTimestamp()) {
    writer.addAttribute(ATT_TIME_STAMP,Long.toString(res.getTimeStamp()));
  }
  if (save.saveSuccess()) {
    writer.addAttribute(ATT_SUCCESS,Boolean.toString(res.isSuccessful()));
  }
  if (save.saveLabel()) {
    writer.addAttribute(ATT_LABEL,ConversionHelp.encode(res.getSampleLabel()));
  }
  if (save.saveCode()) {
    writer.addAttribute(ATT_RESPONSE_CODE,ConversionHelp.encode(res.getResponseCode()));
  }
  if (save.saveMessage()) {
    writer.addAttribute(ATT_RESPONSE_MESSAGE,ConversionHelp.encode(res.getResponseMessage()));
  }
  if (save.saveThreadName()) {
    writer.addAttribute(ATT_THREADNAME,ConversionHelp.encode(res.getThreadName()));
  }
  if (save.saveDataType()) {
    writer.addAttribute(ATT_DATA_TYPE,ConversionHelp.encode(res.getDataType()));
  }
  if (save.saveEncoding()) {
    writer.addAttribute(ATT_DATA_ENCODING,ConversionHelp.encode(res.getDataEncodingNoDefault()));
  }
  if (save.saveBytes()) {
    writer.addAttribute(ATT_BYTES,String.valueOf(res.getBytes()));
  }
  if (save.saveSampleCount()) {
    writer.addAttribute(ATT_SAMPLE_COUNT,String.valueOf(res.getSampleCount()));
    writer.addAttribute(ATT_ERROR_COUNT,String.valueOf(res.getErrorCount()));
  }
  if (save.saveThreadCounts()) {
    writer.addAttribute(ATT_GRP_THRDS,String.valueOf(res.getGroupThreads()));
    writer.addAttribute(ATT_ALL_THRDS,String.valueOf(res.getAllThreads()));
  }
  SampleEvent event=(SampleEvent)context.get(SaveService.SAMPLE_EVENT_OBJECT);
  if (event != null) {
    if (save.saveHostname()) {
      writer.addAttribute(ATT_HOSTNAME,event.getHostname());
    }
    for (int i=0; i < SampleEvent.getVarCount(); i++) {
      writer.addAttribute(SampleEvent.getVarName(i),ConversionHelp.encode(event.getVarValue(i)));
    }
  }
}
