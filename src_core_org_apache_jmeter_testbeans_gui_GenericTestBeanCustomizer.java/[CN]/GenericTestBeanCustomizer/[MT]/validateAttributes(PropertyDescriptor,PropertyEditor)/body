{
  final Object deflt=pd.getValue(DEFAULT);
  if (deflt == null) {
    if (notNull(pd)) {
      log.warn(getDetails(pd) + " requires a value but does not provide a default.");
    }
  }
 else {
    final Class<?> defltClass=deflt.getClass();
    final Class<?> propClass=ClassUtils.primitiveToWrapper(pd.getPropertyType());
    if (!propClass.isAssignableFrom(defltClass)) {
      log.warn(getDetails(pd) + " has a DEFAULT of class " + defltClass.getCanonicalName());
    }
  }
  if (notOther(pd) && pd.getValue(TAGS) == null && pe.getTags() == null) {
    log.warn(getDetails(pd) + " does not have tags but other values are not allowed.");
  }
  if (!notNull(pd)) {
    Class<?> propertyType=pd.getPropertyType();
    if (propertyType.isPrimitive()) {
      log.warn(getDetails(pd) + " allows null but is a primitive type");
    }
  }
  if (!pd.attributeNames().hasMoreElements()) {
    log.warn(getDetails(pd) + " does not appear to have been configured");
  }
}
