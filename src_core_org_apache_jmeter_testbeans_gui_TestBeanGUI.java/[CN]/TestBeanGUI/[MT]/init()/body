{
  setLayout(new BorderLayout(0,5));
  setBorder(makeBorder());
  add(makeTitlePanel(),BorderLayout.NORTH);
  JPanel mainPanel=new JPanel(new GridBagLayout());
  GridBagConstraints cl=new GridBagConstraints();
  cl.gridx=0;
  cl.anchor=GridBagConstraints.LINE_END;
  cl.insets=new Insets(0,1,0,1);
  GridBagConstraints ce=new GridBagConstraints();
  ce.fill=GridBagConstraints.BOTH;
  ce.gridx=1;
  ce.weightx=1.0;
  ce.insets=new Insets(0,1,0,1);
  GridBagConstraints cp=new GridBagConstraints();
  cp.fill=GridBagConstraints.BOTH;
  cp.gridx=1;
  cp.gridy=GridBagConstraints.RELATIVE;
  cp.gridwidth=2;
  cp.weightx=1.0;
  JPanel currentPanel=mainPanel;
  String currentGroup="";
  int y=0;
  for (int i=0; i < editors.length; i++) {
    if (editors[i] == null)     continue;
    if (log.isDebugEnabled()) {
      log.debug("Laying property " + descriptors[i].getName());
    }
    String g=group(descriptors[i]);
    if (!currentGroup.equals(g)) {
      if (currentPanel != mainPanel) {
        mainPanel.add(currentPanel,cp);
      }
      currentGroup=g;
      currentPanel=new JPanel(new GridBagLayout());
      currentPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),groupDisplayName(g)));
      cp.weighty=0.0;
      y=0;
    }
    Component customEditor=editors[i].getCustomEditor();
    boolean multiLineEditor=false;
    if (customEditor.getPreferredSize().height > 50) {
      multiLineEditor=true;
    }
    JLabel label=createLabel(descriptors[i]);
    label.setLabelFor(customEditor);
    cl.gridy=y;
    cl.gridwidth=multiLineEditor ? 2 : 1;
    cl.anchor=multiLineEditor ? GridBagConstraints.CENTER : GridBagConstraints.LINE_END;
    currentPanel.add(label,cl);
    ce.gridx=multiLineEditor ? 0 : 1;
    ce.gridy=multiLineEditor ? ++y : y;
    ce.gridwidth=multiLineEditor ? 2 : 1;
    ce.weighty=multiLineEditor ? 1.0 : 0.0;
    cp.weighty+=ce.weighty;
    currentPanel.add(customEditor,ce);
    y++;
  }
  if (currentPanel != mainPanel) {
    mainPanel.add(currentPanel,cp);
  }
  add(mainPanel,BorderLayout.CENTER);
}
