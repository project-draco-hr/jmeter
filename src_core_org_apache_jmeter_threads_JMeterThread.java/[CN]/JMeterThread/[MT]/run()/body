{
  try {
    threadContext=JMeterContextService.getContext();
    threadContext.setVariables(threadVars);
    initializeThreadListeners();
    testTree.traverse(compiler);
    running=true;
    Sampler entry=null;
    rampUpDelay();
    log.info("Thread " + Thread.currentThread().getName() + " started");
    while (running) {
      while (controller.hasNext() && running) {
        try {
          if (controller.isNextFirst()) {
            notifyThreadListeners();
          }
          SamplePackage pack=compiler.configureSampler(controller.next());
          threadContext.setCurrentSampler(pack.getSampler());
          delay(pack.getTimers());
          SampleResult result=pack.getSampler().sample(null);
          result.setThreadName(threadName);
          result.setTimeStamp(System.currentTimeMillis());
          threadContext.setPreviousResult(result);
          checkAssertions(pack.getAssertions(),result);
          runPostProcessors(pack.getPostProcessors());
          notifyListeners(pack.getSampleListeners(),result);
          compiler.done(pack);
        }
 catch (        Exception e) {
          log.error("",e);
        }
      }
      if (controller.isDone()) {
        running=false;
      }
    }
  }
  finally {
    log.info("Thread " + threadName + " is done");
    monitor.threadFinished(this);
  }
}
