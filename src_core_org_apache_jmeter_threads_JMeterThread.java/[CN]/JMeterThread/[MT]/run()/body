{
  JMeterContext threadContext=JMeterContextService.getContext();
  LoopIterationListener iterationListener=null;
  try {
    iterationListener=initRun(threadContext);
    Sampler sam=threadGroupLoopController.next();
    while (running && sam != null) {
      processSampler(sam,null,threadContext);
      threadContext.cleanAfterSample();
      if (threadContext.isRestartNextLoop() || (onErrorStartNextLoop && !TRUE.equals(threadContext.getVariables().get(LAST_SAMPLE_OK)))) {
        if (log.isDebugEnabled()) {
          if (onErrorStartNextLoop && !threadContext.isRestartNextLoop()) {
            log.debug("StartNextLoop option is on, Last sample failed, starting next loop");
          }
        }
        triggerEndOfLoopOnParentControllers(sam,threadContext);
        threadContext.getVariables().put(LAST_SAMPLE_OK,TRUE);
        threadContext.setRestartNextLoop(false);
        sam=null;
      }
      if (sam == null && threadGroupLoopController.isDone()) {
        running=false;
        log.info("Thread is done: " + threadName);
      }
 else {
        sam=threadGroupLoopController.next();
      }
    }
  }
 catch (  JMeterStopTestException e) {
    log.info("Stopping Test: " + e.toString());
    stopTest();
  }
catch (  JMeterStopTestNowException e) {
    log.info("Stopping Test Now: " + e.toString());
    stopTestNow();
  }
catch (  JMeterStopThreadException e) {
    log.info("Stop Thread seen: " + e.toString());
  }
catch (  Exception e) {
    log.error("Test failed!",e);
  }
catch (  ThreadDeath e) {
    throw e;
  }
catch (  Error e) {
    log.error("Test failed!",e);
  }
 finally {
    currentSampler=null;
    try {
      interruptLock.lock();
      threadContext.clear();
      log.info("Thread finished: " + threadName);
      threadFinished(iterationListener);
      monitor.threadFinished(this);
      JMeterContextService.removeContext();
    }
  finally {
      interruptLock.unlock();
    }
  }
}
