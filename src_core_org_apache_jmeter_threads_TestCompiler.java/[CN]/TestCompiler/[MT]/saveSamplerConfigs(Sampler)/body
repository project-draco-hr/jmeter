{
  List configs=new LinkedList();
  List modifiers=new LinkedList();
  List responseModifiers=new LinkedList();
  List listeners=new LinkedList();
  List timers=new LinkedList();
  List assertions=new LinkedList();
  List extractors=new LinkedList();
  List pres=new LinkedList();
  for (int i=stack.size(); i > 0; i--) {
    Iterator iter=testTree.list(stack.subList(0,i)).iterator();
    while (iter.hasNext()) {
      TestElement item=(TestElement)iter.next();
      if ((item instanceof ConfigTestElement)) {
        configs.add(item);
      }
      if (item instanceof Modifier) {
        modifiers.add(item);
      }
      if (item instanceof ResponseBasedModifier) {
        responseModifiers.add(item);
      }
      if (item instanceof SampleListener) {
        listeners.add(item);
      }
      if (item instanceof Timer) {
        timers.add(item);
      }
      if (item instanceof Assertion) {
        assertions.add(item);
      }
      if (item instanceof PostProcessor) {
        extractors.add(item);
      }
      if (item instanceof PreProcessor) {
        pres.add(item);
      }
    }
  }
  SamplePackage pack=new SamplePackage(configs,modifiers,responseModifiers,listeners,timers,assertions,extractors,pres);
  pack.setSampler(sam);
  samplerConfigMap.put(sam,pack);
}
