{
  JMeterContextService.getContext().setVariables(this.context.getVariables());
  long now=System.currentTimeMillis();
  long endtime=0;
  final boolean usingScheduler=getScheduler();
  if (usingScheduler) {
    if (getDelay() > 0) {
      delayBy(getDelay() * 1000);
    }
 else {
      long start=getStartTime();
      if (start >= now) {
        delayBy(start - now);
      }
    }
    endtime=getDuration();
    if (endtime > 0) {
      endtime=endtime * 1000 + System.currentTimeMillis();
    }
 else {
      endtime=getEndTime();
    }
  }
  final int numThreads=getNumThreads();
  final int perTthreadDelay=Math.round(((float)(getRampUp() * 1000) / (float)numThreads));
  for (int i=0; running && i < numThreads; i++) {
    if (i > 0) {
      pause(perTthreadDelay);
    }
    if (usingScheduler && System.currentTimeMillis() > endtime) {
      break;
    }
    JMeterThread jmThread=makeThread(groupCount,notifier,threadGroupTree,engine,i,context);
    jmThread.setInitialDelay(0);
    if (usingScheduler) {
      jmThread.setScheduled(true);
      jmThread.setEndTime(endtime);
    }
    Thread newThread=new Thread(jmThread,jmThread.getThreadName());
    newThread.setDaemon(false);
    registerStartedThread(jmThread,newThread);
    newThread.start();
  }
}
