{
  List listPaths=null;
  ArrayList listClasses=null;
  ArrayList listClassesWithInterface=null;
  String strClassName=null;
  Iterator iterClasses=null;
  Class tempClass=null;
  boolean foundIt;
  int i;
  listPaths=getClasspathMatches(strPathsOrJars);
  listClasses=new ArrayList();
  findClassesInPaths(listPaths,listClasses);
  if (interfaces == null || interfaces.length == 0) {
    listClassesWithInterface=listClasses;
  }
 else {
    listClassesWithInterface=(ArrayList)listClasses.clone();
    iterClasses=listClasses.iterator();
    while (iterClasses.hasNext()) {
      strClassName=(String)iterClasses.next();
      foundIt=false;
      if ((strClassName.indexOf("$") == -1) || innerClasses) {
        try {
          tempClass=Class.forName(strClassName,true,Thread.currentThread().getContextClassLoader());
          for (i=0; i < interfaces.length; i++) {
            if (classImplementsInterface(tempClass,interfaces[i])) {
              foundIt=true;
              break;
            }
          }
        }
 catch (        Throwable ignored) {
        }
      }
      if (!foundIt) {
        listClassesWithInterface.remove(strClassName);
      }
    }
  }
  return findAllSubclasses(listClassesWithInterface,listClasses,innerClasses);
}
