{
  char pw[]=pword == null ? null : pword.toCharArray();
  store.load(is,pw);
  ArrayList<String> v_names=new ArrayList<>();
  this.privateKeyByAlias=new HashMap<>();
  this.certsByAlias=new HashMap<>();
  if (null != is) {
    PrivateKey _key=null;
    int index=0;
    Enumeration<String> aliases=store.aliases();
    while (aliases.hasMoreElements()) {
      String alias=aliases.nextElement();
      if (store.isKeyEntry(alias)) {
        if (index >= startIndex && index <= endIndex) {
          _key=(PrivateKey)store.getKey(alias,pw);
          if (null == _key) {
            throw new IOException("No key found for alias: " + alias);
          }
          Certificate[] chain=store.getCertificateChain(alias);
          if (null == chain) {
            throw new IOException("No certificate chain found for alias: " + alias);
          }
          v_names.add(alias);
          X509Certificate[] x509certs=new X509Certificate[chain.length];
          for (int i=0; i < x509certs.length; i++) {
            x509certs[i]=(X509Certificate)chain[i];
          }
          privateKeyByAlias.put(alias,_key);
          certsByAlias.put(alias,x509certs);
        }
        index++;
      }
    }
    if (null == _key) {
      throw new IOException("No key(s) found");
    }
    if (index <= endIndex - startIndex) {
      LOG.warn("Did not find all requested aliases. Start=" + startIndex + ", end="+ endIndex+ ", found="+ certsByAlias.size());
    }
  }
  this.names=v_names.toArray(new String[v_names.size()]);
}
