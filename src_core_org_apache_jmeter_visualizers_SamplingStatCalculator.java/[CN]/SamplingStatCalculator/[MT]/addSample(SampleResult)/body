{
  long rtime, cmean, cstdv, cmedian, cpercent, eCount, endTime;
  double throughput;
  boolean rbool;
synchronized (calculator) {
    calculator.addValue(res.getTime(),res.getSampleCount());
    calculator.addBytes(res.getBytesAsLong());
    calculator.addSentBytes(res.getSentBytes());
    setStartTime(res);
    eCount=getCurrentSample().getErrorCount();
    eCount+=res.getErrorCount();
    endTime=getEndTime(res);
    long howLongRunning=endTime - firstTime;
    throughput=((double)calculator.getCount() / (double)howLongRunning) * 1000.0;
    if (throughput > maxThroughput) {
      maxThroughput=throughput;
    }
    rtime=res.getTime();
    cmean=(long)calculator.getMean();
    cstdv=(long)calculator.getStandardDeviation();
    cmedian=calculator.getMedian().longValue();
    cpercent=calculator.getPercentPoint(0.500).longValue();
    rbool=res.isSuccessful();
  }
  long count=calculator.getCount();
  Sample s=new Sample(null,rtime,cmean,cstdv,cmedian,cpercent,throughput,eCount,rbool,count,endTime);
  currentSample=s;
  return s;
}
