{
  Sample s=null;
synchronized (calculator) {
    long byteslength=0;
    if (res.getResponseData() == null || res.getResponseData().length == 0) {
      byteslength=res.getContentLength();
    }
 else {
      byteslength=res.getResponseData().length;
    }
    if (res.getSampleCount() > 1) {
      long time=res.getTime() / res.getSampleCount();
      long resbytes=byteslength / res.getSampleCount();
      for (int idx=0; idx < res.getSampleCount(); idx++) {
        calculator.addValue(time);
        calculator.addBytes(resbytes);
      }
    }
 else {
      calculator.addValue(res.getTime());
      calculator.addBytes(byteslength);
    }
    setStartTime(res);
    long eCount=getCurrentSample().errorCount;
    if (!res.isSuccessful()) {
      eCount++;
    }
    long endTime=getEndTime(res);
    long howLongRunning=endTime - firstTime;
    double throughput=0;
    if (howLongRunning <= 0) {
      throughput=Double.MAX_VALUE;
    }
    throughput=((double)calculator.getCount() / (double)howLongRunning) * 1000.0;
    if (throughput > maxThroughput) {
      maxThroughput=throughput;
    }
    s=new Sample(null,res.getTime(),(long)calculator.getMean(),(long)calculator.getStandardDeviation(),calculator.getMedian().longValue(),calculator.getPercentPoint(0.500).longValue(),throughput,eCount,res.isSuccessful(),storedValues.size() + 1,endTime);
    storedValues.add(s);
  }
  return s;
}
