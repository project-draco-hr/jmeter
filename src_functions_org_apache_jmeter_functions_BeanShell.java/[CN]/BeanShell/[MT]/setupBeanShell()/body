{
  ClassLoader loader=Thread.currentThread().getContextClassLoader();
  try {
    Class Interpreter=loader.loadClass("bsh.Interpreter");
    instance=Interpreter.newInstance();
    Class string=String.class;
    Class object=Object.class;
    bshEval=Interpreter.getMethod("eval",new Class[]{string});
    bshSet=Interpreter.getMethod("set",new Class[]{string,object});
    bshSource=Interpreter.getMethod("source",new Class[]{string});
  }
 catch (  ClassNotFoundException e) {
    log.error("Beanshell Interpreter not found");
  }
catch (  Exception e) {
    log.error("Problem starting BeanShell server ",e);
  }
  bshInvoke(bshSet,"log",log);
  String initFile=JMeterUtils.getPropDefault(INIT_FILE,null);
  if (initFile != null)   bshInvoke(bshSource,initFile,null);
}
