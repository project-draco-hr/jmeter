{
  String myValue=ERR_IND;
  String myName="StringFromFile_";
  if (values.length >= PARAM_NAME) {
    myName=((CompoundVariable)values[PARAM_NAME - 1]).execute().trim();
  }
  if (firstTime) {
    openFile();
    firstTime=false;
  }
  if (null != myBread) {
    try {
      String line=myBread.readLine();
      if (line == null) {
        String tn=Thread.currentThread().getName();
        log.info(tn + " EOF on  file " + fileName);
        JOrphanUtils.closeQuietly(myBread);
        openFile();
        if (myBread != null) {
          line=myBread.readLine();
        }
 else {
          line=ERR_IND;
          if (myEnd != COUNT_UNUSED) {
            log.info(tn + " Detected end of sequence.");
            throw new JMeterStopThreadException("End of sequence");
          }
        }
      }
      myValue=line;
    }
 catch (    IOException e) {
      String tn=Thread.currentThread().getName();
      log.error(tn + " error reading file " + e.toString());
    }
  }
 else {
    if (myEnd != COUNT_UNUSED) {
      String tn=Thread.currentThread().getName();
      log.info(tn + " Detected end of sequence.");
      throw new JMeterStopThreadException("End of sequence");
    }
  }
  if (myName.length() > 0) {
    JMeterVariables vars=getVariables();
    if (vars != null) {
      vars.put(myName,myValue);
    }
  }
  if (log.isDebugEnabled()) {
    String tn=Thread.currentThread().getName();
    log.debug(tn + " name:" + myName+ " value:"+ myValue);
  }
  return myValue;
}
