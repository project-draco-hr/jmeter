{
  String tn=Thread.currentThread().getName();
  fileName=((CompoundVariable)values[0]).execute();
  String start="";
  if (values.length >= PARAM_START) {
    start=((CompoundVariable)values[PARAM_START - 1]).execute();
    try {
      myStart=Integer.valueOf(start).intValue();
    }
 catch (    NumberFormatException e) {
      myStart=1;
    }
    if (myCurrent == -1)     myCurrent=myStart;
  }
  if (values.length >= PARAM_END) {
    String tmp=((CompoundVariable)values[PARAM_END - 1]).execute();
    try {
      myEnd=Integer.valueOf(tmp).intValue();
    }
 catch (    NumberFormatException e) {
      myEnd=0;
    }
  }
  if (values.length >= PARAM_START) {
    log.info(tn + " Start = " + myStart+ " Current = "+ myCurrent+ " End = "+ myEnd);
    if (values.length >= PARAM_END) {
      if (myCurrent > myEnd) {
        log.info(tn + " No more files to process, " + myCurrent+ " > "+ myEnd);
        myBread=null;
        return;
      }
    }
    if (start.length() > 0) {
      log.info("Using format " + fileName);
      try {
        DecimalFormat myFormatter=new DecimalFormat(fileName);
        fileName=myFormatter.format(myCurrent);
      }
 catch (      NumberFormatException e) {
        log.warn("Bad file name format ",e);
      }
    }
    myCurrent++;
  }
  log.info(tn + " opening file " + fileName);
  try {
    fis=new FileReader(fileName);
    myBread=new BufferedReader(fis);
  }
 catch (  Exception e) {
    log.error("openFile() error: " + e.toString());
    myBread=null;
  }
}
