{
  if (args != null & args.length > 0) {
    String strurl=args[0];
    boolean addLink=true;
    if (args.length == 2) {
      if (args[1].equals("f")) {
        addLink=false;
      }
    }
    if (strurl.indexOf("http") < 0) {
      File input=new File(strurl);
      try {
        strurl=input.toURL().toString();
        System.out.println("file converted to URL: " + args[0]);
      }
 catch (      MalformedURLException e) {
        e.printStackTrace();
      }
    }
    try {
      Parser parser=new Parser(strurl,new DefaultParserFeedback());
      LinkScanner linkScanner=new LinkScanner(LinkTag.LINK_TAG_FILTER);
      if (addLink) {
        parser.addScanner(linkScanner);
      }
      parser.addScanner(linkScanner.createImageScanner(ImageTag.IMAGE_TAG_FILTER));
      parser.addScanner(new BodyScanner());
      long start=System.currentTimeMillis();
      for (NodeIterator e=parser.elements(); e.hasMoreNodes(); ) {
        Node node=e.nextNode();
        if (node instanceof BodyTag) {
          BodyTag btag=(BodyTag)node;
          System.out.println("body url: " + btag.getAttribute("background"));
          for (NodeIterator ee=btag.elements(); ee.hasMoreNodes(); ) {
            Node cnode=ee.nextNode();
            if (cnode instanceof ImageTag) {
              ImageTag iTag=(ImageTag)cnode;
              System.out.println("image url: " + iTag.getImageURL());
            }
          }
        }
      }
      System.out.println("Elapsed Time ms: " + (System.currentTimeMillis() - start));
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
