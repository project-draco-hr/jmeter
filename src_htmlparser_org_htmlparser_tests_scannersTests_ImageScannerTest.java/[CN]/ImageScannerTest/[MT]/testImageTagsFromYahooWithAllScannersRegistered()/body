{
  createParser("<tr>" + "<td>" + "	<small><a href=s/5926>Air</a>, <a href=s/5927>Hotel</a>, "+ "<a href=s/5928>Vacations</a>, <a href=s/5929>Cruises</a></small>"+ "</td>"+ "<td align=center>"+ "<a href=\"http://rd.yahoo.com/M=218794.2020165.3500581.220161/D=yahoo_top/S="+ "2716149:NP/A=1041273/?http://adfarm.mediaplex.com/ad/ck/990-1736-1039-211\" "+ "target=\"_top\"><img width=230 height=33 src=\"http://us.a1.yimg.com/us.yimg.com/a/co/"+ "columbiahouse/4for49Freesh_230x33_redx2.gif\" alt=\"\" border=0></a>"+ "</td>"+ "<td nowrap align=center width=215>"+ "Find your match on<br><a href=s/2734>"+ "<b>Yahoo! Personals</b></a>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan=3 align=center>"+ "<input size=30 "+ "name=p>\n"+ "</td>"+ "</tr>","http://www.yahoo.com",30);
  parser.registerScanners();
  parseAndAssertNodeCount(2);
  assertType("first node type",TableRow.class,node[0]);
  TableRow row=(TableRow)node[0];
  TableColumn col=row.getColumns()[1];
  Node node=col.children().nextNode();
  assertType("Node identified should be HTMLLinkTag",LinkTag.class,node);
  LinkTag linkTag=(LinkTag)node;
  Node nodeInsideLink=linkTag.children().nextNode();
  assertType("Tag within link should be an image tag",ImageTag.class,nodeInsideLink);
  ImageTag imageTag=(ImageTag)nodeInsideLink;
  assertStringEquals("Expected Image","http://us.a1.yimg.com/us.yimg.com/a/co/columbiahouse/4for49Freesh_230x33_redx2.gif",imageTag.getImageURL());
}
