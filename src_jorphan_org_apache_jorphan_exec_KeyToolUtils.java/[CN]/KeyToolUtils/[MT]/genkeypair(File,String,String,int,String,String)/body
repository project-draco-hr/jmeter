{
  final File workingDir=keystore.getParentFile();
  final SystemCommand nativeCommand=new SystemCommand(workingDir,null);
  final List<String> arguments=new ArrayList<String>();
  arguments.add("keytool");
  arguments.add("-genkeypair");
  arguments.add("-alias");
  arguments.add(alias);
  arguments.add("-dname");
  arguments.add(dname == null ? DEFAULT_DNAME : dname);
  arguments.add("-keyalg");
  arguments.add("RSA");
  arguments.add("-keystore");
  arguments.add(keystore.getName());
  arguments.add("-storepass");
  arguments.add(password);
  arguments.add("-keypass");
  arguments.add(password);
  arguments.add("-validity");
  arguments.add(Integer.toString(validity));
  if (ext != null) {
    arguments.add("-ext");
    arguments.add(ext);
  }
  try {
    int exitVal=nativeCommand.run(arguments);
    if (exitVal != 0) {
      throw new IOException("Command :'" + formatCommand(arguments) + "' failed, code: "+ exitVal+ "\n"+ nativeCommand.getOutResult());
    }
  }
 catch (  InterruptedException e) {
    throw new IOException("Command was interrupted\n" + nativeCommand.getOutResult(),e);
  }
}
