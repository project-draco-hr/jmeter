{
  if (keystore.exists()) {
    throw new IOException("Keystore already exists");
  }
  final File workingDir=keystore.getParentFile();
  final SystemCommand nativeCommand=new SystemCommand(workingDir,null);
  final List<String> arguments=new ArrayList<String>();
  arguments.add("keytool");
  arguments.add("-genkeypair");
  arguments.add("-alias");
  arguments.add("jmeter");
  arguments.add("-dname");
  arguments.add("cn=JMeter Proxy (DO NOT TRUST)");
  arguments.add("-keyalg");
  arguments.add("RSA");
  arguments.add("-keystore");
  arguments.add(keystore.getName());
  arguments.add("-storepass");
  arguments.add(password);
  arguments.add("-keypass");
  arguments.add(password);
  arguments.add("-validity");
  arguments.add(Integer.toString(validity));
  int exitVal=nativeCommand.run(arguments);
  if (exitVal != 0) {
    throw new IOException("Command failed, code: " + exitVal + "\n"+ nativeCommand.getOutResult());
  }
}
