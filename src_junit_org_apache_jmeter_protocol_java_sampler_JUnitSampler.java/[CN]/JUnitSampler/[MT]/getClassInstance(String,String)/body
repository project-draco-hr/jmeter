{
  Object testclass=null;
  if (className != null) {
    Constructor<?> con=null;
    Constructor<?> strCon=null;
    Class<?> theclazz=null;
    Object[] strParams=null;
    Object[] params=null;
    try {
      theclazz=Thread.currentThread().getContextClassLoader().loadClass(className.trim());
    }
 catch (    ClassNotFoundException e) {
      log.warn("ClassNotFoundException:: " + e.getMessage());
    }
    if (theclazz != null) {
      try {
        strCon=theclazz.getDeclaredConstructor(new Class[]{String.class});
        if (label == null || label.length() == 0) {
          label=className;
        }
        if (strCon.getModifiers() == Modifier.PUBLIC) {
          strParams=new Object[]{label};
        }
 else {
          strCon=null;
        }
      }
 catch (      NoSuchMethodException e) {
        log.info("Trying to find constructor with one String parameter returned error: " + e.getMessage());
      }
      try {
        con=theclazz.getDeclaredConstructor(new Class[0]);
        if (con != null) {
          params=new Object[]{};
        }
      }
 catch (      NoSuchMethodException e) {
        log.info("Trying to find empty constructor returned error: " + e.getMessage());
      }
      try {
        if (strCon != null) {
          testclass=strCon.newInstance(strParams);
        }
 else         if (con != null) {
          testclass=con.newInstance(params);
        }
 else {
          log.error("No empty constructor nor string constructor found for class:" + theclazz);
        }
      }
 catch (      InvocationTargetException e) {
        log.error("Error instanciating class:" + theclazz + ":"+ e.getMessage(),e);
      }
catch (      InstantiationException e) {
        log.error("Error instanciating class:" + theclazz + ":"+ e.getMessage(),e);
      }
catch (      IllegalAccessException e) {
        log.error("Error instanciating class:" + theclazz + ":"+ e.getMessage(),e);
      }
    }
  }
  return testclass;
}
