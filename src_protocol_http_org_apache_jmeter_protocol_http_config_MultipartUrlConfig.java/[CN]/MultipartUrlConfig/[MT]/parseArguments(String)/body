{
  String[] parts=JOrphanUtils.split(queryString,"--" + getBoundary());
  for (  String part : parts) {
    String contentDisposition=getHeaderValue("Content-disposition",part);
    String contentType=getHeaderValue("Content-type",part);
    if (contentDisposition != null && contentDisposition.contains("form-data")) {
      final String namePrefix="name=\"";
      int index=contentDisposition.indexOf(namePrefix) + namePrefix.length();
      String name=contentDisposition.substring(index,contentDisposition.indexOf('\"',index));
      final String filenamePrefix="filename=\"";
      if (contentDisposition.contains(filenamePrefix)) {
        index=contentDisposition.indexOf(filenamePrefix) + filenamePrefix.length();
        String path=contentDisposition.substring(index,contentDisposition.indexOf('\"',index));
        if (path != null && path.length() > 0) {
          files.addHTTPFileArg(path,name,contentType);
        }
      }
 else {
        final String CRLF="\r\n";
        final String CRLFCRLF="\r\n\r\n";
        final String LF="\n";
        final String LFLF="\n\n";
        int indexEmptyCrLfCrLfLinePos=part.indexOf(CRLFCRLF);
        int indexEmptyLfLfLinePos=part.indexOf(LFLF);
        String value=null;
        if (indexEmptyCrLfCrLfLinePos > -1) {
          value=part.substring(indexEmptyCrLfCrLfLinePos + CRLFCRLF.length(),part.lastIndexOf(CRLF));
        }
 else         if (indexEmptyLfLfLinePos > -1) {
          value=part.substring(indexEmptyLfLfLinePos + LFLF.length(),part.lastIndexOf(LF));
        }
        this.addNonEncodedArgument(name,value);
      }
    }
  }
}
