{
  path=new JTextField(15);
  JLabel label=new JLabel(JMeterUtils.getResString("path"));
  label.setLabelFor(path);
  if (notConfigOnly) {
    followRedirects=new JCheckBox(JMeterUtils.getResString("follow_redirects"));
    followRedirects.setSelected(true);
    followRedirects.addChangeListener(this);
    autoRedirects=new JCheckBox(JMeterUtils.getResString("follow_redirects_auto"));
    autoRedirects.addChangeListener(this);
    autoRedirects.setSelected(false);
    useKeepAlive=new JCheckBox(JMeterUtils.getResString("use_keepalive"));
    useKeepAlive.setSelected(true);
    useMultipartForPost=new JCheckBox(JMeterUtils.getResString("use_multipart_for_http_post"));
    useMultipartForPost.setSelected(false);
    useBrowserCompatibleMultipartMode=new JCheckBox(JMeterUtils.getResString("use_multipart_mode_browser"));
    useBrowserCompatibleMultipartMode.setSelected(HTTPSamplerBase.BROWSER_COMPATIBLE_MULTIPART_MODE_DEFAULT);
  }
  JPanel pathPanel=new JPanel(new BorderLayout(5,0));
  pathPanel.add(label,BorderLayout.WEST);
  pathPanel.add(path,BorderLayout.CENTER);
  pathPanel.setMinimumSize(pathPanel.getPreferredSize());
  JPanel panel=new JPanel();
  panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
  panel.add(pathPanel);
  if (notConfigOnly) {
    JPanel optionPanel=new JPanel(new FlowLayout(FlowLayout.LEFT));
    optionPanel.add(autoRedirects);
    optionPanel.add(followRedirects);
    optionPanel.add(useKeepAlive);
    optionPanel.add(useMultipartForPost);
    optionPanel.add(useBrowserCompatibleMultipartMode);
    optionPanel.setMinimumSize(optionPanel.getPreferredSize());
    panel.add(optionPanel);
  }
  return panel;
}
