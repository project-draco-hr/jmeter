{
  boolean debugEnabled=log.isDebugEnabled();
  if (debugEnabled) {
    log.debug("Received Cookie: " + cookieHeader + " From:"+ url.toExternalForm());
  }
  StringTokenizer st=new StringTokenizer(cookieHeader,";");
  String nvp;
  nvp=st.nextToken();
  int index=nvp.indexOf("=");
  String name=nvp.substring(0,index);
  String value=nvp.substring(index + 1);
  String domain="." + url.getHost();
  String path=url.getPath();
  if (path.length() == 0) {
    path="/";
  }
 else {
    int lastSlash=path.lastIndexOf("/");
    if (lastSlash > 0) {
      path=path.substring(0,lastSlash);
    }
  }
  Cookie newCookie=new Cookie(name,value,domain,path,false,0);
  while (st.hasMoreTokens()) {
    nvp=st.nextToken();
    nvp=nvp.trim();
    index=nvp.indexOf("=");
    if (index == -1) {
      index=nvp.length();
    }
    String key=nvp.substring(0,index);
    if (key.equalsIgnoreCase("expires")) {
      try {
        String expires=nvp.substring(index + 1);
        Date date=dateFormat.parse(expires);
        newCookie.setExpires(date.getTime() / 1000);
      }
 catch (      ParseException pe) {
        log.error("Couldn't parse Cookie expiration time: " + cookieHeader,pe);
      }
catch (      Exception e) {
        log.error("Couln't parse Cookie expiration time: likely JDK bug: " + cookieHeader,e);
      }
    }
 else     if (key.equalsIgnoreCase("domain")) {
      domain=nvp.substring(index + 1).trim();
      if (!domain.startsWith(".")) {
        domain="." + domain;
      }
      newCookie.setDomain(domain);
    }
 else     if (key.equalsIgnoreCase("path")) {
      newCookie.setPath(nvp.substring(index + 1).trim());
    }
 else     if (key.equalsIgnoreCase("secure")) {
      newCookie.setSecure(true);
    }
  }
  long exp=newCookie.getExpires();
  if (exp == 0 || exp >= System.currentTimeMillis() / 1000) {
    add(newCookie);
  }
 else {
    removeMatchingCookies(newCookie);
    if (debugEnabled) {
      log.debug("Dropping expired Cookie: " + newCookie.toString());
    }
  }
}
