{
  File file=new File(cookieFile);
  if (!file.isAbsolute()) {
    file=new File(System.getProperty("user.dir") + File.separator + cookieFile);
  }
  BufferedReader reader=null;
  if (file.canRead()) {
    reader=new BufferedReader(new FileReader(file));
  }
 else {
    throw new IOException("The file you specified cannot be read.");
  }
  String line;
  try {
    final CollectionProperty cookies=getCookies();
    while ((line=reader.readLine()) != null) {
      try {
        if (line.startsWith("#") || JOrphanUtils.isBlank(line)) {
          continue;
        }
        String[] st=JOrphanUtils.split(line,TAB,false);
        final int _domain=0;
        final int _path=2;
        final int _secure=3;
        final int _expires=4;
        final int _name=5;
        final int _value=6;
        final int _fields=7;
        if (st.length != _fields) {
          throw new IOException("Expected " + _fields + " fields, found "+ st.length+ " in "+ line);
        }
        if (st[_path].length() == 0) {
          st[_path]="/";
        }
        boolean secure=Boolean.parseBoolean(st[_secure]);
        long expires=Long.parseLong(st[_expires]);
        if (expires == Long.MAX_VALUE) {
          expires=0;
        }
        Cookie cookie=new Cookie(st[_name],st[_value],st[_domain],st[_path],secure,expires);
        cookies.addItem(cookie);
      }
 catch (      NumberFormatException e) {
        throw new IOException("Error parsing cookie line\n\t'" + line + "'\n\t"+ e);
      }
    }
  }
  finally {
    reader.close();
  }
}
