{
  boolean debugEnabled=log.isDebugEnabled();
  if (debugEnabled) {
    log.debug("Received Cookie: " + cookieHeader + " From: "+ url.toExternalForm());
  }
  String protocol=url.getProtocol();
  String host=url.getHost();
  int port=HTTPSamplerBase.getDefaultPort(protocol,url.getPort());
  String path=url.getPath();
  boolean isSecure=HTTPSamplerBase.isSecure(protocol);
  org.apache.commons.httpclient.Cookie[] cookies=null;
  try {
    cookies=cookieSpec.parse(host,port,path,isSecure,cookieHeader);
  }
 catch (  MalformedCookieException e) {
    log.warn(cookieHeader + e.getLocalizedMessage());
  }
catch (  IllegalArgumentException e) {
    log.warn(cookieHeader + e.getLocalizedMessage());
  }
  if (cookies == null) {
    return;
  }
  for (  org.apache.commons.httpclient.Cookie cookie : cookies) {
    try {
      if (checkCookies) {
        cookieSpec.validate(host,port,path,isSecure,cookie);
      }
      Date expiryDate=cookie.getExpiryDate();
      long exp=0;
      if (expiryDate != null) {
        exp=expiryDate.getTime();
      }
      Cookie newCookie=new Cookie(cookie.getName(),cookie.getValue(),cookie.getDomain(),cookie.getPath(),cookie.getSecure(),exp / 1000,cookie.isPathAttributeSpecified(),cookie.isDomainAttributeSpecified());
      if (exp == 0 || exp >= System.currentTimeMillis()) {
        newCookie.setVersion(cookie.getVersion());
        cookieManager.add(newCookie);
      }
 else {
        cookieManager.removeMatchingCookies(newCookie);
        if (debugEnabled) {
          log.debug("Dropping expired Cookie: " + newCookie.toString());
        }
      }
    }
 catch (    MalformedCookieException e) {
      log.warn("Not storing invalid cookie: <" + cookieHeader + "> for URL "+ url+ " ("+ e.getLocalizedMessage()+ ")");
    }
catch (    IllegalArgumentException e) {
      log.warn(cookieHeader + e.getLocalizedMessage());
    }
  }
}
