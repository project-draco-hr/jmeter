{
  JMeterContext context=getThreadContext();
  Sampler sam=context.getCurrentSampler();
  SampleResult res=context.getPreviousResult();
  HTTPSamplerBase sampler=null;
  HTTPSampleResult result=null;
  if (res == null || !(sam instanceof HTTPSamplerBase) || !(res instanceof HTTPSampleResult)) {
    log.info("Can't apply HTML Link Parser when the previous" + " sampler run is not an HTTP Request.");
    return;
  }
 else {
    sampler=(HTTPSamplerBase)sam;
    result=(HTTPSampleResult)res;
  }
  List<HTTPSamplerBase> potentialLinks=new ArrayList<HTTPSamplerBase>();
  String responseText="";
  responseText=result.getResponseDataAsString();
  Document html;
  int index=responseText.indexOf("<");
  if (index == -1) {
    index=0;
  }
  if (log.isDebugEnabled()) {
    log.debug("Check for matches against: " + sampler.toString());
  }
  html=(Document)HtmlParsingUtils.getDOM(responseText.substring(index));
  addAnchorUrls(html,result,sampler,potentialLinks);
  addFormUrls(html,result,sampler,potentialLinks);
  addFramesetUrls(html,result,sampler,potentialLinks);
  if (potentialLinks.size() > 0) {
    HTTPSamplerBase url=potentialLinks.get(rand.nextInt(potentialLinks.size()));
    if (log.isDebugEnabled()) {
      log.debug("Selected: " + url.toString());
    }
    sampler.setDomain(url.getDomain());
    sampler.setPath(url.getPath());
    if (url.getMethod().equals(HTTPConstantsInterface.POST)) {
      PropertyIterator iter=sampler.getArguments().iterator();
      while (iter.hasNext()) {
        Argument arg=(Argument)iter.next().getObjectValue();
        modifyArgument(arg,url.getArguments());
      }
    }
 else {
      sampler.setArguments(url.getArguments());
    }
    sampler.setProtocol(url.getProtocol());
    return;
  }
 else {
    log.debug("No matches found");
  }
  return;
}
