{
  String parserName=p.getClass().getName().substring("org.apache.jmeter.protocol.http.parser".length());
  log.debug("file   " + file);
  File f=findTestFile(file);
  byte[] buffer=new byte[(int)f.length()];
  int len=new FileInputStream(f).read(buffer);
  assertEquals(len,buffer.length);
  Iterator result;
  if (c == null) {
    result=p.getEmbeddedResourceURLs(buffer,new URL(url));
  }
 else {
    result=p.getEmbeddedResourceURLs(buffer,new URL(url),c);
  }
  Iterator expected;
  if (orderMatters) {
    expected=getFile(resultFile).iterator();
  }
 else {
    expected=new TreeSet(getFile(resultFile)).iterator();
    TreeSet temp=new TreeSet(new Comparator(){
      public int compare(      Object o1,      Object o2){
        return (o1.toString().compareTo(o2.toString()));
      }
    }
);
    while (result.hasNext()) {
      temp.add(result.next());
    }
    result=temp.iterator();
  }
  while (expected.hasNext()) {
    assertTrue(parserName + "::Expecting another result",result.hasNext());
    try {
      assertEquals(parserName + "(" + file+ ")",expected.next(),((URL)result.next()).toString());
    }
 catch (    ClassCastException e) {
      fail(parserName + "::Expected URL, but got " + e.toString());
    }
  }
  assertFalse(parserName + "::Should have reached the end of the results",result.hasNext());
}
