{
  while (e.hasMoreNodes()) {
    Node node=e.nextNode();
    if (!(node instanceof Tag)) {
      continue;
    }
    Tag tag=(Tag)node;
    String tagname=tag.getTagName();
    String binUrlStr=null;
    if (tag instanceof BodyTag) {
      binUrlStr=tag.getAttribute(ATT_BACKGROUND);
    }
 else     if (tag instanceof BaseHrefTag) {
      BaseHrefTag baseHref=(BaseHrefTag)tag;
      String baseref=baseHref.getBaseUrl();
      try {
        if (!baseref.equals("")) {
          baseUrl.url=ConversionUtils.makeRelativeURL(baseUrl.url,baseref);
        }
      }
 catch (      MalformedURLException e1) {
        throw new HTMLParseException(e1);
      }
    }
 else     if (tag instanceof ImageTag) {
      ImageTag image=(ImageTag)tag;
      binUrlStr=image.getImageURL();
    }
 else     if (tag instanceof AppletTag) {
      AppletTag applet=(AppletTag)tag;
      binUrlStr=applet.getAppletClass();
    }
 else     if (tag instanceof ObjectTag) {
      ObjectTag applet=(ObjectTag)tag;
      String data=applet.getAttribute("codebase");
      if (!StringUtils.isEmpty(data)) {
        binUrlStr=data;
      }
      data=applet.getAttribute("data");
      if (!StringUtils.isEmpty(data)) {
        binUrlStr=data;
      }
    }
 else     if (tag instanceof InputTag) {
      if (ATT_IS_IMAGE.equalsIgnoreCase(tag.getAttribute(ATT_TYPE))) {
        binUrlStr=tag.getAttribute(ATT_SRC);
      }
    }
 else     if (tag instanceof ScriptTag) {
      binUrlStr=tag.getAttribute(ATT_SRC);
    }
 else     if (tag instanceof FrameTag || tagname.equalsIgnoreCase(TAG_IFRAME)) {
      binUrlStr=tag.getAttribute(ATT_SRC);
    }
 else     if (tagname.equalsIgnoreCase(TAG_EMBED) || tagname.equalsIgnoreCase(TAG_BGSOUND)) {
      binUrlStr=tag.getAttribute(ATT_SRC);
    }
 else     if (tagname.equalsIgnoreCase(TAG_LINK)) {
      if (STYLESHEET.equalsIgnoreCase(tag.getAttribute(ATT_REL))) {
        binUrlStr=tag.getAttribute(ATT_HREF);
      }
    }
 else {
      binUrlStr=tag.getAttribute(ATT_BACKGROUND);
    }
    if (binUrlStr != null) {
      urls.addURL(binUrlStr,baseUrl.url);
    }
    String styleTagStr=tag.getAttribute(ATT_STYLE);
    if (styleTagStr != null) {
      HtmlParsingUtils.extractStyleURLs(baseUrl.url,urls,styleTagStr);
    }
    if (tag instanceof CompositeTag) {
      CompositeTag composite=(CompositeTag)tag;
      parseNodes(composite.elements(),baseUrl,urls);
    }
  }
}
