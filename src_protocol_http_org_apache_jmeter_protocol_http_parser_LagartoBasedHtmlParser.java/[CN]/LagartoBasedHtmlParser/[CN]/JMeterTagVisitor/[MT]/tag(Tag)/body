{
  String tagName=tag.getName().toLowerCase();
  if (tagName.equals(TAG_BODY)) {
    extractAttribute(tag,ATT_BACKGROUND);
  }
 else   if (tagName.equals(TAG_BASE)) {
    String baseref=tag.getAttributeValue(ATT_HREF,false);
    try {
      if (!StringUtils.isEmpty(baseref)) {
        baseUrl.url=ConversionUtils.makeRelativeURL(baseUrl.url,baseref);
      }
    }
 catch (    MalformedURLException e1) {
      throw new RuntimeException(e1);
    }
  }
 else   if (tagName.equals(TAG_IMAGE)) {
    extractAttribute(tag,ATT_SRC);
  }
 else   if (tagName.equals(TAG_APPLET)) {
    extractAttribute(tag,ATT_CODE);
  }
 else   if (tagName.equals(TAG_OBJECT)) {
    extractAttribute(tag,ATT_CODEBASE);
    extractAttribute(tag,ATT_DATA);
  }
 else   if (tagName.equals(TAG_INPUT)) {
    if (ATT_IS_IMAGE.equalsIgnoreCase(tag.getAttributeValue(ATT_TYPE,false))) {
      extractAttribute(tag,ATT_SRC);
    }
  }
 else   if (tagName.equals(TAG_SCRIPT)) {
    extractAttribute(tag,ATT_SRC);
  }
 else   if (tagName.equals(TAG_FRAME) || tagName.equals(TAG_IFRAME)) {
    extractAttribute(tag,ATT_SRC);
  }
 else   if (tagName.equals(TAG_EMBED)) {
    extractAttribute(tag,ATT_SRC);
  }
 else   if (tagName.equals(TAG_BGSOUND)) {
    extractAttribute(tag,ATT_SRC);
  }
 else   if (tagName.equals(TAG_LINK)) {
    if (STYLESHEET.equalsIgnoreCase(tag.getAttributeValue(ATT_REL,false))) {
      extractAttribute(tag,ATT_HREF);
    }
  }
 else {
    extractAttribute(tag,ATT_BACKGROUND);
  }
  String styleTagStr=tag.getAttributeValue(ATT_STYLE,false);
  if (styleTagStr != null) {
    HtmlParsingUtils.extractStyleURLs(baseUrl.url,urls,styleTagStr);
  }
}
