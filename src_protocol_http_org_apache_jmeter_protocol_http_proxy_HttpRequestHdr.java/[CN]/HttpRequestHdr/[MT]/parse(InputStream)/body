{
  boolean inHeaders=true;
  int readLength=0;
  int dataLength=0;
  boolean firstLine=true;
  ByteArrayOutputStream clientRequest=new ByteArrayOutputStream();
  ByteArrayOutputStream line=new ByteArrayOutputStream();
  int x;
  while ((inHeaders || readLength < dataLength) && ((x=in.read()) != -1)) {
    line.write(x);
    clientRequest.write(x);
    if (firstLine && !CharUtils.isAscii((char)x)) {
      throw new IllegalArgumentException("Only ASCII supported in headers (perhaps SSL was used?)");
    }
    if (inHeaders && (byte)x == (byte)'\n') {
      if (line.size() < 3) {
        inHeaders=false;
        firstLine=false;
      }
      final String reqLine=line.toString();
      if (firstLine) {
        parseFirstLine(reqLine);
        firstLine=false;
      }
 else {
        final int contentLen=parseLine(reqLine);
        if (contentLen > 0) {
          dataLength=contentLen;
        }
      }
      if (log.isDebugEnabled()) {
        log.debug("Client Request Line: '" + reqLine.replaceFirst("\r\n$","<CRLF>") + "'");
      }
      line.reset();
    }
 else     if (!inHeaders) {
      readLength++;
    }
  }
  rawPostData=line.toByteArray();
  if (log.isDebugEnabled()) {
    log.debug("rawPostData in default JRE encoding: " + new String(rawPostData));
    log.debug("Request: '" + clientRequest.toString().replaceAll("\r\n","<CRLF>") + "'");
  }
  return clientRequest.toByteArray();
}
