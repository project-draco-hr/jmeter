{
  if (log.isDebugEnabled()) {
    log.debug("browser request: " + firstLine);
  }
  StringTokenizer tz=new StringTokenizer(firstLine);
  method=getToken(tz).toUpperCase(java.util.Locale.ENGLISH);
  url=getToken(tz);
  version=getToken(tz);
  if (log.isDebugEnabled()) {
    log.debug("parser input:  " + firstLine);
    log.debug("parsed method: " + method);
    log.debug("parsed url:    " + url);
    log.debug("parsed version:" + version);
  }
  if (getMethod().startsWith(HTTPConstants.CONNECT)) {
    paramHttps=url;
  }
  if (url.startsWith("/")) {
    url=HTTPS + "://" + paramHttps+ url;
  }
  if (HTTPSamplerFactory.IMPL_JAVA.equals(httpSamplerName)) {
    log.debug("First Line: " + url);
    return;
  }
  try {
    URI testCleanUri=new URI(url);
    if (log.isDebugEnabled()) {
      log.debug("Successfully built URI from url:" + url + " => "+ testCleanUri.toString());
    }
  }
 catch (  URISyntaxException e) {
    log.warn("Url '" + url + "' contains unsafe characters, will escape it, message:"+ e.getMessage());
    try {
      String escapedUrl=ConversionUtils.escapeIllegalURLCharacters(url);
      if (log.isDebugEnabled()) {
        log.debug("Successfully escaped url:'" + url + "' to:'"+ escapedUrl+ "'");
      }
      url=escapedUrl;
    }
 catch (    Exception e1) {
      log.error("Error escaping URL:'" + url + "', message:"+ e1.getMessage());
    }
  }
  log.debug("First Line: " + url);
}
