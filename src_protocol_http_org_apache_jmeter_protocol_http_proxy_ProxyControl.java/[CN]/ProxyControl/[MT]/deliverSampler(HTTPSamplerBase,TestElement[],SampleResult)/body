{
  boolean notifySampleListeners=true;
  if (sampler != null) {
    if (ATTEMPT_REDIRECT_DISABLING && (samplerRedirectAutomatically || samplerFollowRedirects)) {
      if (result instanceof HTTPSampleResult) {
        final HTTPSampleResult httpSampleResult=(HTTPSampleResult)result;
        final String urlAsString=httpSampleResult.getUrlAsString();
        if (urlAsString.equals(LAST_REDIRECT)) {
          sampler.setEnabled(false);
          sampler.setComment("Detected a redirect from the previous sample");
        }
 else {
          LAST_REDIRECT=null;
        }
        if (httpSampleResult.isRedirect()) {
          if (LAST_REDIRECT == null) {
            sampler.setComment("Detected the start of a redirect chain");
          }
          LAST_REDIRECT=httpSampleResult.getRedirectLocation();
        }
 else {
          LAST_REDIRECT=null;
        }
      }
    }
    if (filterContentType(result) && filterUrl(sampler)) {
      JMeterTreeNode myTarget=findTargetControllerNode();
      @SuppressWarnings("unchecked") Collection<ConfigTestElement> defaultConfigurations=(Collection<ConfigTestElement>)findApplicableElements(myTarget,ConfigTestElement.class,false);
      @SuppressWarnings("unchecked") Collection<Arguments> userDefinedVariables=(Collection<Arguments>)findApplicableElements(myTarget,Arguments.class,true);
      removeValuesFromSampler(sampler,defaultConfigurations);
      replaceValues(sampler,testElements,userDefinedVariables);
      sampler.setAutoRedirects(samplerRedirectAutomatically);
      sampler.setFollowRedirects(samplerFollowRedirects);
      sampler.setUseKeepAlive(useKeepAlive);
      sampler.setImageParser(samplerDownloadImages);
      String prefix=getPrefixHTTPSampleName();
      if (!StringUtils.isEmpty(prefix)) {
        sampler.setName(prefix + sampler.getName());
        result.setSampleLabel(prefix + result.getSampleLabel());
      }
      Authorization authorization=createAuthorization(testElements,sampler);
      if (authorization != null) {
        setAuthorization(authorization,myTarget);
      }
      placeSampler(sampler,testElements,myTarget);
    }
 else {
      if (log.isDebugEnabled()) {
        log.debug("Sample excluded based on url or content-type: " + result.getUrlAsString() + " - "+ result.getContentType());
      }
      notifySampleListeners=notifyChildSamplerListenersOfFilteredSamples;
      result.setSampleLabel("[" + result.getSampleLabel() + "]");
    }
  }
  if (notifySampleListeners) {
    notifySampleListeners(new SampleEvent(result,"WorkBench"));
  }
 else {
    log.debug("Sample not delivered to Child Sampler Listener based on url or content-type: " + result.getUrlAsString() + " - "+ result.getContentType());
  }
}
