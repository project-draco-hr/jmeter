{
  JMeterTreeNode myTarget=target;
  TestElement urlConfig=null;
  JMeterTreeModel treeModel=GuiPackage.getInstance().getTreeModel();
  if (myTarget == null) {
    List nodes=treeModel.getNodesOfType(RecordingController.class);
    Iterator iter=nodes.iterator();
    while (iter.hasNext()) {
      JMeterTreeNode node=(JMeterTreeNode)iter.next();
      if (node.isEnabled()) {
        myTarget=node;
        break;
      }
    }
  }
  if (myTarget == null) {
    List nodes=treeModel.getNodesOfType(ThreadGroup.class);
    Iterator iter=nodes.iterator();
    while (iter.hasNext()) {
      JMeterTreeNode node=(JMeterTreeNode)iter.next();
      if (node.isEnabled()) {
        myTarget=node;
        break;
      }
    }
  }
  Enumeration enum=myTarget.children();
  String guiClassName=null;
  while (enum.hasMoreElements()) {
    JMeterTreeNode subNode=(JMeterTreeNode)enum.nextElement();
    TestElement sample=(TestElement)subNode.createTestElement();
    guiClassName=sample.getPropertyAsString(TestElement.GUI_CLASS);
    if (guiClassName.equals(UrlConfigGui.class.getName()) || guiClassName.equals(HttpDefaultsGui.class.getName())) {
      urlConfig=sample;
      break;
    }
  }
  if (areMatched(sampler,urlConfig)) {
    removeValuesFromSampler(sampler,urlConfig);
    replaceValues(sampler,subConfigs);
    sampler.setUseKeepAlive(useKeepAlive);
    sampler.setProperty(TestElement.GUI_CLASS,"org.apache.jmeter.protocol.http.control.gui.HttpTestSampleGui");
    try {
      boolean firstInBatch=false;
      long now=System.currentTimeMillis();
      if (now - lastTime > sampleGap) {
        if (!myTarget.isLeaf() && groupingMode == GROUPING_ADD_SEPARATORS) {
          addDivider(treeModel,myTarget);
        }
        if (groupingMode == GROUPING_IN_CONTROLLERS) {
          addSimpleController(treeModel,myTarget,sampler.getName());
        }
        firstInBatch=true;
      }
      lastTime=now;
      if (groupingMode == GROUPING_STORE_FIRST_ONLY) {
        if (!firstInBatch)         return;
        sampler.setFollowRedirects(true);
        sampler.setImageParser(true);
      }
      if (groupingMode == GROUPING_IN_CONTROLLERS) {
        for (int i=myTarget.getChildCount() - 1; i >= 0; i--) {
          JMeterTreeNode c=(JMeterTreeNode)myTarget.getChildAt(i);
          if (c.createTestElement() instanceof GenericController) {
            myTarget=c;
            break;
          }
        }
      }
      JMeterTreeNode newNode=treeModel.addComponent(sampler,myTarget);
      if (firstInBatch) {
        addAssertion(treeModel,newNode);
        firstInBatch=false;
      }
      for (int i=0; subConfigs != null && i < subConfigs.length; i++) {
        if (subConfigs[i] instanceof HeaderManager) {
          subConfigs[i].setProperty(TestElement.GUI_CLASS,"org.apache.jmeter.protocol.http.gui.HeaderPanel");
          treeModel.addComponent(subConfigs[i],newNode);
        }
      }
    }
 catch (    IllegalUserActionException e) {
      JMeterUtils.reportErrorToUser(e.getMessage());
    }
  }
}
