{
  ValueReplacer replacer=new ValueReplacer();
  for (Iterator<Arguments> vars=variables.iterator(); vars.hasNext(); ) {
    final Map<String,String> map=vars.next().getArgumentsAsMap();
    for (Iterator<String> vals=map.values().iterator(); vals.hasNext(); ) {
      final Object next=vals.next();
      if ("".equals(next)) {
        vals.remove();
      }
    }
    replacer.addVariables(map);
  }
  try {
    replacer.reverseReplace(sampler,regexMatch);
    for (int i=0; i < configs.length; i++) {
      if (configs[i] != null) {
        replacer.reverseReplace(configs[i],regexMatch);
      }
    }
  }
 catch (  InvalidVariableException e) {
    log.warn("Invalid variables included for replacement into recorded " + "sample",e);
  }
}
