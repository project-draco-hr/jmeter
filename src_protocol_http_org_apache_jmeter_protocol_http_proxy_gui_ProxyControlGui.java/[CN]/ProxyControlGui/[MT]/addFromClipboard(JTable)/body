{
  GuiUtils.stopTableEditing(table);
  int rowCount=table.getRowCount();
  PowerTableModel model=null;
  try {
    String clipboardContent=GuiUtils.getPastedText();
    if (clipboardContent != null) {
      String[] clipboardLines=clipboardContent.split(NEW_LINE);
      for (      String clipboardLine : clipboardLines) {
        model=(PowerTableModel)table.getModel();
        model.addRow(new Object[]{clipboardLine});
      }
      if (table.getRowCount() > rowCount) {
        if (model != null) {
          int rowToSelect=model.getRowCount() - 1;
          table.setRowSelectionInterval(rowCount,rowToSelect);
        }
      }
    }
  }
 catch (  IOException ioe) {
    JOptionPane.showMessageDialog(this,"Could not add read arguments from clipboard:\n" + ioe.getLocalizedMessage(),"Error",JOptionPane.ERROR_MESSAGE);
  }
catch (  UnsupportedFlavorException ufe) {
    JOptionPane.showMessageDialog(this,"Could not add retrieve " + DataFlavor.stringFlavor.getHumanPresentableName() + " from clipboard"+ ufe.getLocalizedMessage(),"Error",JOptionPane.ERROR_MESSAGE);
  }
}
