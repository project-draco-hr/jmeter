{
  StringBuilder putBody=new StringBuilder(1000);
  boolean hasPutBody=false;
  HTTPFileArg files[]=getHTTPFiles();
  Header contentTypeHeader=put.getFirstHeader(HTTPConstants.HEADER_CONTENT_TYPE);
  String contentTypeValue=contentTypeHeader == null ? null : contentTypeHeader.getValue();
  if (contentTypeValue == null) {
    HTTPFileArg file=files.length > 0 ? files[0] : null;
    if (file != null && file.getMimeType() != null && file.getMimeType().length() > 0) {
      contentTypeValue=file.getMimeType();
    }
  }
  final String contentEncoding=getContentEncodingOrNull();
  final boolean haveContentEncoding=contentEncoding != null;
  final HttpParams putParams=put.getParams();
  final String charset=getCharsetWithDefault(putParams);
  final ContentType contentType=ContentType.create(contentTypeValue,charset);
  if (!hasArguments() && getSendFileAsPostBody()) {
    hasPutBody=true;
    FileEntity fileRequestEntity=new FileEntity(new File(files[0].getPath()),contentType);
    put.setEntity(fileRequestEntity);
    putBody.append("<actual file content, not shown here>");
  }
 else   if (getSendParameterValuesAsPostBody()) {
    hasPutBody=true;
    StringBuilder putBodyContent=new StringBuilder();
    PropertyIterator args=getArguments().iterator();
    while (args.hasNext()) {
      HTTPArgument arg=(HTTPArgument)args.next().getObjectValue();
      String value=null;
      if (haveContentEncoding) {
        value=arg.getEncodedValue(contentEncoding);
      }
 else {
        value=arg.getEncodedValue();
      }
      putBodyContent.append(value);
    }
    StringEntity requestEntity=new StringEntity(putBodyContent.toString(),contentType);
    put.setEntity(requestEntity);
  }
  if (hasPutBody) {
    if (put.getEntity().isRepeatable()) {
      ByteArrayOutputStream bos=new ByteArrayOutputStream();
      put.getEntity().writeTo(bos);
      bos.flush();
      putBody.append(new String(bos.toByteArray(),charset));
      bos.close();
    }
 else {
      putBody.append("<RequestEntity was not repeatable, cannot view what was sent>");
    }
    return putBody.toString();
  }
  return null;
}
