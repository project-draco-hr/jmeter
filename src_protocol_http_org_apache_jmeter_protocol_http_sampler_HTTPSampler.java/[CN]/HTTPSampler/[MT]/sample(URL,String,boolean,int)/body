{
  HttpURLConnection conn=null;
  String urlStr=url.toString();
  log.debug("Start : sample" + urlStr);
  HTTPSampleResult res=new HTTPSampleResult();
  if (this.getPropertyAsBoolean(MONITOR)) {
    res.setMonitor(true);
  }
 else {
    res.setMonitor(false);
  }
  res.setSampleLabel(urlStr);
  res.sampleStart();
  try {
    int retry;
    for (retry=1; retry <= MAX_CONN_RETRIES; retry++) {
      try {
        conn=setupConnection(url,method,res);
        conn.connect();
        break;
      }
 catch (      BindException e) {
        if (retry >= MAX_CONN_RETRIES) {
          log.error("Can't connect",e);
          throw e;
        }
        log.debug("Bind exception, try again");
        conn.disconnect();
        this.setUseKeepAlive(false);
        continue;
      }
catch (      IOException e) {
        log.debug("Connection failed, giving up");
        throw e;
      }
    }
    if (retry > MAX_CONN_RETRIES) {
      throw new BindException();
    }
    if (method.equals(POST)) {
      sendPostData(conn);
    }
    byte[] responseData=readResponse(conn,res);
    res.sampleEnd();
    res.setResponseData(responseData);
    int errorLevel=conn.getResponseCode();
    res.setResponseCode(Integer.toString(errorLevel));
    res.setSuccessful(isSuccessCode(errorLevel));
    res.setResponseMessage(conn.getResponseMessage());
    String ct=conn.getContentType();
    res.setContentType(ct);
    res.setEncodingAndType(ct);
    res.setResponseHeaders(getResponseHeaders(conn));
    if (res.isRedirect()) {
      res.setRedirectLocation(conn.getHeaderField("Location"));
    }
    saveConnectionCookies(conn,url,getCookieManager());
    res=resultProcessing(areFollowingRedirect,frameDepth,res);
    log.debug("End : sample");
    return res;
  }
 catch (  IOException e) {
    res.sampleEnd();
    return errorResult(e,res);
  }
 finally {
    disconnect(conn);
  }
}
