{
  log.debug("Start : sample2");
  long time=0L;
  SampleResult res=new SampleResult();
  if (redirected) {
  }
  URL u=null;
  HttpURLConnection conn=null;
  try {
    u=getUrl();
    res.setSampleLabel(getName());
    res.setSamplerData(this);
    if (log.isDebugEnabled()) {
      log.debug("sample2 : sampling url - " + u);
    }
    conn=setupConnection(u,getMethod());
    time=System.currentTimeMillis();
    if (!redirected && getProperty(HTTPSampler.METHOD).equals(HTTPSampler.POST)) {
      sendPostData(conn);
    }
    conn.connect();
    saveConnectionCookies(conn,u,getCookieManager());
    int errorLevel=0;
    try {
      errorLevel=getErrorLevel(conn,res,time);
    }
 catch (    IOException e) {
      res.setSuccessful(false);
      time=bundleResponseInResult(time,res,conn);
      return res;
    }
    if (errorLevel / 100 == 2 || errorLevel == 304) {
      time=bundleResponseInResult(time,res,conn);
    }
 else     if (errorLevel / 100 == 3) {
      if (redirected || !getFollowRedirects()) {
        time=bundleResponseInResult(time,res,conn);
      }
 else {
        redirectUrl(conn,u);
        time=System.currentTimeMillis() - time;
        res=sample(true);
        time+=res.getTime();
      }
    }
 else {
      time=bundleResponseInResult(time,res,conn);
      res.setSuccessful(false);
    }
    res.setTime(time);
    log.debug("End : sample2");
    return res;
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    res.setDataType(res.TEXT);
    try {
      res.setResponseData(readResponse(conn));
    }
 catch (    IOException e) {
      res.setResponseData(ex.toString().getBytes());
    }
    res.setResponseCode(NON_HTTP_RESPONSE_CODE);
    res.setResponseMessage(NON_HTTP_RESPONSE_MESSAGE);
    res.setTime(System.currentTimeMillis() - time);
    res.setSuccessful(false);
  }
 finally {
    try {
      String connection=conn.getHeaderField("Connection");
      if (connection == null || connection.equalsIgnoreCase("close"))       conn.disconnect();
    }
 catch (    Exception e) {
    }
  }
  log.debug("End : sample2");
  return res;
}
