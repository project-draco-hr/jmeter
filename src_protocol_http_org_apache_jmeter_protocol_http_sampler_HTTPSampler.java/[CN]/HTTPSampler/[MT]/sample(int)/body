{
  log.debug("Start : sample, redirects =" + redirects);
  long time=System.currentTimeMillis();
  SampleResult res=new SampleResult();
  URL u=null;
  try {
    u=getUrl();
    res.setSampleLabel(getName());
    if (log.isDebugEnabled()) {
      log.debug("sample2 : sampling url - " + u);
    }
    conn=setupConnection(u,getMethod(),res);
    if (getMethod().equals(HTTPSampler.POST)) {
      setPostHeaders(conn);
      time=connect();
      sendPostData(conn);
    }
 else {
      time=connect();
    }
    saveConnectionCookies(conn,u,getCookieManager());
    int errorLevel=0;
    try {
      errorLevel=getErrorLevel(conn,res,time);
    }
 catch (    IOException e) {
      time=bundleResponseInResult(time,res,conn);
      res.setSuccessful(false);
      res.setTime(time);
      return res;
    }
    if (errorLevel / 100 == 2 || errorLevel == 304) {
      time=bundleResponseInResult(time,res,conn);
    }
 else     if (errorLevel / 100 == 3) {
      if (redirects >= MAX_REDIRECTS) {
        throw new IOException("Maximum number of redirects exceeded");
      }
      if (!getFollowRedirects()) {
        time=bundleResponseInResult(time,res,conn);
      }
 else {
        time=bundleResponseInResult(time,res,conn);
        redirectUrl(conn,u);
        SampleResult redirectResult=sample(redirects + 1);
        res.addSubResult(redirectResult);
        res.setSuccessful(redirectResult.isSuccessful());
        time+=redirectResult.getTime();
      }
    }
 else {
      time=bundleResponseInResult(time,res,conn);
      res.setSuccessful(false);
    }
    res.setTime(time);
    log.debug("End : sample, redirects=" + redirects);
    if (isImageParser()) {
      if (imageSampler == null) {
        imageSampler=new HTTPSamplerFull();
      }
      res=imageSampler.downloadEmbeddedResources(res,this);
    }
    return res;
  }
 catch (  Exception ex) {
    log.warn(ex.getMessage(),ex);
    res.setDataType(SampleResult.TEXT);
    res.setResponseData(ex.toString().getBytes());
    res.setResponseCode(NON_HTTP_RESPONSE_CODE);
    res.setResponseMessage(NON_HTTP_RESPONSE_MESSAGE);
    res.setTime(System.currentTimeMillis() - time);
    res.setSuccessful(false);
  }
 finally {
    try {
      disconnect(conn);
    }
 catch (    Exception e) {
    }
  }
  log.debug("End : sample, redirects=" + redirects);
  return res;
}
