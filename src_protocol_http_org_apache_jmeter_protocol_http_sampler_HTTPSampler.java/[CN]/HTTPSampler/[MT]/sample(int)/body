{
  log.debug("Start : sample, redirects =" + redirects);
  long t0=System.currentTimeMillis();
  SampleResult res=new SampleResult();
  URL url=null;
  try {
    url=getUrl();
    res.setSampleLabel(getName());
    if (log.isDebugEnabled()) {
      log.debug("sample2 : sampling url - " + url);
    }
    conn=setupConnection(url,getMethod(),res);
    t0=connect();
    if (getMethod().equals(HTTPSampler.POST)) {
      sendPostData(conn);
    }
    byte[] responseData=readResponse(conn);
    long t1=System.currentTimeMillis();
    res.setResponseData(responseData);
    int errorLevel=conn.getResponseCode();
    res.setResponseCode(Integer.toString(errorLevel));
    res.setSuccessful(200 <= errorLevel && errorLevel <= 399);
    res.setResponseMessage(conn.getResponseMessage());
    String ct=conn.getHeaderField("Content-type");
    res.setContentType(ct);
    if (ct.startsWith("image/")) {
      res.setDataType(SampleResult.BINARY);
    }
 else {
      res.setDataType(SampleResult.TEXT);
    }
    res.setResponseHeaders(getResponseHeaders(conn));
    res.setTime(t1 - t0);
    saveConnectionCookies(conn,url,getCookieManager());
    if (301 <= errorLevel && errorLevel <= 303) {
      if (redirects >= MAX_REDIRECTS) {
        throw new IOException("Maximum number of redirects exceeded");
      }
      if (getFollowRedirects()) {
        redirectUrl(conn,url);
        SampleResult redirect=res;
        res=sample(redirects + 1);
        res.addSubResult(redirect);
        res.setTime(res.getTime() + redirect.getTime());
      }
    }
 else {
      if (isImageParser()) {
        if (imageSampler == null) {
          imageSampler=new HTTPSamplerFull();
        }
        res=imageSampler.downloadEmbeddedResources(res,this);
      }
    }
    log.debug("End : sample, redirects=" + redirects);
    return res;
  }
 catch (  Exception ex) {
    log.warn(ex.getMessage(),ex);
    res.setDataType(SampleResult.TEXT);
    res.setResponseData(ex.toString().getBytes());
    res.setResponseCode(NON_HTTP_RESPONSE_CODE);
    res.setResponseMessage(NON_HTTP_RESPONSE_MESSAGE);
    res.setTime(System.currentTimeMillis() - t0);
    res.setSuccessful(false);
  }
 finally {
    try {
      disconnect(conn);
    }
 catch (    Exception e) {
    }
  }
  log.debug("End : sample, redirects=" + redirects);
  return res;
}
