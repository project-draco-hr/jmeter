{
  HttpURLConnection conn;
  SSLManager sslmgr=null;
  if (PROTOCOL_HTTPS.equalsIgnoreCase(u.getProtocol())) {
    try {
      sslmgr=SSLManager.getInstance();
    }
 catch (    Exception e) {
      log.warn("Problem creating the SSLManager: ",e);
    }
  }
  conn=(HttpURLConnection)u.openConnection();
  conn.setInstanceFollowRedirects(getAutoRedirects());
  if (PROTOCOL_HTTPS.equalsIgnoreCase(u.getProtocol())) {
    try {
      if (null != sslmgr) {
        sslmgr.setContext(conn);
      }
    }
 catch (    Exception e) {
      log.warn("Problem setting the SSLManager for the connection: ",e);
    }
  }
  if (getUseKeepAlive()) {
    conn.setRequestProperty(HEADER_CONNECTION,KEEP_ALIVE);
  }
 else {
    conn.setRequestProperty(HEADER_CONNECTION,CONNECTION_CLOSE);
  }
  conn.setRequestMethod(method);
  String hdrs=setConnectionHeaders(conn,u,getHeaderManager());
  String cookies=setConnectionCookie(conn,u,getCookieManager());
  if (res != null) {
    res.setURL(u);
    res.setHTTPMethod(method);
    res.setRequestHeaders(hdrs);
    res.setCookies(cookies);
    if (method.equals(POST)) {
      res.setQueryString(getQueryString());
    }
  }
  setConnectionAuthorization(conn,u,getAuthManager());
  if (method.equals(POST)) {
    setPostHeaders(conn);
  }
 else   if (method.equals(PUT)) {
    setPutHeaders(conn);
  }
  return conn;
}
