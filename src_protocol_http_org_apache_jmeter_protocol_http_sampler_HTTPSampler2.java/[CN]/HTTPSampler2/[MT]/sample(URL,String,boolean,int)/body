{
  String urlStr=url.toString();
  log.debug("Start : sample" + urlStr);
  log.debug("method" + method);
  httpMethod=null;
  HTTPSampleResult res=new HTTPSampleResult();
  if (this.getPropertyAsBoolean(MONITOR)) {
    res.setMonitor(true);
  }
 else {
    res.setMonitor(false);
  }
  res.setSampleLabel(urlStr);
  res.sampleStart();
  try {
    HttpConnection connection=setupConnection(url,method,res);
    if (method.equals(POST)) {
      sendPostData(httpMethod);
    }
    int statusCode=httpMethod.execute(httpState,connection);
    InputStream instream=httpMethod.getResponseBodyAsStream();
    ByteArrayOutputStream outstream=new ByteArrayOutputStream(4 * 1024);
    byte[] buffer=new byte[4096];
    int len;
    while ((len=instream.read(buffer)) > 0) {
      outstream.write(buffer,0,len);
    }
    outstream.close();
    byte[] responseData=outstream.toByteArray();
    res.sampleEnd();
    res.setSampleLabel(httpMethod.getURI().toString());
    res.setResponseData(responseData);
    res.setResponseCode(Integer.toString(statusCode));
    res.setSuccessful(200 <= statusCode && statusCode <= 399);
    res.setResponseMessage(httpMethod.getStatusText());
    String ct=null;
    org.apache.commons.httpclient.Header h=httpMethod.getResponseHeader("Content-Type");
    if (h != null) {
      ct=h.getValue();
      res.setContentType(ct);
    }
    if (ct != null) {
      String de=ct.toLowerCase();
      final String cs="charset=";
      int cset=de.indexOf(cs);
      if (cset >= 0) {
        res.setDataEncoding(de.substring(cset + cs.length()));
      }
      if (ct.startsWith("image/")) {
        res.setDataType(HTTPSampleResult.BINARY);
      }
 else {
        res.setDataType(HTTPSampleResult.TEXT);
      }
    }
    res.setResponseHeaders(getResponseHeaders(httpMethod));
    if (res.isRedirect()) {
      res.setRedirectLocation(httpMethod.getResponseHeader("Location").getValue());
    }
    saveConnectionCookies(httpState,getCookieManager());
    res=resultProcessing(areFollowingRedirect,frameDepth,res);
    log.debug("End : sample");
    if (httpMethod != null)     httpMethod.releaseConnection();
    return res;
  }
 catch (  IllegalArgumentException e) {
    res.sampleEnd();
    HTTPSampleResult err=errorResult(e,res);
    err.setSampleLabel("Error: " + url.toString());
    return err;
  }
catch (  IOException e) {
    res.sampleEnd();
    HTTPSampleResult err=errorResult(e,res);
    err.setSampleLabel("Error: " + url.toString());
    return err;
  }
 finally {
    if (httpMethod != null)     httpMethod.releaseConnection();
  }
}
