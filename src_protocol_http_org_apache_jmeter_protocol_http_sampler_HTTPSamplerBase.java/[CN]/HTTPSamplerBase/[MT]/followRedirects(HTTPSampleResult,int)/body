{
  HTTPSampleResult totalRes=new HTTPSampleResult(res);
  totalRes.addRawSubResult(res);
  HTTPSampleResult lastRes=res;
  int redirect;
  for (redirect=0; redirect < MAX_REDIRECTS; redirect++) {
    boolean invalidRedirectUrl=false;
    String location=lastRes.getRedirectLocation();
    if (log.isDebugEnabled()) {
      log.debug("Initial location: " + location);
    }
    if (REMOVESLASHDOTDOT) {
      location=ConversionUtils.removeSlashDotDot(location);
    }
    location=encodeSpaces(location);
    if (log.isDebugEnabled()) {
      log.debug("Location after /. and space transforms: " + location);
    }
    String method=lastRes.getHTTPMethod();
    if (!HTTPConstants.HEAD.equalsIgnoreCase(method)) {
      method=HTTPConstants.GET;
    }
    try {
      URL url=ConversionUtils.makeRelativeURL(lastRes.getURL(),location);
      url=ConversionUtils.sanitizeUrl(url).toURL();
      if (log.isDebugEnabled()) {
        log.debug("Location as URL: " + url.toString());
      }
      lastRes=sample(url,method,true,frameDepth);
    }
 catch (    MalformedURLException e) {
      errorResult(e,lastRes);
      invalidRedirectUrl=true;
    }
catch (    URISyntaxException e) {
      errorResult(e,lastRes);
      invalidRedirectUrl=true;
    }
    if (lastRes.getSubResults() != null && lastRes.getSubResults().length > 0) {
      SampleResult[] subs=lastRes.getSubResults();
      for (int i=0; i < subs.length; i++) {
        totalRes.addSubResult(subs[i]);
      }
    }
 else {
      if (!invalidRedirectUrl) {
        totalRes.addSubResult(lastRes);
      }
    }
    if (!lastRes.isRedirect()) {
      break;
    }
  }
  if (redirect >= MAX_REDIRECTS) {
    lastRes=errorResult(new IOException("Exceeeded maximum number of redirects: " + MAX_REDIRECTS),new HTTPSampleResult(lastRes));
    totalRes.addSubResult(lastRes);
  }
  totalRes.setSampleLabel(totalRes.getSampleLabel() + "->" + lastRes.getSampleLabel());
  totalRes.setURL(lastRes.getURL());
  totalRes.setHTTPMethod(lastRes.getHTTPMethod());
  totalRes.setQueryString(lastRes.getQueryString());
  totalRes.setRequestHeaders(lastRes.getRequestHeaders());
  totalRes.setResponseData(lastRes.getResponseData());
  totalRes.setResponseCode(lastRes.getResponseCode());
  totalRes.setSuccessful(lastRes.isSuccessful());
  totalRes.setResponseMessage(lastRes.getResponseMessage());
  totalRes.setDataType(lastRes.getDataType());
  totalRes.setResponseHeaders(lastRes.getResponseHeaders());
  totalRes.setContentType(lastRes.getContentType());
  totalRes.setDataEncoding(lastRes.getDataEncodingNoDefault());
  return totalRes;
}
