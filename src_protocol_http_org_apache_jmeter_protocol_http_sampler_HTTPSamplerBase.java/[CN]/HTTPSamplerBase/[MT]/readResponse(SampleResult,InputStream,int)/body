{
  byte[] readBuffer=getThreadContext().getReadBuffer();
  int bufferSize=32;
  MessageDigest md=null;
  boolean asMD5=useMD5();
  if (asMD5) {
    try {
      md=MessageDigest.getInstance("MD5");
    }
 catch (    NoSuchAlgorithmException e) {
      log.error("Should not happen - could not find MD5 digest",e);
      asMD5=false;
    }
  }
 else {
    if (length <= 0) {
      bufferSize=4 * 1024;
    }
 else {
      bufferSize=length;
    }
  }
  ByteArrayOutputStream w=new ByteArrayOutputStream(bufferSize);
  int bytesRead=0;
  int totalBytes=0;
  boolean first=true;
  while ((bytesRead=in.read(readBuffer)) > -1) {
    if (first) {
      sampleResult.latencyEnd();
      first=false;
    }
    if (asMD5 && md != null) {
      md.update(readBuffer,0,bytesRead);
      totalBytes+=bytesRead;
    }
 else {
      w.write(readBuffer,0,bytesRead);
    }
  }
  in.close();
  w.flush();
  if (asMD5 && md != null) {
    byte[] md5Result=md.digest();
    w.write(JOrphanUtils.baToHexString(md5Result).getBytes());
    sampleResult.setBytes(totalBytes);
  }
  w.close();
  return w.toByteArray();
}
