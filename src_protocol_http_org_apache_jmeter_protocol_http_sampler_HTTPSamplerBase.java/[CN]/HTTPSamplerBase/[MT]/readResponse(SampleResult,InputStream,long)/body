{
  OutputStream w=null;
  try {
    byte[] readBuffer=new byte[8192];
    int bufferSize=32;
    MessageDigest md=null;
    boolean knownResponseLength=length > 0;
    if (useMD5()) {
      try {
        md=MessageDigest.getInstance("MD5");
      }
 catch (      NoSuchAlgorithmException e) {
        log.error("Should not happen - could not find MD5 digest",e);
      }
    }
 else {
      if (!knownResponseLength) {
        bufferSize=4 * 1024;
      }
 else {
        bufferSize=(int)Math.min(MAX_BUFFER_SIZE,length);
      }
    }
    int bytesReadInBuffer=0;
    long totalBytes=0;
    boolean first=true;
    boolean storeInBOS=true;
    while ((bytesReadInBuffer=in.read(readBuffer)) > -1) {
      if (first) {
        sampleResult.latencyEnd();
        first=false;
        if (md == null) {
          if (!knownResponseLength) {
            w=new org.apache.commons.io.output.ByteArrayOutputStream(bufferSize);
          }
 else {
            w=new DirectAccessByteArrayOutputStream(bufferSize);
          }
        }
      }
      if (md == null) {
        if (storeInBOS) {
          if (totalBytes + bytesReadInBuffer <= MAX_BYTES_TO_STORE_PER_REQUEST) {
            w.write(readBuffer,0,bytesReadInBuffer);
          }
 else {
            w.write(readBuffer,0,(int)(MAX_BYTES_TO_STORE_PER_REQUEST - totalBytes));
            storeInBOS=false;
          }
        }
      }
 else {
        md.update(readBuffer,0,bytesReadInBuffer);
      }
      totalBytes+=bytesReadInBuffer;
    }
    if (first) {
      sampleResult.latencyEnd();
      return new byte[0];
    }
    if (md == null) {
      return toByteArray(w);
    }
 else {
      byte[] md5Result=md.digest();
      sampleResult.setBytes(totalBytes);
      return JOrphanUtils.baToHexBytes(md5Result);
    }
  }
  finally {
    IOUtils.closeQuietly(in);
    IOUtils.closeQuietly(w);
  }
}
