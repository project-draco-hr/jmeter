{
  Parser HtmlParser=null;
  URL baseUrl=null;
  String displayName=res.getSampleLabel();
  try {
    String contents=new String(res.getResponseData());
    StringReader reader=new StringReader(contents);
    NodeReader nreader=new NodeReader(reader,contents.length());
    HtmlParser=new Parser(nreader,new DefaultParserFeedback());
    addTagListeners(HtmlParser);
  }
 catch (  Exception e) {
    log.error("IOException: had problems reading the InputStream");
  }
  try {
    baseUrl=sampler.getUrl();
    if (log.isDebugEnabled()) {
      log.error("baseUrl - " + baseUrl.toString());
    }
  }
 catch (  MalformedURLException mfue) {
    log.error("Error creating URL '" + displayName + "'");
    log.error("MalformedURLException - " + mfue);
    res.setResponseData(mfue.toString().getBytes());
    res.setResponseCode(HTTPSampler.NON_HTTP_RESPONSE_CODE);
    res.setResponseMessage(HTTPSampler.NON_HTTP_RESPONSE_MESSAGE);
    res.setSuccessful(false);
    mfue.printStackTrace();
    return res;
  }
  Set uniqueURLs=new HashSet();
  parseNodes(HtmlParser,uniqueURLs,res,sampler,baseUrl);
  if (log.isDebugEnabled()) {
    log.debug("Total time - " + res.getTime());
  }
  log.debug("End   : NewHTTPSamplerFull sample");
  return res;
}
