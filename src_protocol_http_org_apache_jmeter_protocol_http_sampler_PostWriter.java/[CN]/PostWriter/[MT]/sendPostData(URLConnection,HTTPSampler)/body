{
  StringBuffer postedBody=new StringBuffer(1000);
  if (sampler.getUseMultipartForPost()) {
    OutputStream out=connection.getOutputStream();
    out.write(formDataPostBody);
    postedBody.append(new String(formDataPostBody,"UTF-8"));
    if (sampler.hasUploadableFiles()) {
      out.write(formDataFileStartMultipart);
      postedBody.append(new String(formDataFileStartMultipart,"UTF-8"));
      writeFileToStream(sampler.getFilename(),out);
      postedBody.append("<actual file content, not shown here>");
      byte[] fileMultipartEndDivider=getFileMultipartEndDivider();
      out.write(fileMultipartEndDivider);
      postedBody.append(new String(fileMultipartEndDivider,"UTF-8"));
    }
    byte[] multipartEndDivider=getMultipartEndDivider();
    out.write(multipartEndDivider);
    postedBody.append(new String(multipartEndDivider,"UTF-8"));
    out.flush();
    out.close();
  }
 else {
    if (sampler.getArguments() != null && !sampler.hasArguments() && sampler.getSendFileAsPostBody()) {
      OutputStream out=connection.getOutputStream();
      writeFileToStream(sampler.getFilename(),out);
      out.flush();
      out.close();
      postedBody.append("<actual file content, not shown here>");
    }
 else     if (formDataUrlEncoded != null) {
      OutputStream out=connection.getOutputStream();
      out.write(formDataUrlEncoded);
      out.flush();
      out.close();
      postedBody.append(new String(formDataUrlEncoded,"UTF-8"));
    }
  }
  return postedBody.toString();
}
