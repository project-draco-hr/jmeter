{
  StringBuilder postedBody=new StringBuilder(1000);
  final String xmlFile=getXmlFile();
  if (xmlFile != null && xmlFile.length() > 0) {
    File xmlFileAsFile=new File(xmlFile);
    if (!(xmlFileAsFile.exists() && xmlFileAsFile.canRead())) {
      throw new IllegalArgumentException(JMeterUtils.getResString("soap_sampler_file_invalid") + xmlFileAsFile.getAbsolutePath());
    }
    postedBody.append("Filename: ").append(xmlFile).append("\n");
    postedBody.append("<actual file content, not shown here>");
    post.setRequestEntity(new RequestEntity(){
      public boolean isRepeatable(){
        return true;
      }
      public void writeRequest(      OutputStream out) throws IOException {
        InputStream in=null;
        try {
          in=new FileInputStream(xmlFile);
          IOUtils.copy(in,out);
          out.flush();
        }
  finally {
          IOUtils.closeQuietly(in);
        }
      }
      public long getContentLength(){
switch (length) {
case -1:
          return -1;
case 0:
        return (new File(xmlFile)).length();
default :
      return length;
  }
}
public String getContentType(){
  return DEFAULT_CONTENT_TYPE;
}
}
);
}
 else {
postedBody.append(getXmlData());
post.setRequestEntity(new RequestEntity(){
public boolean isRepeatable(){
  return true;
}
public void writeRequest(OutputStream out) throws IOException {
  IOUtils.write(getXmlData(),out,ENCODING);
  out.flush();
}
public long getContentLength(){
  try {
    return getXmlData().getBytes(ENCODING).length;
  }
 catch (  UnsupportedEncodingException e) {
    log.warn(e.getLocalizedMessage());
    return -1;
  }
}
public String getContentType(){
  return DEFAULT_CONTENT_TYPE + "; charset=" + ENCODING;
}
}
);
}
return postedBody.toString();
}
