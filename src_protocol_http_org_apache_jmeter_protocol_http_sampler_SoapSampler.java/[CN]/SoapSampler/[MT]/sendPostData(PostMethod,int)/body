{
  StringBuffer postedBody=new StringBuffer(1000);
  final String xmlFile=getXmlFile();
  if (xmlFile != null && xmlFile.length() > 0) {
    postedBody.append("Filename: ").append(xmlFile).append("\n");
    postedBody.append("<actual file content, not shown here>");
    post.setRequestEntity(new RequestEntity(){
      public boolean isRepeatable(){
        return true;
      }
      public void writeRequest(      OutputStream out) throws IOException {
        byte[] buf=new byte[1024];
        int read;
        InputStream in=new FileInputStream(xmlFile);
        while ((read=in.read(buf)) > 0) {
          out.write(buf,0,read);
        }
        in.close();
        out.flush();
      }
      public long getContentLength(){
switch (length) {
case -1:
          return -1;
case 0:
        return (new File(xmlFile)).length();
default :
      return length;
  }
}
public String getContentType(){
  return "text/xml";
}
}
);
}
 else {
postedBody.append(getXmlData());
post.setRequestEntity(new RequestEntity(){
public boolean isRepeatable(){
  return true;
}
public void writeRequest(OutputStream out) throws IOException {
  PrintWriter printer=new PrintWriter(out);
  printer.print(getXmlData());
  printer.flush();
}
public long getContentLength(){
  return getXmlData().getBytes().length;
}
public String getContentType(){
  return "text/xml";
}
}
);
}
return postedBody.toString();
}
