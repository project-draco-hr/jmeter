{
  try {
    org.w3c.dom.Element rdoc=createDocument();
    Envelope msgEnv=Envelope.unmarshall(rdoc);
    Message msg=new Message();
    RESULT.setURL(this.getUrl());
    RESULT.sampleStart();
    SOAPHTTPConnection spconn=null;
    if (this.getHeaderManager() != null && this.getHeaderManager().getSOAPHeader() != null) {
      spconn=(SOAPHTTPConnection)this.getHeaderManager().getSOAPHeader();
    }
 else {
      spconn=new SOAPHTTPConnection();
    }
    String phost="";
    int pport=0;
    if (this.getUseProxy()) {
      if (this.getProxyHost().length() > 0 && this.getProxyPort() > 0) {
        phost=this.getProxyHost();
        pport=this.getProxyPort();
      }
 else {
        if (System.getProperty("http.proxyHost") != null || System.getProperty("http.proxyPort") != null) {
          phost=System.getProperty("http.proxyHost");
          pport=Integer.parseInt(System.getProperty("http.proxyPort"));
        }
      }
      if (phost.length() > 0 && pport > 0) {
        spconn.setProxyHost(phost);
        spconn.setProxyPort(pport);
      }
    }
    spconn.setMaintainSession(true);
    msg.setSOAPTransport(spconn);
    msg.send(this.getUrl(),this.getSoapAction(),msgEnv);
    if (this.getHeaderManager() != null) {
      this.getHeaderManager().setSOAPHeader(spconn);
    }
    SOAPTransport st=msg.getSOAPTransport();
    BufferedReader br=st.receive();
    RESULT.setDataType(SampleResult.TEXT);
    if (this.getPropertyAsBoolean(READ_RESPONSE)) {
      StringBuffer buf=new StringBuffer();
      String line;
      while ((line=br.readLine()) != null) {
        buf.append(line);
      }
      RESULT.sampleEnd();
      RESULT.setResponseData(buf.toString().getBytes());
    }
 else {
      br.read();
      RESULT.sampleEnd();
      RESULT.setResponseData(JMeterUtils.getResString("read_response_message").getBytes());
    }
    RESULT.setSuccessful(true);
    RESULT.setSamplerData(getUrl().getProtocol() + "://" + getUrl().getHost()+ "/"+ getUrl().getFile()+ "\n"+ FILE_CONTENTS);
    RESULT.setDataEncoding(st.getResponseSOAPContext().getContentType());
    RESULT.setResponseCode("200");
    RESULT.setResponseHeaders(this.convertSoapHeaders(st.getHeaders()));
    RESULT.setSampleLabel(this.getUrl().toString());
    br.close();
    msg=null;
    st=null;
  }
 catch (  Exception exception) {
    log.debug(exception.getMessage());
    RESULT.setSuccessful(false);
  }
}
