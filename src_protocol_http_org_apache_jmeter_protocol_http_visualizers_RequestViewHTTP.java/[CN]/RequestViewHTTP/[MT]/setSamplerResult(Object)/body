{
  this.searchTextExtension.resetTextToFind();
  if (objectResult instanceof HTTPSampleResult) {
    HTTPSampleResult sampleResult=(HTTPSampleResult)objectResult;
    requestModel.addRow(new RowResult(JMeterUtils.getResString("view_results_table_request_http_method"),sampleResult.getHTTPMethod()));
    LinkedHashMap<String,String> lhm=JMeterUtils.parseHeaders(sampleResult.getRequestHeaders());
    for (    Entry<String,String> entry : lhm.entrySet()) {
      headersModel.addRow(new RowResult(entry.getKey(),entry.getValue()));
    }
    URL hUrl=sampleResult.getURL();
    if (hUrl != null) {
      requestModel.addRow(new RowResult(JMeterUtils.getResString("view_results_table_request_http_protocol"),hUrl.getProtocol()));
      requestModel.addRow(new RowResult(JMeterUtils.getResString("view_results_table_request_http_host"),hUrl.getHost()));
      int port=hUrl.getPort() == -1 ? hUrl.getDefaultPort() : hUrl.getPort();
      requestModel.addRow(new RowResult(JMeterUtils.getResString("view_results_table_request_http_port"),Integer.valueOf(port)));
      requestModel.addRow(new RowResult(JMeterUtils.getResString("view_results_table_request_http_path"),hUrl.getPath()));
      String queryGet=hUrl.getQuery() == null ? "" : hUrl.getQuery();
      boolean isMultipart=isMultipart(lhm);
      String queryPost=sampleResult.getQueryString();
      if (!isMultipart && StringUtils.isNotBlank(queryPost)) {
        if (queryGet.length() > 0) {
          queryGet+=PARAM_CONCATENATE;
        }
        queryGet+=queryPost;
      }
      if (StringUtils.isNotBlank(queryGet)) {
        Set<Entry<String,String[]>> keys=RequestViewHTTP.getQueryMap(queryGet).entrySet();
        for (        Entry<String,String[]> entry : keys) {
          for (          String value : entry.getValue()) {
            paramsModel.addRow(new RowResult(entry.getKey(),value));
          }
        }
      }
      if (isMultipart && StringUtils.isNotBlank(queryPost)) {
        String contentType=lhm.get(HTTPConstants.HEADER_CONTENT_TYPE);
        String boundaryString=extractBoundary(contentType);
        MultipartUrlConfig urlconfig=new MultipartUrlConfig(boundaryString);
        urlconfig.parseArguments(queryPost);
        for (        JMeterProperty prop : urlconfig.getArguments()) {
          Argument arg=(Argument)prop.getObjectValue();
          paramsModel.addRow(new RowResult(arg.getName(),arg.getValue()));
        }
      }
    }
    String cookie=sampleResult.getCookies();
    if (cookie != null && cookie.length() > 0) {
      headersModel.addRow(new RowResult(JMeterUtils.getParsedLabel("view_results_table_request_http_cookie"),sampleResult.getCookies()));
    }
  }
 else {
    requestModel.addRow(new RowResult("",JMeterUtils.getResString("view_results_table_request_http_nohttp")));
  }
}
