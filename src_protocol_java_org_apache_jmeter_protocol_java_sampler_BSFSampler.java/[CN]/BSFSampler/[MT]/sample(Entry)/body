{
  final String label=getLabel();
  log.info(label + " " + getFilename());
  SampleResult res=new SampleResult();
  res.setSampleLabel(label);
  FileInputStream is=null;
  res.sampleStart();
  try {
    final String request=getScript();
    final String fileName=getFilename();
    mgr.declareBean("log",log,log.getClass());
    mgr.declareBean("Label",label,String.class);
    mgr.declareBean("FileName",fileName,String.class);
    mgr.declareBean("Parameters",getParameters(),String.class);
    String[] args=JOrphanUtils.split(getParameters()," ");
    mgr.declareBean("args",args,args.getClass());
    mgr.declareBean("SampleResult",res,res.getClass());
    res.setResponseCode("200");
    res.setResponseMessage("OK");
    res.setSuccessful(true);
    res.setDataType(SampleResult.TEXT);
    JMeterContext jmctx=JMeterContextService.getContext();
    JMeterVariables vars=jmctx.getVariables();
    mgr.declareBean("ctx",jmctx,jmctx.getClass());
    mgr.declareBean("vars",vars,vars.getClass());
    BSFEngine bsfEngine=mgr.loadScriptingEngine(getScriptLanguage());
    Object bsfOut=null;
    if (fileName.length() > 0) {
      res.setSamplerData("File: " + fileName);
      is=new FileInputStream(fileName);
      bsfOut=bsfEngine.eval(fileName,0,0,IOUtils.toString(is));
    }
 else {
      res.setSamplerData("[script]");
      bsfOut=bsfEngine.eval("script",0,0,request);
    }
    if (bsfOut != null) {
      res.setResponseData(bsfOut.toString().getBytes());
    }
  }
 catch (  NoClassDefFoundError ex) {
    log.warn("",ex);
    res.setSuccessful(false);
    res.setResponseCode("500");
    res.setResponseMessage(ex.toString());
  }
catch (  Exception ex) {
    log.warn("",ex);
    res.setSuccessful(false);
    res.setResponseCode("500");
    res.setResponseMessage(ex.toString());
  }
 finally {
    res.sampleEnd();
    IOUtils.closeQuietly(is);
  }
  return res;
}
