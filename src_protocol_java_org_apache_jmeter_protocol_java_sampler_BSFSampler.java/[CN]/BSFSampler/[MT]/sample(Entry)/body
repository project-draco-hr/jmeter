{
  final String label=getName();
  final String request=getScript();
  final String fileName=getFilename();
  log.debug(label + " " + fileName);
  SampleResult res=new SampleResult();
  res.setSampleLabel(label);
  InputStream is=null;
  BSFEngine bsfEngine=null;
  BSFManager mgr=new BSFManager();
  res.setResponseCode("200");
  res.setResponseMessage("OK");
  res.setSuccessful(true);
  res.setDataType(SampleResult.TEXT);
  res.sampleStart();
  try {
    initManager(mgr);
    mgr.declareBean("SampleResult",res,res.getClass());
    bsfEngine=mgr.loadScriptingEngine(getScriptLanguage());
    Object bsfOut=null;
    if (fileName.length() > 0) {
      res.setSamplerData("File: " + fileName);
      is=new BufferedInputStream(new FileInputStream(fileName));
      bsfOut=bsfEngine.eval(fileName,0,0,IOUtils.toString(is));
    }
 else {
      res.setSamplerData(request);
      bsfOut=bsfEngine.eval("script",0,0,request);
    }
    if (bsfOut != null) {
      res.setResponseData(bsfOut.toString(),null);
    }
  }
 catch (  BSFException ex) {
    log.warn("BSF error",ex);
    res.setSuccessful(false);
    res.setResponseCode("500");
    res.setResponseMessage(ex.toString());
  }
catch (  Exception ex) {
    log.warn("Problem evaluating the script",ex);
    res.setSuccessful(false);
    res.setResponseCode("500");
    res.setResponseMessage(ex.toString());
  }
 finally {
    res.sampleEnd();
    IOUtils.closeQuietly(is);
    mgr.terminate();
  }
  return res;
}
