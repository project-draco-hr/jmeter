{
  log.debug("executing jdbc");
  Statement stmt=null;
  try {
    String _queryType=getQueryType();
    if (SELECT.equals(_queryType)) {
      stmt=conn.createStatement();
      stmt.setQueryTimeout(getIntegerQueryTimeout());
      ResultSet rs=null;
      try {
        rs=stmt.executeQuery(getQuery());
        sample.latencyEnd();
        return getStringFromResultSet(rs).getBytes(ENCODING);
      }
  finally {
        close(rs);
      }
    }
 else     if (CALLABLE.equals(_queryType)) {
      try (CallableStatement cstmt=getCallableStatement(conn)){
        int[] out=setArguments(cstmt);
        boolean hasResultSet=cstmt.execute();
        sample.latencyEnd();
        String sb=resultSetsToString(cstmt,hasResultSet,out);
        return sb.getBytes(ENCODING);
      }
     }
 else     if (UPDATE.equals(_queryType)) {
      stmt=conn.createStatement();
      stmt.setQueryTimeout(getIntegerQueryTimeout());
      stmt.executeUpdate(getQuery());
      sample.latencyEnd();
      int updateCount=stmt.getUpdateCount();
      String results=updateCount + " updates";
      return results.getBytes(ENCODING);
    }
 else     if (PREPARED_SELECT.equals(_queryType)) {
      try (PreparedStatement pstmt=getPreparedStatement(conn)){
        setArguments(pstmt);
        ResultSet rs=null;
        try {
          rs=pstmt.executeQuery();
          sample.latencyEnd();
          return getStringFromResultSet(rs).getBytes(ENCODING);
        }
  finally {
          close(rs);
        }
      }
     }
 else     if (PREPARED_UPDATE.equals(_queryType)) {
      try (PreparedStatement pstmt=getPreparedStatement(conn)){
        setArguments(pstmt);
        pstmt.executeUpdate();
        sample.latencyEnd();
        String sb=resultSetsToString(pstmt,false,null);
        return sb.getBytes(ENCODING);
      }
     }
 else     if (ROLLBACK.equals(_queryType)) {
      conn.rollback();
      sample.latencyEnd();
      return ROLLBACK.getBytes(ENCODING);
    }
 else     if (COMMIT.equals(_queryType)) {
      conn.commit();
      sample.latencyEnd();
      return COMMIT.getBytes(ENCODING);
    }
 else     if (AUTOCOMMIT_FALSE.equals(_queryType)) {
      conn.setAutoCommit(false);
      sample.latencyEnd();
      return AUTOCOMMIT_FALSE.getBytes(ENCODING);
    }
 else     if (AUTOCOMMIT_TRUE.equals(_queryType)) {
      conn.setAutoCommit(true);
      sample.latencyEnd();
      return AUTOCOMMIT_TRUE.getBytes(ENCODING);
    }
 else {
      throw new UnsupportedOperationException("Unexpected query type: " + _queryType);
    }
  }
  finally {
    close(stmt);
  }
}
