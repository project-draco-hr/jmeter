{
  ResultSetMetaData meta=rs.getMetaData();
  StringBuilder sb=new StringBuilder();
  int numColumns=meta.getColumnCount();
  for (int i=1; i <= numColumns; i++) {
    sb.append(meta.getColumnLabel(i));
    if (i == numColumns) {
      sb.append('\n');
    }
 else {
      sb.append('\t');
    }
  }
  JMeterVariables jmvars=getThreadContext().getVariables();
  String varnames[]=getVariableNames().split(COMMA);
  String resultVariable=getResultVariable().trim();
  List<Map<String,Object>> results=null;
  if (resultVariable.length() > 0) {
    results=new ArrayList<Map<String,Object>>();
    jmvars.putObject(resultVariable,results);
  }
  int j=0;
  while (rs.next()) {
    Map<String,Object> row=null;
    j++;
    for (int i=1; i <= numColumns; i++) {
      Object o=rs.getObject(i);
      if (results != null) {
        if (row == null) {
          row=new HashMap<String,Object>(numColumns);
          results.add(row);
        }
        row.put(meta.getColumnLabel(i),o);
      }
      if (o instanceof byte[]) {
        o=new String((byte[])o,ENCODING);
      }
      sb.append(o);
      if (i == numColumns) {
        sb.append('\n');
      }
 else {
        sb.append('\t');
      }
      if (i <= varnames.length) {
        String name=varnames[i - 1].trim();
        if (name.length() > 0) {
          jmvars.put(name + UNDERSCORE + j,o == null ? null : o.toString());
        }
      }
    }
  }
  for (int i=0; i < varnames.length; i++) {
    String name=varnames[i].trim();
    if (name.length() > 0 && jmvars != null) {
      final String varCount=name + "_#";
      String prevCount=jmvars.get(varCount);
      if (prevCount != null) {
        int prev=Integer.parseInt(prevCount);
        for (int n=j + 1; n <= prev; n++) {
          jmvars.remove(name + UNDERSCORE + n);
        }
      }
      jmvars.put(varCount,Integer.toString(j));
    }
  }
  return sb.toString();
}
