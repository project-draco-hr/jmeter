{
  StringBuilder sb=new StringBuilder();
  int updateCount=0;
  if (!result) {
    updateCount=pstmt.getUpdateCount();
  }
  do {
    if (result) {
      ResultSet rs=null;
      try {
        rs=pstmt.getResultSet();
        sb.append(getStringFromResultSet(rs)).append("\n");
      }
  finally {
        close(rs);
      }
    }
 else {
      sb.append(updateCount).append(" updates.\n");
    }
    result=pstmt.getMoreResults();
    if (!result) {
      updateCount=pstmt.getUpdateCount();
    }
  }
 while (result || (updateCount != -1));
  if (out != null && pstmt instanceof CallableStatement) {
    List<Object> outputValues=new ArrayList<>();
    CallableStatement cs=(CallableStatement)pstmt;
    sb.append("Output variables by position:\n");
    for (int i=0; i < out.length; i++) {
      if (out[i] != java.sql.Types.NULL) {
        Object o=cs.getObject(i + 1);
        outputValues.add(o);
        sb.append("[");
        sb.append(i + 1);
        sb.append("] ");
        sb.append(o);
        if (o instanceof java.sql.ResultSet && RS_COUNT_RECORDS.equals(resultSetHandler)) {
          sb.append(" ").append(countRows((ResultSet)o)).append(" rows");
        }
        sb.append("\n");
      }
    }
    String varnames[]=getVariableNames().split(COMMA);
    if (varnames.length > 0) {
      JMeterVariables jmvars=getThreadContext().getVariables();
      for (int i=0; i < varnames.length && i < outputValues.size(); i++) {
        String name=varnames[i].trim();
        if (name.length() > 0) {
          Object o=outputValues.get(i);
          if (o instanceof java.sql.ResultSet) {
            ResultSet resultSet=(ResultSet)o;
            if (RS_STORE_AS_OBJECT.equals(resultSetHandler)) {
              jmvars.putObject(name,o);
            }
 else             if (RS_COUNT_RECORDS.equals(resultSetHandler)) {
              jmvars.put(name,o.toString() + " " + countRows(resultSet)+ " rows");
            }
 else {
              jmvars.put(name,o.toString());
            }
          }
 else {
            jmvars.put(name,o == null ? null : o.toString());
          }
        }
      }
    }
  }
  return sb.toString();
}
