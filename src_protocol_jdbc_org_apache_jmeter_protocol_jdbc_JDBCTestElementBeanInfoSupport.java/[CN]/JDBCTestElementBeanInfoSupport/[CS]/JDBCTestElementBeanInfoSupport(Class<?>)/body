{
  super(beanClass);
  createPropertyGroup("varName",new String[]{"dataSource"});
  createPropertyGroup("sql",new String[]{"queryType","query","queryArguments","queryArgumentsTypes","variableNames","resultVariable"});
  PropertyDescriptor p=property("dataSource");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p=property("queryArguments");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p=property("queryArgumentsTypes");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p=property("variableNames");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p=property("resultVariable");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p=property("queryType");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,AbstractJDBCTestElement.SELECT);
  p.setValue(NOT_OTHER,Boolean.TRUE);
  p.setValue(TAGS,new String[]{AbstractJDBCTestElement.SELECT,AbstractJDBCTestElement.UPDATE,AbstractJDBCTestElement.CALLABLE,AbstractJDBCTestElement.PREPARED_SELECT,AbstractJDBCTestElement.PREPARED_UPDATE,AbstractJDBCTestElement.COMMIT,AbstractJDBCTestElement.ROLLBACK,AbstractJDBCTestElement.AUTOCOMMIT_FALSE,AbstractJDBCTestElement.AUTOCOMMIT_TRUE});
  p=property("query");
  p.setValue(NOT_UNDEFINED,Boolean.TRUE);
  p.setValue(DEFAULT,"");
  p.setPropertyEditorClass(TextAreaEditor.class);
}
