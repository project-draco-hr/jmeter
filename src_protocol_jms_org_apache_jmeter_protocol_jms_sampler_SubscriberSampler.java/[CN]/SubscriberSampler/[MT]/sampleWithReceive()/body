{
  SampleResult result=new SampleResult();
  result.setSampleLabel(getName());
  if (this.SUBSCRIBER == null) {
    this.initReceiveClient();
    this.SUBSCRIBER.start();
  }
  this.loop=this.getIterationCount();
  this.SUBSCRIBER.setLoop(this.loop);
  result.sampleStart();
  while (this.SUBSCRIBER.count(0) < this.loop) {
    try {
      Thread.sleep(0,50);
    }
 catch (    Exception e) {
      log.info(e.getMessage());
    }
  }
  result.sampleEnd();
  result.setResponseHeaders(loop + " samples messages recieved");
  if (this.SUBSCRIBER.getMessageType() == ReceiveSubscriber.TEXT) {
    result.setSamplerData(this.SUBSCRIBER.getMessage());
    result.setContentType(SampleResult.TEXT);
  }
  if (this.getReadResponseAsBoolean()) {
    if (this.SUBSCRIBER.getMessageType() == ReceiveSubscriber.TEXT) {
      result.setResponseData(this.SUBSCRIBER.getMessage().getBytes());
    }
 else {
      result.setResponseData(this.SUBSCRIBER.getObjectMessage().toString().getBytes());
    }
  }
 else {
    if (this.SUBSCRIBER.getMessageType() == ReceiveSubscriber.TEXT) {
      result.setContentLength(this.SUBSCRIBER.getMessage().getBytes().length);
    }
  }
  result.setSuccessful(true);
  result.setResponseCode(loop + " message(s) recieved successfully");
  result.setSamplerData("Not applicable");
  result.setSampleCount(this.loop);
  this.SUBSCRIBER.clear();
  this.SUBSCRIBER.resetCount();
  return result;
}
