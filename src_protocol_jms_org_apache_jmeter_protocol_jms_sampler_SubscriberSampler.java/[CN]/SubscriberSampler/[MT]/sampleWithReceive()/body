{
  SampleResult result=new SampleResult();
  result.setDataType(SampleResult.TEXT);
  StringBuilder buffer=new StringBuilder();
  StringBuilder propBuffer=new StringBuilder();
  int cnt;
  result.setSampleLabel(getName());
  if (SUBSCRIBER == null) {
    try {
      initReceiveClient();
    }
 catch (    NamingException ex) {
      result.sampleStart();
      result.sampleEnd();
      result.setResponseCode("000");
      result.setResponseMessage(ex.toString());
      return result;
    }
catch (    JMSException ex) {
      result.sampleStart();
      result.sampleEnd();
      result.setResponseCode("000");
      result.setResponseMessage(ex.toString());
      return result;
    }
    SUBSCRIBER.start();
  }
  int loop=getIterationCount();
  result.sampleStart();
  while (SUBSCRIBER.count(0) < loop && interrupted == false) {
    try {
      Thread.sleep(0,50);
    }
 catch (    InterruptedException e) {
      log.debug(e.getMessage());
    }
  }
  result.sampleEnd();
  int read=SUBSCRIBER.count(0);
  result.setResponseMessage(read + " samples messages received");
  for (cnt=0; cnt < read; cnt++) {
    Message msg=SUBSCRIBER.getMessage();
    extractContent(buffer,propBuffer,msg);
  }
  if (getReadResponseAsBoolean()) {
    result.setResponseData(buffer.toString().getBytes());
  }
 else {
    result.setBytes(buffer.toString().getBytes().length);
  }
  result.setResponseHeaders(propBuffer.toString());
  result.setSuccessful(true);
  if (read == 0) {
    result.setResponseCode("404");
  }
 else {
    result.setResponseCodeOK();
  }
  result.setResponseMessage(read + " message(s) received successfully");
  result.setSamplerData(loop + " messages expected");
  result.setSampleCount(read);
  return result;
}
