{
  catClass.info("Start : init1");
  GuiPackage guiPkg=GuiPackage.getInstance();
  frame=guiPkg.getMainFrame();
  model.setState(MethodConfig.METHOD_GET_HOME_NAMES);
  model.setGui(this);
  methodHomeNameBox=new JComboBox();
  methodHomeNameBox.setEditable(false);
  methodHomeNameBox.setAlignmentX(Component.LEFT_ALIGNMENT);
  methodHomeNameBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      catClass.debug("actionPerformed1 : Home name method JComboBox changed");
      JComboBox comboBox=(JComboBox)e.getSource();
      String method=(String)methodHomeNameBox.getSelectedItem();
      model.setMethodHomeName(method);
      model.setState(MethodConfig.METHOD_GET_HOME_PARMS);
      resetHomeMethodParms();
      resetRemoteInterfaceList();
      resetRemoteMethodName();
      resetRemoteMethodParms();
      actionButton.setText(JMeterUtils.getResString("jndi_method_button_reflect"));
      updateGui();
    }
  }
);
  remoteInterfaceBox=new JComboBox();
  remoteInterfaceBox.setEditable(false);
  remoteInterfaceBox.setAlignmentX(Component.LEFT_ALIGNMENT);
  remoteInterfaceBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      catClass.debug("actionPerformed1 : Remote Interface JComboBox changed");
      JComboBox comboBox=(JComboBox)e.getSource();
      String interfaceName=(String)remoteInterfaceBox.getSelectedItem();
      ArrayList remoteInterfaceList=(ArrayList)model.getRemoteInterfaceList();
      if (remoteInterfaceList != null) {
        Object[] remoteInterfaceListArray=remoteInterfaceList.toArray();
        int i=0;
        boolean found=false;
        String remoteInterfaceListName=null;
        Object selectedInterface=null;
        while (i < remoteInterfaceListArray.length && !found) {
          remoteInterfaceListName=remoteInterfaceListArray[i].toString();
          if (remoteInterfaceListName.equals(interfaceName)) {
            found=true;
            selectedInterface=remoteInterfaceListArray[i];
          }
          i++;
        }
        model.setRemoteInterfaceType(selectedInterface);
        model.setState(MethodConfig.METHOD_GET_REMOTE_NAMES);
      }
      resetRemoteMethodName();
      resetRemoteMethodParms();
      actionButton.setText(JMeterUtils.getResString("jndi_method_button_reflect"));
      updateGui();
    }
  }
);
  methodRemoteNameBox=new JComboBox();
  methodRemoteNameBox.setEditable(false);
  methodRemoteNameBox.setAlignmentX(Component.LEFT_ALIGNMENT);
  methodRemoteNameBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      catClass.debug("actionPerformed1 : Remote method name JComboBox changed");
      JComboBox comboBox=(JComboBox)e.getSource();
      String method=(String)methodRemoteNameBox.getSelectedItem();
      model.setMethodRemoteName(method);
      model.setState(MethodConfig.METHOD_GET_REMOTE_PARMS);
      resetRemoteMethodParms();
      actionButton.setText(JMeterUtils.getResString("jndi_method_button_reflect"));
      updateGui();
    }
  }
);
  this.setLayout(new VerticalLayout(5,VerticalLayout.LEFT,VerticalLayout.TOP));
  JPanel mainPanel=new JPanel();
  Border margin=new EmptyBorder(10,10,5,10);
  mainPanel.setBorder(margin);
  mainPanel.setLayout(new VerticalLayout(5,VerticalLayout.LEFT));
  JLabel panelTitleLabel=new JLabel(JMeterUtils.getResString("jndi_method_title"));
  Font curFont=panelTitleLabel.getFont();
  int curFontSize=curFont.getSize();
  curFontSize+=4;
  panelTitleLabel.setFont(new Font(curFont.getFontName(),curFont.getStyle(),curFontSize));
  mainPanel.add(panelTitleLabel);
  namePanel=new NamePanel(model);
  mainPanel.add(namePanel);
  JPanel jndiPanel=new JPanel();
  jndiPanel.setLayout(new VerticalLayout(5,VerticalLayout.LEFT));
  jndiPanel.setBorder(BorderFactory.createTitledBorder(JMeterUtils.getResString("jndi_method_name")));
  methodHomeNamePanel=getMethodHomeNamePanel();
  methodHomeParmsPanel=getMethodHomeParmsPanel();
  remoteInterfaceListPanel=getRemoteInterfaceListPanel();
  methodRemoteNamePanel=getMethodRemoteNamePanel();
  methodRemoteParmsPanel=getMethodRemoteParmsPanel();
  jndiPanel.add(methodHomeNamePanel);
  jndiPanel.add(methodHomeParmsPanel);
  jndiPanel.add(remoteInterfaceListPanel);
  jndiPanel.add(methodRemoteNamePanel);
  jndiPanel.add(methodRemoteParmsPanel);
  controlPanel=new JPanel();
  actionButton=new JButton(JMeterUtils.getResString("jndi_method_button_reflect"));
  actionButton.addActionListener(this);
  actionButton.setActionCommand(REFLECT);
  controlPanel.add(actionButton);
  jndiPanel.add(controlPanel);
  mainPanel.add(jndiPanel);
  this.add(mainPanel);
  catClass.info("End : init1");
}
