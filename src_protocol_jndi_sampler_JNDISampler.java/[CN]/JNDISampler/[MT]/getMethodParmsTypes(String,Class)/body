{
  catClass.debug("Start : getMethodParms1");
  Method[] methods=objectClass.getMethods();
  Method method=null;
  Class[] methodParmTypes=null;
  Class[] parameterTypes=null;
  StringBuffer strbuff=new StringBuffer();
  for (int i=0; i < methods.length; i++) {
    parameterTypes=methods[i].getParameterTypes();
    strbuff.delete(0,strbuff.length());
    strbuff.append(methods[i].getName());
    strbuff.append("(");
    if (parameterTypes.length > 0) {
      for (int j=0; j < (parameterTypes.length - 1); j++) {
        strbuff.append(parameterTypes[j].toString());
        strbuff.append(", ");
      }
      strbuff.append(parameterTypes[parameterTypes.length - 1]);
    }
    strbuff.append(")");
    String name=strbuff.toString();
    if (catClass.isDebugEnabled()) {
      catClass.debug("getMethodParms1 : current method to be compared - " + name);
    }
    if (name.equals(methodName)) {
      method=methods[i];
      methodParmTypes=parameterTypes;
      break;
    }
  }
  Vector returnValues=new Vector();
  returnValues.add(method);
  returnValues.add(methodParmTypes);
  catClass.debug("End : getMethodParms1");
  return returnValues;
}
