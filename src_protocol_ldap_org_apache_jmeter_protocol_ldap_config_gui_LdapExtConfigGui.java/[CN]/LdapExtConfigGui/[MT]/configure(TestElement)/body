{
  super.configure(element);
  servername.setText(element.getPropertyAsString(LDAPExtSampler.SERVERNAME));
  port.setText(element.getPropertyAsString(LDAPExtSampler.PORT));
  rootdn.setText(element.getPropertyAsString(LDAPExtSampler.ROOTDN));
  scope.setSelectedIndex(element.getPropertyAsInt(LDAPExtSampler.SCOPE));
  countlim.setText(element.getPropertyAsString(LDAPExtSampler.COUNTLIM));
  timelim.setText(element.getPropertyAsString(LDAPExtSampler.TIMELIM));
  attribs.setText(element.getPropertyAsString(LDAPExtSampler.ATTRIBS));
  retobj.setSelected(element.getPropertyAsBoolean(LDAPExtSampler.RETOBJ));
  deref.setSelected(element.getPropertyAsBoolean(LDAPExtSampler.DEREF));
  connto.setText(element.getPropertyAsString(LDAPExtSampler.CONNTO));
  parseflag.setSelected(element.getPropertyAsBoolean(LDAPExtSampler.PARSEFLAG));
  secure.setSelected(element.getPropertyAsBoolean(LDAPExtSampler.SECURE));
  userpw.setText(element.getPropertyAsString(LDAPExtSampler.USERPW));
  userdn.setText(element.getPropertyAsString(LDAPExtSampler.USERDN));
  comparedn.setText(element.getPropertyAsString(LDAPExtSampler.COMPAREDN));
  comparefilt.setText(element.getPropertyAsString(LDAPExtSampler.COMPAREFILT));
  modddn.setText(element.getPropertyAsString(LDAPExtSampler.MODDDN));
  newdn.setText(element.getPropertyAsString(LDAPExtSampler.NEWDN));
  CardLayout cl=(CardLayout)(cards.getLayout());
  final String testType=element.getPropertyAsString(LDAPExtSampler.TEST);
  if (testType.equals(LDAPExtSampler.UNBIND)) {
    unbind.setSelected(true);
    cl.show(cards,CARDS_DEFAULT);
  }
 else   if (testType.equals(LDAPExtSampler.BIND)) {
    bind.setSelected(true);
    cl.show(cards,CARDS_BIND);
  }
 else   if (testType.equals(LDAPExtSampler.SBIND)) {
    sbind.setSelected(true);
    cl.show(cards,CARDS_BIND);
  }
 else   if (testType.equals(LDAPExtSampler.COMPARE)) {
    compare.setSelected(true);
    cl.show(cards,CARDS_COMPARE);
  }
 else   if (testType.equals(LDAPExtSampler.ADD)) {
    addTest.setSelected(true);
    add.setText(element.getPropertyAsString(LDAPExtSampler.BASE_ENTRY_DN));
    tableAddPanel.configure((TestElement)element.getProperty(LDAPExtSampler.ARGUMENTS).getObjectValue());
    cl.show(cards,CARDS_ADD);
  }
 else   if (testType.equals(LDAPExtSampler.MODIFY)) {
    modifyTest.setSelected(true);
    modify.setText(element.getPropertyAsString(LDAPExtSampler.BASE_ENTRY_DN));
    tableModifyPanel.configure((TestElement)element.getProperty(LDAPExtSampler.LDAPARGUMENTS).getObjectValue());
    cl.show(cards,CARDS_MODIFY);
  }
 else   if (testType.equals(LDAPExtSampler.DELETE)) {
    deleteTest.setSelected(true);
    delete.setText(element.getPropertyAsString(LDAPExtSampler.DELETE));
    cl.show(cards,CARDS_DELETE);
  }
 else   if (testType.equals(LDAPExtSampler.RENAME)) {
    rename.setSelected(true);
    cl.show(cards,CARDS_RENAME);
  }
 else   if (testType.equals(LDAPExtSampler.SEARCH)) {
    searchTest.setSelected(true);
    searchbase.setText(element.getPropertyAsString(LDAPExtSampler.SEARCHBASE));
    searchfilter.setText(element.getPropertyAsString(LDAPExtSampler.SEARCHFILTER));
    cl.show(cards,CARDS_SEARCH);
  }
}
