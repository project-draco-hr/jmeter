{
  SampleResult parent=new SampleResult();
  boolean isOK=false;
  boolean deleteMessages=getDeleteMessages();
  parent.setSampleLabel(getName());
  parent.setSamplerData(getServerType() + "://" + getUserName()+ "@"+ getServer());
  parent.sampleStart();
  try {
    Properties props=new Properties();
    Session session=Session.getDefaultInstance(props,null);
    Store store=session.getStore(getServerType());
    store.connect(getServer(),getUserName(),getPassword());
    Folder folder=store.getFolder(getFolder());
    if (deleteMessages) {
      folder.open(Folder.READ_WRITE);
    }
 else {
      folder.open(Folder.READ_ONLY);
    }
    Message messages[]=folder.getMessages();
    Message message;
    StringBuilder pdata=new StringBuilder();
    pdata.append(messages.length);
    pdata.append(" messages found\n");
    int n=getNumMessages();
    if (n == ALL_MESSAGES || n > messages.length) {
      n=messages.length;
    }
    for (int i=0; i < n; i++) {
      StringBuilder cdata=new StringBuilder();
      SampleResult child=new SampleResult();
      child.sampleStart();
      message=messages[i];
{
        child.setContentType(message.getContentType());
      }
      cdata.append("Message ");
      cdata.append(message.getMessageNumber());
      child.setSampleLabel(cdata.toString());
      child.setSamplerData(cdata.toString());
      cdata.setLength(0);
      if (isStoreMimeMessage()) {
        appendMessageAsMime(cdata,message);
      }
 else {
        appendMessageData(cdata,message);
      }
      if (deleteMessages) {
        message.setFlag(Flags.Flag.DELETED,true);
      }
      child.setResponseData(cdata.toString().getBytes());
      child.setDataType(SampleResult.TEXT);
      child.setResponseCodeOK();
      child.setResponseMessage("OK");
      child.setSuccessful(true);
      child.sampleEnd();
      parent.addSubResult(child);
    }
    folder.close(true);
    store.close();
    parent.setResponseData(pdata.toString().getBytes());
    parent.setDataType(SampleResult.TEXT);
    parent.setContentType("text/plain");
    parent.setResponseCodeOK();
    parent.setResponseMessage("OK");
    isOK=true;
  }
 catch (  NoClassDefFoundError ex) {
    log.debug("",ex);
    parent.setResponseCode("500");
    parent.setResponseMessage(ex.toString());
  }
catch (  MessagingException ex) {
    log.debug("",ex);
    parent.setResponseCode("500");
    parent.setResponseMessage(ex.toString());
  }
catch (  IOException ex) {
    log.debug("",ex);
    parent.setResponseCode("500");
    parent.setResponseMessage(ex.toString());
  }
  if (parent.getEndTime() == 0) {
    parent.sampleEnd();
  }
  parent.setSuccessful(isOK);
  return parent;
}
