{
  if (firstSample) {
    initSampling();
    firstSample=false;
  }
  String socketKey=getSocketKey();
  log.debug(getLabel() + " " + getFilename()+ " "+ getUsername()+ " "+ getPassword());
  SampleResult res=new SampleResult();
  boolean isSuccessful=false;
  res.setSampleLabel(getName());
  res.setSamplerData("Host: " + getServer() + " Port: "+ getPort());
  res.sampleStart();
  try {
    Socket sock=getSocket(socketKey);
    if (sock == null) {
      res.setResponseCode("500");
      res.setResponseMessage(getError());
    }
 else     if (protocolHandler == null) {
      res.setResponseCode("500");
      res.setResponseMessage("Protocol handler not found");
    }
 else {
      currentSocket=sock;
      InputStream is=sock.getInputStream();
      OutputStream os=sock.getOutputStream();
      String req=getRequestData();
      res.setSamplerData(req);
      protocolHandler.write(os,req);
      String in=protocolHandler.read(is);
      isSuccessful=setupSampleResult(res,in,null,protocolHandler.getCharset());
    }
  }
 catch (  ReadException ex) {
    log.error("",ex);
    isSuccessful=setupSampleResult(res,ex.getPartialResponse(),ex,protocolHandler.getCharset());
    closeSocket(socketKey);
  }
catch (  Exception ex) {
    log.error("",ex);
    isSuccessful=setupSampleResult(res,"",ex,protocolHandler.getCharset());
    closeSocket(socketKey);
  }
 finally {
    currentSocket=null;
    res.sampleEnd();
    res.setSuccessful(isSuccessful);
    if (!isReUseConnection() || isCloseConnection()) {
      closeSocket(socketKey);
    }
  }
  return res;
}
