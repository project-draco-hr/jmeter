{
  boolean merging=e.getActionCommand().equals("merge");
  if (!merging) {
    ReportActionRouter.getInstance().doActionNow(new ActionEvent(e.getSource(),e.getID(),"close"));
  }
  JFileChooser chooser=FileDialoger.promptToOpenFile(new String[]{".jmx"});
  if (chooser == null) {
    return;
  }
  boolean isTestPlan=false;
  InputStream reader=null;
  File f=null;
  try {
    f=chooser.getSelectedFile();
    if (f != null) {
      if (merging) {
        log.info("Merging file: " + f);
      }
 else {
        log.info("Loading file: " + f);
        FileServer.getFileServer().setBasedir(f.getAbsolutePath());
      }
      reader=new FileInputStream(f);
      HashTree tree=SaveService.loadTree(reader);
      isTestPlan=insertLoadedTree(e.getID(),tree);
    }
  }
 catch (  NoClassDefFoundError ex) {
    String msg=ex.getMessage();
    if (msg == null) {
      msg="Missing jar file - see log for details";
      log.warn("Missing jar file",ex);
    }
    JMeterUtils.reportErrorToUser(msg);
  }
catch (  Exception ex) {
    String msg=ex.getMessage();
    if (msg == null) {
      msg="Unexpected error - see log for details";
      log.warn("Unexpected error",ex);
    }
    JMeterUtils.reportErrorToUser(msg);
  }
 finally {
    try {
      reader.close();
    }
 catch (    IOException e1) {
    }
    ReportGuiPackage.getInstance().updateCurrentGui();
    ReportGuiPackage.getInstance().getMainFrame().repaint();
  }
  if (!merging && isTestPlan && f != null) {
    ReportGuiPackage.getInstance().setTestPlanFile(f.getAbsolutePath());
  }
}
