{
  final Properties buildProp=new Properties();
  final FileInputStream bp=new FileInputStream(getFileFromHome("build.properties"));
  buildProp.load(bp);
  bp.close();
  for (  Entry<Object,Object> entry : buildProp.entrySet()) {
    final String key=(String)entry.getKey();
    if (key.endsWith(".version")) {
      final String value=(String)entry.getValue();
      final String jarprop=key.replace(".version","");
      final String old=versions.put(jarprop,value);
      propNames.add(jarprop);
      if (old != null) {
        fail("Already have entry for " + key);
      }
    }
  }
  propNames.remove("jdom");
  propNames.remove("velocity");
  propNames.remove("commons-lang");
  propNames.remove("checkstyle-all");
  buildProp.remove("checkstyle-all.loc");
  versions.remove("checkstyle-all");
  prop=buildProp;
  final File licencesDir=getFileFromHome("licenses/bin");
  licencesDir.list(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      if (!name.equalsIgnoreCase("README.txt") && !name.equals(".svn")) {
        liceFiles.add(name.replace(".txt",""));
      }
      return false;
    }
  }
);
}
