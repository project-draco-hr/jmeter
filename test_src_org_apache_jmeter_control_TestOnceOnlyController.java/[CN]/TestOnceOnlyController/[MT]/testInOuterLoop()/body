{
  LoopController controller=new LoopController();
  final int outerLoopCount=4;
  controller.setLoops(outerLoopCount);
  OnceOnlyController sub_1=new OnceOnlyController();
  sub_1.addTestElement(new TestSampler("one"));
  sub_1.addTestElement(new TestSampler("two"));
  controller.addTestElement(sub_1);
  controller.addIterationListener(sub_1);
  controller.addTestElement(new TestSampler("three"));
  LoopController sub_2=new LoopController();
  final int innerLoopCount=3;
  sub_2.setLoops(innerLoopCount);
  GenericController sub_3=new GenericController();
  sub_2.addTestElement(new TestSampler("four"));
  sub_3.addTestElement(new TestSampler("five"));
  sub_3.addTestElement(new TestSampler("six"));
  sub_2.addTestElement(sub_3);
  sub_2.addTestElement(new TestSampler("seven"));
  controller.addTestElement(sub_2);
  String[] onlyOnceOrder=new String[]{"one","two"};
  String[] order=new String[]{"three","four","five","six","seven","four","five","six","seven","four","five","six","seven"};
  int expectedNoSamples=2 + (1 + (3 + 1) * innerLoopCount) * outerLoopCount;
  String[] expectedSamples=new String[expectedNoSamples];
  for (int i=0; i < onlyOnceOrder.length; i++) {
    expectedSamples[i]=onlyOnceOrder[i];
  }
  final int onceOnlySamples=onlyOnceOrder.length;
  for (int i=0; i < order.length * outerLoopCount; i++) {
    expectedSamples[onceOnlySamples + i]=order[i % order.length];
  }
  controller.setRunningVersion(true);
  sub_1.setRunningVersion(true);
  sub_2.setRunningVersion(true);
  sub_3.setRunningVersion(true);
  controller.initialize();
  int counter=0;
  TestElement sampler=null;
  while ((sampler=controller.next()) != null) {
    assertEquals(expectedSamples[counter],sampler.getPropertyAsString(TestElement.NAME));
    counter++;
  }
  assertEquals(expectedNoSamples,counter);
}
