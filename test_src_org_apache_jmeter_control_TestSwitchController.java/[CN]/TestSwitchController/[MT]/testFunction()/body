{
  JMeterContext jmctx=JMeterContextService.getContext();
  Map<?,?> variables=new HashMap<Object,Object>();
  ReplaceStringWithFunctions transformer=new ReplaceStringWithFunctions(new CompoundVariable(),variables);
  jmctx.setVariables(new JMeterVariables());
  JMeterVariables jmvars=jmctx.getVariables();
  jmvars.put("VAR","100");
  StringProperty prop=new StringProperty(SwitchController.SWITCH_VALUE,"${__counter(TRUE,VAR)}");
  JMeterProperty newProp=transformer.transformValue(prop);
  newProp.setRunningVersion(true);
  GenericController controller=new GenericController();
  SwitchController switch_cont=new SwitchController();
  switch_cont.setProperty(newProp);
  controller.addTestElement(new TestSampler("before"));
  controller.addTestElement(switch_cont);
  switch_cont.addTestElement(new TestSampler("0"));
  switch_cont.addTestElement(new TestSampler("1"));
  switch_cont.addTestElement(new TestSampler("2"));
  switch_cont.addTestElement(new TestSampler("3"));
  controller.addTestElement(new TestSampler("after"));
  controller.initialize();
  assertEquals("100",jmvars.get("VAR"));
  for (int i=1; i <= 3; i++) {
    assertEquals("Loop " + i,"before",nextName(controller));
    assertEquals("Loop " + i,"" + i,nextName(controller));
    assertEquals("Loop " + i,"" + i,jmvars.get("VAR"));
    assertEquals("Loop " + i,"after",nextName(controller));
    assertNull(nextName(controller));
  }
  int i=4;
  assertEquals("Loop " + i,"before",nextName(controller));
  assertEquals("Loop " + i,"0",nextName(controller));
  assertEquals("Loop " + i,"" + i,jmvars.get("VAR"));
  assertEquals("Loop " + i,"after",nextName(controller));
  assertNull(nextName(controller));
  assertEquals("4",jmvars.get("VAR"));
}
