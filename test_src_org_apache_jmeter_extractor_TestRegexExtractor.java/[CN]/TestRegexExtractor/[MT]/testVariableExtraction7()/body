{
  extractor.setRegex("Header1: (\\S+)");
  extractor.setTemplate("$1$");
  extractor.setMatchNumber(1);
  assertTrue("useBody should be true",extractor.useBody());
  assertFalse("useHdrs should be false",extractor.useHeaders());
  assertFalse("useURL should be false",extractor.useUrl());
  extractor.setUseField(RegexExtractor.USE_BODY);
  assertTrue("useBody should be true",extractor.useBody());
  assertFalse("useHdrs should be false",extractor.useHeaders());
  assertFalse("useURL should be false",extractor.useUrl());
  extractor.setUseField(RegexExtractor.USE_HDRS);
  assertTrue("useHdrs should be true",extractor.useHeaders());
  assertFalse("useBody should be false",extractor.useBody());
  assertFalse("useURL should be false",extractor.useUrl());
  extractor.process();
  assertEquals("Value1",vars.get("regVal"));
  extractor.setUseField(RegexExtractor.USE_URL);
  assertFalse("useHdrs should be false",extractor.useHeaders());
  assertFalse("useBody should be false",extractor.useBody());
  assertTrue("useURL should be true",extractor.useUrl());
}
