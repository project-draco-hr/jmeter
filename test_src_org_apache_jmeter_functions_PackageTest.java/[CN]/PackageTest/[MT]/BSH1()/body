{
  String fn="testfiles/BeanShellTest.bsh";
  try {
    BSHFParams(null,null,null);
    fail("Expected InvalidVariableException");
  }
 catch (  InvalidVariableException e) {
  }
  try {
    BSHFParams("","","");
    fail("Expected InvalidVariableException");
  }
 catch (  InvalidVariableException e) {
  }
  BeanShell bsh;
  try {
    bsh=BSHFParams("","",null);
    assertEquals("",bsh.execute());
  }
 catch (  InvalidVariableException e) {
    fail("BeanShell not present");
  }
  bsh=BSHFParams("1",null,null);
  assertEquals("1",bsh.execute());
  bsh=BSHFParams("1+1","VAR",null);
  assertEquals("2",bsh.execute());
  assertEquals("2",vars.get("VAR"));
  bsh=BSHFParams("return threadName",null,null);
  assertEquals(Thread.currentThread().getName(),bsh.execute());
  bsh=BSHFParams("return log.getClass().getName()",null,null);
  assertEquals(log.getClass().getName(),bsh.execute());
  bsh=BSHFParams("source (\"testfiles/BeanShellTest.bsh\")",null,null);
  assertEquals("9876",bsh.execute());
  bsh=BSHFParams("${SCR1}",null,null);
  vars.put("SCR1","var1=11");
  assertEquals("11",bsh.execute());
  vars.put("SCR1","var2=22");
  assertEquals("22",bsh.execute());
  vars.put("SCR1","x=var1");
  assertEquals("11",bsh.execute());
  vars.put("SCR1","++x");
  assertEquals("12",bsh.execute());
  vars.put("VAR1","test");
  vars.put("SCR1","vars.get(\"VAR1\")");
  assertEquals("test",bsh.execute());
  JMeterUtils.getJMeterProperties().setProperty(BeanShell.INIT_FILE,fn);
  bsh=BSHFParams("${SCR2}",null,null);
  vars.put("SCR2","getprop(\"" + BeanShell.INIT_FILE + "\")");
  assertEquals(fn,bsh.execute());
  vars.put("SCR2","getprop(\"avavaav\",\"default\")");
  assertEquals("default",bsh.execute());
  vars.put("SCR2","++i");
  assertEquals("1",bsh.execute());
  vars.put("SCR2","++i");
  assertEquals("2",bsh.execute());
}
