{
  HTTPSamplerBase config=new HTTPNullSampler();
  HTTPFileArg[] arg;
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(0,arg.length);
  config.setHTTPFiles(new HTTPFileArg[]{new HTTPFileArg("","","")});
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(0,arg.length);
  config.setHTTPFiles(new HTTPFileArg[]{new HTTPFileArg("","","text/plain")});
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(1,arg.length);
  assertEquals("text/plain",arg[0].getMimeType());
  assertEquals("",arg[0].getPath());
  assertEquals("",arg[0].getParamName());
  config.setHTTPFiles(new HTTPFileArg[]{new HTTPFileArg("/tmp/test123.tmp","test123.tmp","text/plain")});
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(1,arg.length);
  assertEquals("text/plain",arg[0].getMimeType());
  assertEquals("/tmp/test123.tmp",arg[0].getPath());
  assertEquals("test123.tmp",arg[0].getParamName());
  HTTPFileArg[] files={};
  config.setHTTPFiles(files);
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(0,arg.length);
  files=new HTTPFileArg[]{new HTTPFileArg(),new HTTPFileArg()};
  config.setHTTPFiles(files);
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(0,arg.length);
  files=new HTTPFileArg[]{new HTTPFileArg("file"),new HTTPFileArg()};
  config.setHTTPFiles(files);
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(1,arg.length);
  files=new HTTPFileArg[]{new HTTPFileArg(),new HTTPFileArg("file1"),new HTTPFileArg(),new HTTPFileArg("file2"),new HTTPFileArg()};
  config.setHTTPFiles(files);
  arg=config.getHTTPFiles();
  assertNotNull(arg);
  assertEquals(2,arg.length);
}
