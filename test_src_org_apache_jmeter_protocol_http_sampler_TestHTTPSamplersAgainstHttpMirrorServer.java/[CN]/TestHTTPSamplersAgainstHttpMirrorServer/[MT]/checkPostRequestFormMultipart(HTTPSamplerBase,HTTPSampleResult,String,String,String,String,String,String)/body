{
  if (contentEncoding == null || contentEncoding.length() == 0) {
    contentEncoding=samplerDefaultEncoding;
  }
  assertEquals(sampler.getUrl(),res.getURL());
  String boundaryString=getBoundaryStringFromContentType(res.getRequestHeaders());
  assertNotNull(boundaryString);
  byte[] expectedPostBody=createExpectedFormdataOutput(boundaryString,contentEncoding,titleField,titleValue,descriptionField,descriptionValue,true,true);
  assertTrue(isInRequestHeaders(res.getRequestHeaders(),HTTPSamplerBase.HEADER_CONTENT_TYPE,"multipart/form-data" + "; boundary=" + boundaryString));
  assertTrue(isInRequestHeaders(res.getRequestHeaders(),HTTPSamplerBase.HEADER_CONTENT_LENGTH,Integer.toString(expectedPostBody.length)));
  checkArraysHaveSameContent(expectedPostBody,res.getQueryString().getBytes(contentEncoding));
  String dataSentToMirrorServer=new String(res.getResponseData(),contentEncoding);
  int posDividerHeadersAndBody=getPositionOfBody(dataSentToMirrorServer);
  String headersSent=null;
  String bodySent=null;
  if (posDividerHeadersAndBody >= 0) {
    headersSent=dataSentToMirrorServer.substring(0,posDividerHeadersAndBody);
    bodySent=dataSentToMirrorServer.substring(posDividerHeadersAndBody + 2);
  }
  assertTrue(isInRequestHeaders(headersSent,HTTPSamplerBase.HEADER_CONTENT_TYPE,"multipart/form-data" + "; boundary=" + boundaryString));
  assertTrue(isInRequestHeaders(headersSent,HTTPSamplerBase.HEADER_CONTENT_LENGTH,Integer.toString(expectedPostBody.length)));
  checkArraysHaveSameContent(expectedPostBody,bodySent.getBytes(contentEncoding));
}
