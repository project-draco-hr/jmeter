{
  Properties messagesFr=new Properties();
  String languageBundle=bundlePath + "_" + language+ ".properties";
  InputStream inputStream=Thread.currentThread().getContextClassLoader().getResourceAsStream(languageBundle);
  if (inputStream == null) {
    Map<String,String> messagesAsProperties=new HashMap<>();
    for (    Map.Entry<Object,Object> entry : messages.entrySet()) {
      messagesAsProperties.put((String)entry.getKey(),(String)entry.getValue());
    }
    missingLabelsPerBundle.put(languageBundle,messagesAsProperties);
    return;
  }
  messagesFr.load(inputStream);
  Map<String,String> missingLabels=new TreeMap<>();
  for (  Map.Entry<Object,Object> entry : messages.entrySet()) {
    String key=(String)entry.getKey();
    final String I18NString="[\\d% ]+";
    if (!messagesFr.containsKey(key)) {
      String value=(String)entry.getValue();
      if (value.matches(I18NString)) {
      }
 else {
        missingLabels.put(key,(String)entry.getValue());
      }
    }
 else {
      String value=(String)entry.getValue();
      if (value.matches(I18NString)) {
        System.out.println("Unnecessary entry " + key + "="+ value+ " in "+ languageBundle);
      }
    }
  }
  if (!missingLabels.isEmpty()) {
    missingLabelsPerBundle.put(languageBundle,missingLabels);
  }
}
