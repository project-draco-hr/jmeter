{
  SampleResult res=new SampleResult();
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncoding());
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncodingWithDefault());
  assertEquals("DataType should be blank","",res.getDataType());
  assertNull(res.getDataEncodingNoDefault());
  res.setEncodingAndType(null);
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncoding());
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncodingWithDefault());
  assertEquals("DataType should be blank","",res.getDataType());
  assertNull(res.getDataEncodingNoDefault());
  res.setEncodingAndType("text/html");
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncoding());
  assertEquals(SampleResult.DEFAULT_ENCODING,res.getDataEncodingWithDefault());
  assertEquals("text",res.getDataType());
  assertNull(res.getDataEncodingNoDefault());
  res.setEncodingAndType("text/html; charset=aBcd");
  assertEquals("aBcd",res.getDataEncodingWithDefault());
  assertEquals("aBcd",res.getDataEncodingNoDefault());
  assertEquals("aBcd",res.getDataEncoding());
  assertEquals("text",res.getDataType());
  res.setEncodingAndType("text/html; charset=\"aBCd\"");
  assertEquals("aBCd",res.getDataEncodingWithDefault());
  assertEquals("aBCd",res.getDataEncodingNoDefault());
  assertEquals("aBCd",res.getDataEncoding());
  assertEquals("text",res.getDataType());
}
