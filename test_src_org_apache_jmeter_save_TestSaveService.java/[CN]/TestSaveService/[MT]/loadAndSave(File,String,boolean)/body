{
  boolean failed=false;
  FileStats orig=computeFileStats(new BufferedReader(new FileReader(testFile)));
  HashTree tree=SaveService.loadTree(testFile);
  ByteArrayOutputStream out=new ByteArrayOutputStream(1000000);
  try {
    SaveService.saveTree(tree,out);
  }
  finally {
    out.close();
  }
  ByteArrayInputStream ins=new ByteArrayInputStream(out.toByteArray());
  FileStats output=computeFileStats(new BufferedReader(new InputStreamReader(ins)));
  if ((checkSize && !orig.isSameSize(output)) || !orig.hasSameLinesCount(output)) {
    failed=true;
    System.out.println();
    System.out.println("Loading file testfiles/" + fileName + " and "+ "saving it back changes its size from "+ orig.size+ " to "+ output.size+ ".");
    if (!orig.hasSameLinesCount(output)) {
      System.out.println("Number of lines changes from " + orig.lines + " to "+ output.lines);
    }
    if (saveOut) {
      final File outFile=findTestFile("testfiles/" + fileName + ".out");
      System.out.println("Write " + outFile);
      FileOutputStream outf=null;
      try {
        outf=new FileOutputStream(outFile);
        outf.write(out.toByteArray());
      }
  finally {
        if (outf != null) {
          outf.close();
        }
      }
      System.out.println("Wrote " + outFile);
    }
  }
  return failed;
}
