{
  try {
    FS.readLine("test");
    fail("Expected IOException");
  }
 catch (  IOException ignored) {
  }
  try {
    FS.write("test","");
    fail("Expected IOException");
  }
 catch (  IOException ignored) {
  }
  assertFalse("Should not have any files open",FS.filesOpen());
  FS.closeFile("xxx");
  assertFalse("Should not have any files open",FS.filesOpen());
  String infile=findTestPath("testfiles/test.csv");
  FS.reserveFile(infile);
  assertFalse("Should not have any files open",FS.filesOpen());
  assertEquals("a1,b1,c1,d1",FS.readLine(infile));
  assertTrue("Should have some files open",FS.filesOpen());
  assertNotNull(FS.readLine(infile));
  assertNotNull(FS.readLine(infile));
  assertNotNull(FS.readLine(infile));
  assertEquals("a1,b1,c1,d1",FS.readLine(infile));
  assertNotNull(FS.readLine(infile));
  try {
    FS.write(infile,"");
    fail("Expected IOException");
  }
 catch (  IOException ignored) {
  }
  FS.closeFile(infile);
  assertFalse("Should not have any files open",FS.filesOpen());
  assertEquals("a1,b1,c1,d1",FS.readLine(infile));
  assertTrue("Should have some files open",FS.filesOpen());
  FS.closeFiles();
  assertFalse("Should not have any files open",FS.filesOpen());
  try {
    FS.readLine(infile);
    fail("Expected IOException");
  }
 catch (  IOException ignored) {
  }
  infile=findTestPath("testfiles/test.csv");
  FS.reserveFile(infile);
  assertFalse("Should not have any files open",FS.filesOpen());
  assertEquals("a1,b1,c1,d1",FS.readLine(infile));
  try {
    FS.setBasedir(System.getProperty("java.io.tmpdir"));
    fail("Expected IllegalStateException");
  }
 catch (  IllegalStateException ignored) {
    assertEquals("Files are still open, cannot change base directory",ignored.getMessage());
  }
  FS.closeFile(infile);
  FS.setBasedir(System.getProperty("java.io.temp"));
  FS.closeFiles();
  try {
    FS.setBasedir("x");
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException ignored) {
    assertEquals("jmxBase must not be null",ignored.getMessage());
  }
}
