{
  ListedHashTree tree1=new ListedHashTree("abcd");
  ListedHashTree tree2=new ListedHashTree("abcd");
  ListedHashTree tree3=new ListedHashTree("abcde");
  ListedHashTree tree4=new ListedHashTree("abcde");
  assertTrue(tree1.equals(tree1));
  assertTrue(tree1.equals(tree2));
  assertTrue(tree2.equals(tree1));
  assertTrue(tree2.equals(tree2));
  assertTrue(tree1.hashCode() == tree2.hashCode());
  assertTrue(tree3.equals(tree3));
  assertTrue(tree3.equals(tree4));
  assertTrue(tree4.equals(tree3));
  assertTrue(tree4.equals(tree4));
  assertTrue(tree3.hashCode() == tree4.hashCode());
  assertNotSame(tree1,tree2);
  assertNotSame(tree1,tree3);
  assertFalse(tree1.equals(tree3));
  assertFalse(tree3.equals(tree1));
  assertFalse(tree1.equals(tree4));
  assertFalse(tree4.equals(tree1));
  assertFalse(tree2.equals(tree3));
  assertFalse(tree3.equals(tree2));
  assertFalse(tree2.equals(tree4));
  assertFalse(tree4.equals(tree2));
  tree1.add("abcd",tree3);
  assertFalse(tree1.equals(tree2));
  assertFalse(tree2.equals(tree1));
  tree2.add("abcd",tree4);
  assertTrue(tree1.equals(tree2));
  assertTrue(tree2.equals(tree1));
  assertTrue(tree1.hashCode() == tree2.hashCode());
  tree1.add("a1");
  tree1.add("a2");
  tree2.add("a2");
  tree2.add("a1");
  assertFalse(tree1.equals(tree2));
  assertFalse(tree2.equals(tree1));
  if (tree1.hashCode() == tree2.hashCode()) {
    System.out.println("WARN: unequal ListedHashTrees should not have equal hashcodes");
  }
  tree4.add("abcdef");
  assertFalse(tree3.equals(tree4));
  assertFalse(tree4.equals(tree3));
}
