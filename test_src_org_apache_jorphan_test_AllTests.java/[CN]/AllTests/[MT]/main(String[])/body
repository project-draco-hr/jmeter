{
  if (args.length < 1) {
    System.out.println("You must specify a comma-delimited list of paths to search " + "for unit tests");
    System.exit(1);
  }
  String home=new File(System.getProperty("user.dir")).getParent();
  System.out.println("Setting JMeterHome: " + home);
  JMeterUtils.setJMeterHome(home);
  initializeLogging(args);
  initializeManager(args);
  log.info("JMeterVersion=" + JMeterUtils.getJMeterVersion());
  logprop("java.version",true);
  logprop("java.vm.name");
  logprop("java.vendor");
  logprop("java.home",true);
  logprop("user.home");
  logprop("user.dir",true);
  logprop("user.language");
  logprop("user.region");
  logprop("user.country");
  logprop("user.variant");
  log.info("Locale=" + Locale.getDefault().toString());
  logprop("os.name",true);
  logprop("os.version",true);
  logprop("os.arch");
  logprop("java.class.version");
  String cp=System.getProperty("java.class.path");
  String cpe[]=JOrphanUtils.split(cp,java.io.File.pathSeparator);
  StringBuilder sb=new StringBuilder(3000);
  sb.append("java.class.path=");
  for (int i=0; i < cpe.length; i++) {
    sb.append("\n");
    sb.append(cpe[i]);
    if (new java.io.File(cpe[i]).exists()) {
      sb.append(" - OK");
    }
 else {
      sb.append(" - ??");
    }
  }
  log.info(sb.toString());
  System.out.println("+++++++++++");
  logprop("java.awt.headless",true);
  logprop("java.awt.graphicsenv",true);
  System.out.println("------------");
  System.out.println("Creating test suite");
  TestSuite suite=suite(args[0]);
  int countTestCases=suite.countTestCases();
  System.out.println("Starting test run, test count = " + countTestCases);
  TestRunner.run(suite);
  System.exit(0);
}
